{"version":3,"sources":["../src/utils.js"],"names":["getUTCDate","getParametersValue","bufferToHexCodes","checkBufferParams","utilFromBase","utilToBase","utilConcatBuf","utilConcatView","utilDecodeTC","utilEncodeTC","isEqualBuffer","padNumber","toBase64","fromBase64","arrayBufferToString","stringToArrayBuffer","nearestPowerOf2","clearProps","date","Date","getTime","getTimezoneOffset","parameters","name","defaultValue","Object","inputBuffer","inputOffset","inputLength","byteLength","insertSpace","result","Uint8Array","item","str","toString","toUpperCase","length","trim","baseBlock","ArrayBuffer","error","inputBase","i","Math","pow","value","base","reserved","internalReserved","internalValue","biggest","retBuf","retView","j","basis","floor","buffers","outputLength","prevLength","buffer","set","views","view","buf","valueHex","condition1","condition2","warnings","push","bigIntBuffer","bigIntView","bigInt","smallIntBuffer","smallIntView","smallInt","modValue","tempBuf","slice","tempView","k","inputBuffer1","inputBuffer2","view1","view2","inputNumber","fullLength","dif","padding","Array","paddingString","join","concat","base64Template","base64UrlTemplate","input","useUrlTemplate","skipPadding","skipLeadingZeros","flag1","flag2","output","template","nonZeroPosition","charCodeAt","chr1","chr2","chr3","enc1","enc2","enc3","enc4","charAt","cutTailZeros","indexof","toSearch","test","incoming","String","fromCharCode","nonZeroStart","resultString","element","stringLength","resultBuffer","resultView","log2","log","round","object","propsArray","prop"],"mappings":"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","file":"utils.js","sourcesContent":["//**************************************************************************************\r\n/**\r\n * Making UTC date from local date\r\n * @param {Date} date Date to convert from\r\n * @returns {Date}\r\n */\r\nexport function getUTCDate(date)\r\n{\r\n\t// noinspection NestedFunctionCallJS, MagicNumberJS\r\n\treturn new Date(date.getTime() + (date.getTimezoneOffset() * 60000));\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Get value for input parameters, or set a default value\r\n * @param {Object} parameters\r\n * @param {string} name\r\n * @param defaultValue\r\n */\r\nexport function getParametersValue(parameters, name, defaultValue)\r\n{\r\n\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS\r\n\tif((parameters instanceof Object) === false)\r\n\t\treturn defaultValue;\r\n\t\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tif(name in parameters)\r\n\t\treturn parameters[name];\r\n\t\r\n\treturn defaultValue;\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Converts \"ArrayBuffer\" into a hexdecimal string\r\n * @param {ArrayBuffer} inputBuffer\r\n * @param {number} [inputOffset=0]\r\n * @param {number} [inputLength=inputBuffer.byteLength]\r\n * @param {boolean} [insertSpace=false]\r\n * @returns {string}\r\n */\r\nexport function bufferToHexCodes(inputBuffer, inputOffset = 0, inputLength = (inputBuffer.byteLength - inputOffset), insertSpace = false)\r\n{\r\n\tlet result = \"\";\r\n\t\r\n\tfor(const item of (new Uint8Array(inputBuffer, inputOffset, inputLength)))\r\n\t{\r\n\t\t// noinspection ChainedFunctionCallJS\r\n\t\tconst str = item.toString(16).toUpperCase();\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS\r\n\t\tif(str.length === 1)\r\n\t\t\tresult += \"0\";\r\n\t\t\r\n\t\tresult += str;\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(insertSpace)\r\n\t\t\tresult += \" \";\r\n\t}\r\n\t\r\n\treturn result.trim();\r\n}\r\n//**************************************************************************************\r\n// noinspection JSValidateJSDoc, FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Check input \"ArrayBuffer\" for common functions\r\n * @param {LocalBaseBlock} baseBlock\r\n * @param {ArrayBuffer} inputBuffer\r\n * @param {number} inputOffset\r\n * @param {number} inputLength\r\n * @returns {boolean}\r\n */\r\nexport function checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength)\r\n{\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif((inputBuffer instanceof ArrayBuffer) === false)\r\n\t{\r\n\t\t// noinspection JSUndefinedPropertyAssignment\r\n\t\tbaseBlock.error = \"Wrong parameter: inputBuffer must be \\\"ArrayBuffer\\\"\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif(inputBuffer.byteLength === 0)\r\n\t{\r\n\t\t// noinspection JSUndefinedPropertyAssignment\r\n\t\tbaseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif(inputOffset < 0)\r\n\t{\r\n\t\t// noinspection JSUndefinedPropertyAssignment\r\n\t\tbaseBlock.error = \"Wrong parameter: inputOffset less than zero\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif(inputLength < 0)\r\n\t{\r\n\t\t// noinspection JSUndefinedPropertyAssignment\r\n\t\tbaseBlock.error = \"Wrong parameter: inputLength less than zero\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif((inputBuffer.byteLength - inputOffset - inputLength) < 0)\r\n\t{\r\n\t\t// noinspection JSUndefinedPropertyAssignment\r\n\t\tbaseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Convert number from 2^base to 2^10\r\n * @param {Uint8Array} inputBuffer\r\n * @param {number} inputBase\r\n * @returns {number}\r\n */\r\nexport function utilFromBase(inputBuffer, inputBase)\r\n{\r\n\tlet result = 0;\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS\r\n\tif(inputBuffer.length === 1)\r\n\t\treturn inputBuffer[0];\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS\r\n\tfor(let i = (inputBuffer.length - 1); i >= 0; i--)\r\n\t\tresult += inputBuffer[(inputBuffer.length - 1) - i] * Math.pow(2, inputBase * i);\r\n\t\r\n\treturn result;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS, FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Convert number from 2^10 to 2^base\r\n * @param {!number} value The number to convert\r\n * @param {!number} base The base for 2^base\r\n * @param {number} [reserved=0] Pre-defined number of bytes in output array (-1 = limited by function itself)\r\n * @returns {ArrayBuffer}\r\n */\r\nexport function utilToBase(value, base, reserved = (-1))\r\n{\r\n\tconst internalReserved = reserved;\r\n\tlet internalValue = value;\r\n\t\r\n\tlet result = 0;\r\n\tlet biggest = Math.pow(2, base);\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tfor(let i = 1; i < 8; i++)\r\n\t{\r\n\t\tif(value < biggest)\r\n\t\t{\r\n\t\t\tlet retBuf;\r\n\t\t\t\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tif(internalReserved < 0)\r\n\t\t\t{\r\n\t\t\t\tretBuf = new ArrayBuffer(i);\r\n\t\t\t\tresult = i;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\tif(internalReserved < i)\r\n\t\t\t\t\treturn (new ArrayBuffer(0));\r\n\t\t\t\t\r\n\t\t\t\tretBuf = new ArrayBuffer(internalReserved);\r\n\t\t\t\t\r\n\t\t\t\tresult = internalReserved;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tconst retView = new Uint8Array(retBuf);\r\n\t\t\t\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tfor(let j = (i - 1); j >= 0; j--)\r\n\t\t\t{\r\n\t\t\t\tconst basis = Math.pow(2, j * base);\r\n\t\t\t\t\r\n\t\t\t\tretView[result - j - 1] = Math.floor(internalValue / basis);\r\n\t\t\t\tinternalValue -= (retView[result - j - 1]) * basis;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn retBuf;\r\n\t\t}\r\n\t\t\r\n\t\tbiggest *= Math.pow(2, base);\r\n\t}\r\n\t\r\n\treturn new ArrayBuffer(0);\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS\r\n/**\r\n * Concatenate two ArrayBuffers\r\n * @param {...ArrayBuffer} buffers Set of ArrayBuffer\r\n */\r\nexport function utilConcatBuf(...buffers)\r\n{\r\n\t//region Initial variables\r\n\tlet outputLength = 0;\r\n\tlet prevLength = 0;\r\n\t//endregion\r\n\t\r\n\t//region Calculate output length\r\n\t\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(const buffer of buffers)\r\n\t\toutputLength += buffer.byteLength;\r\n\t//endregion\r\n\t\r\n\tconst retBuf = new ArrayBuffer(outputLength);\r\n\tconst retView = new Uint8Array(retBuf);\r\n\t\r\n\tfor(const buffer of buffers)\r\n\t{\r\n\t\t// noinspection NestedFunctionCallJS\r\n\t\tretView.set(new Uint8Array(buffer), prevLength);\r\n\t\tprevLength += buffer.byteLength;\r\n\t}\r\n\t\r\n\treturn retBuf;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS\r\n/**\r\n * Concatenate two Uint8Array\r\n * @param {...Uint8Array} views Set of Uint8Array\r\n */\r\nexport function utilConcatView(...views)\r\n{\r\n\t//region Initial variables\r\n\tlet outputLength = 0;\r\n\tlet prevLength = 0;\r\n\t//endregion\r\n\t\r\n\t//region Calculate output length\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(const view of views)\r\n\t\toutputLength += view.length;\r\n\t//endregion\r\n\t\r\n\tconst retBuf = new ArrayBuffer(outputLength);\r\n\tconst retView = new Uint8Array(retBuf);\r\n\t\r\n\tfor(const view of views)\r\n\t{\r\n\t\tretView.set(view, prevLength);\r\n\t\tprevLength += view.length;\r\n\t}\r\n\t\r\n\treturn retView;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS\r\n/**\r\n * Decoding of \"two complement\" values\r\n * The function must be called in scope of instance of \"hexBlock\" class (\"valueHex\" and \"warnings\" properties must be present)\r\n * @returns {number}\r\n */\r\nexport function utilDecodeTC()\r\n{\r\n\tconst buf = new Uint8Array(this.valueHex);\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tif(this.valueHex.byteLength >= 2)\r\n\t{\r\n\t\t//noinspection JSBitwiseOperatorUsage, ConstantOnRightSideOfComparisonJS, LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst condition1 = (buf[0] === 0xFF) && (buf[1] & 0x80);\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst condition2 = (buf[0] === 0x00) && ((buf[1] & 0x80) === 0x00);\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(condition1 || condition2)\r\n\t\t\tthis.warnings.push(\"Needlessly long format\");\r\n\t}\r\n\t\r\n\t//region Create big part of the integer\r\n\tconst bigIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n\tconst bigIntView = new Uint8Array(bigIntBuffer);\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(let i = 0; i < this.valueHex.byteLength; i++)\r\n\t\tbigIntView[i] = 0;\r\n\t\r\n\t// noinspection MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\tbigIntView[0] = (buf[0] & 0x80); // mask only the biggest bit\r\n\t\r\n\tconst bigInt = utilFromBase(bigIntView, 8);\r\n\t//endregion\r\n\t\r\n\t//region Create small part of the integer\r\n\tconst smallIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n\tconst smallIntView = new Uint8Array(smallIntBuffer);\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(let j = 0; j < this.valueHex.byteLength; j++)\r\n\t\tsmallIntView[j] = buf[j];\r\n\t\r\n\t// noinspection MagicNumberJS\r\n\tsmallIntView[0] &= 0x7F; // mask biggest bit\r\n\t\r\n\tconst smallInt = utilFromBase(smallIntView, 8);\r\n\t//endregion\r\n\t\r\n\treturn (smallInt - bigInt);\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS, FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Encode integer value to \"two complement\" format\r\n * @param {number} value Value to encode\r\n * @returns {ArrayBuffer}\r\n */\r\nexport function utilEncodeTC(value)\r\n{\r\n\t// noinspection ConstantOnRightSideOfComparisonJS, ConditionalExpressionJS\r\n\tconst modValue = (value < 0) ? (value * (-1)) : value;\r\n\tlet bigInt = 128;\r\n\t\r\n\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\tfor(let i = 1; i < 8; i++)\r\n\t{\r\n\t\tif(modValue <= bigInt)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tif(value < 0)\r\n\t\t\t{\r\n\t\t\t\tconst smallInt = bigInt - modValue;\r\n\t\t\t\t\r\n\t\t\t\tconst retBuf = utilToBase(smallInt, 8, i);\r\n\t\t\t\tconst retView = new Uint8Array(retBuf);\r\n\t\t\t\t\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tretView[0] |= 0x80;\r\n\t\t\t\t\r\n\t\t\t\treturn retBuf;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet retBuf = utilToBase(modValue, 8, i);\r\n\t\t\tlet retView = new Uint8Array(retBuf);\r\n\t\t\t\r\n\t\t\t//noinspection JSBitwiseOperatorUsage, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\t\tif(retView[0] & 0x80)\r\n\t\t\t{\r\n\t\t\t\t//noinspection JSCheckFunctionSignatures\r\n\t\t\t\tconst tempBuf = retBuf.slice(0);\r\n\t\t\t\tconst tempView = new Uint8Array(tempBuf);\r\n\t\t\t\t\r\n\t\t\t\tretBuf = new ArrayBuffer(retBuf.byteLength + 1);\r\n\t\t\t\t// noinspection ReuseOfLocalVariableJS\r\n\t\t\t\tretView = new Uint8Array(retBuf);\r\n\t\t\t\t\r\n\t\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\t\tfor(let k = 0; k < tempBuf.byteLength; k++)\r\n\t\t\t\t\tretView[k + 1] = tempView[k];\r\n\t\t\t\t\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tretView[0] = 0x00;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn retBuf;\r\n\t\t}\r\n\t\t\r\n\t\tbigInt *= Math.pow(2, 8);\r\n\t}\r\n\t\r\n\treturn (new ArrayBuffer(0));\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleReturnPointsJS, ParameterNamingConventionJS\r\n/**\r\n * Compare two array buffers\r\n * @param {!ArrayBuffer} inputBuffer1\r\n * @param {!ArrayBuffer} inputBuffer2\r\n * @returns {boolean}\r\n */\r\nexport function isEqualBuffer(inputBuffer1, inputBuffer2)\r\n{\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tif(inputBuffer1.byteLength !== inputBuffer2.byteLength)\r\n\t\treturn false;\r\n\t\r\n\t// noinspection LocalVariableNamingConventionJS\r\n\tconst view1 = new Uint8Array(inputBuffer1);\r\n\t// noinspection LocalVariableNamingConventionJS\r\n\tconst view2 = new Uint8Array(inputBuffer2);\r\n\t\r\n\tfor(let i = 0; i < view1.length; i++)\r\n\t{\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(view1[i] !== view2[i])\r\n\t\t\treturn false;\r\n\t}\r\n\t\r\n\treturn true;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleReturnPointsJS\r\n/**\r\n * Pad input number with leade \"0\" if needed\r\n * @returns {string}\r\n * @param {number} inputNumber\r\n * @param {number} fullLength\r\n */\r\nexport function padNumber(inputNumber, fullLength)\r\n{\r\n\tconst str = inputNumber.toString(10);\r\n\t\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tif(fullLength < str.length)\r\n\t\treturn \"\";\r\n\t\r\n\tconst dif = fullLength - str.length;\r\n\t\r\n\tconst padding = new Array(dif);\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(let i = 0; i < dif; i++)\r\n\t\tpadding[i] = \"0\";\r\n\t\r\n\tconst paddingString = padding.join(\"\");\r\n\t\r\n\treturn paddingString.concat(str);\r\n}\r\n//**************************************************************************************\r\nconst base64Template = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\nconst base64UrlTemplate = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\";\r\n//**************************************************************************************\r\n// noinspection FunctionWithMultipleLoopsJS, OverlyComplexFunctionJS, FunctionTooLongJS, FunctionNamingConventionJS\r\n/**\r\n * Encode string into BASE64 (or \"base64url\")\r\n * @param {string} input\r\n * @param {boolean} useUrlTemplate If \"true\" then output would be encoded using \"base64url\"\r\n * @param {boolean} skipPadding Skip BASE-64 padding or not\r\n * @param {boolean} skipLeadingZeros Skip leading zeros in input data or not\r\n * @returns {string}\r\n */\r\nexport function toBase64(input, useUrlTemplate = false, skipPadding = false, skipLeadingZeros = false)\r\n{\r\n\tlet i = 0;\r\n\t\r\n\t// noinspection LocalVariableNamingConventionJS\r\n\tlet flag1 = 0;\r\n\t// noinspection LocalVariableNamingConventionJS\r\n\tlet flag2 = 0;\r\n\t\r\n\tlet output = \"\";\r\n\t\r\n\t// noinspection ConditionalExpressionJS\r\n\tconst template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n\t\r\n\tif(skipLeadingZeros)\r\n\t{\r\n\t\tlet nonZeroPosition = 0;\r\n\t\t\r\n\t\tfor(let i = 0; i < input.length; i++)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tif(input.charCodeAt(i) !== 0)\r\n\t\t\t{\r\n\t\t\t\tnonZeroPosition = i;\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection AssignmentToFunctionParameterJS\r\n\t\tinput = input.slice(nonZeroPosition);\r\n\t}\r\n\t\r\n\twhile(i < input.length)\r\n\t{\r\n\t\t// noinspection LocalVariableNamingConventionJS, IncrementDecrementResultUsedJS\r\n\t\tconst chr1 = input.charCodeAt(i++);\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(i >= input.length)\r\n\t\t\tflag1 = 1;\r\n\t\t// noinspection LocalVariableNamingConventionJS, IncrementDecrementResultUsedJS\r\n\t\tconst chr2 = input.charCodeAt(i++);\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(i >= input.length)\r\n\t\t\tflag2 = 1;\r\n\t\t// noinspection LocalVariableNamingConventionJS, IncrementDecrementResultUsedJS\r\n\t\tconst chr3 = input.charCodeAt(i++);\r\n\t\t\r\n\t\t// noinspection LocalVariableNamingConventionJS\r\n\t\tconst enc1 = chr1 >> 2;\r\n\t\t// noinspection LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst enc2 = ((chr1 & 0x03) << 4) | (chr2 >> 4);\r\n\t\t// noinspection LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tlet enc3 = ((chr2 & 0x0F) << 2) | (chr3 >> 6);\r\n\t\t// noinspection LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tlet enc4 = chr3 & 0x3F;\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\tif(flag1 === 1)\r\n\t\t{\r\n\t\t\t// noinspection NestedAssignmentJS, AssignmentResultUsedJS, MagicNumberJS\r\n\t\t\tenc3 = enc4 = 64;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tif(flag2 === 1)\r\n\t\t\t{\r\n\t\t\t\t// noinspection MagicNumberJS\r\n\t\t\t\tenc4 = 64;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS\r\n\t\tif(skipPadding)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS, MagicNumberJS\r\n\t\t\tif(enc3 === 64)\r\n\t\t\t\toutput += `${template.charAt(enc1)}${template.charAt(enc2)}`;\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS, MagicNumberJS\r\n\t\t\t\tif(enc4 === 64)\r\n\t\t\t\t\toutput += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}`;\r\n\t\t\t\telse\r\n\t\t\t\t\toutput += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\toutput += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n\t}\r\n\t\r\n\treturn output;\r\n}\r\n//**************************************************************************************\r\n// noinspection FunctionWithMoreThanThreeNegationsJS, FunctionWithMultipleLoopsJS, OverlyComplexFunctionJS, FunctionNamingConventionJS\r\n/**\r\n * Decode string from BASE64 (or \"base64url\")\r\n * @param {string} input\r\n * @param {boolean} [useUrlTemplate=false] If \"true\" then output would be encoded using \"base64url\"\r\n * @param {boolean} [cutTailZeros=false] If \"true\" then cut tailing zeroz from function result\r\n * @returns {string}\r\n */\r\nexport function fromBase64(input, useUrlTemplate = false, cutTailZeros = false)\r\n{\r\n\t// noinspection ConditionalExpressionJS\r\n\tconst template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n\t\r\n\t//region Aux functions\r\n\t// noinspection FunctionWithMultipleReturnPointsJS, NestedFunctionJS\r\n\tfunction indexof(toSearch)\r\n\t{\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, MagicNumberJS\r\n\t\tfor(let i = 0; i < 64; i++)\r\n\t\t{\r\n\t\t\t// noinspection NonBlockStatementBodyJS\r\n\t\t\tif(template.charAt(i) === toSearch)\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection MagicNumberJS\r\n\t\treturn 64;\r\n\t}\r\n\t\r\n\t// noinspection NestedFunctionJS\r\n\tfunction test(incoming)\r\n\t{\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, ConditionalExpressionJS, MagicNumberJS\r\n\t\treturn ((incoming === 64) ? 0x00 : incoming);\r\n\t}\r\n\t//endregion\r\n\t\r\n\tlet i = 0;\r\n\t\r\n\tlet output = \"\";\r\n\t\r\n\twhile(i < input.length)\r\n\t{\r\n\t\t// noinspection NestedFunctionCallJS, LocalVariableNamingConventionJS, IncrementDecrementResultUsedJS\r\n\t\tconst enc1 = indexof(input.charAt(i++));\r\n\t\t// noinspection NestedFunctionCallJS, LocalVariableNamingConventionJS, ConditionalExpressionJS, MagicNumberJS, IncrementDecrementResultUsedJS\r\n\t\tconst enc2 = (i >= input.length) ? 0x00 : indexof(input.charAt(i++));\r\n\t\t// noinspection NestedFunctionCallJS, LocalVariableNamingConventionJS, ConditionalExpressionJS, MagicNumberJS, IncrementDecrementResultUsedJS\r\n\t\tconst enc3 = (i >= input.length) ? 0x00 : indexof(input.charAt(i++));\r\n\t\t// noinspection NestedFunctionCallJS, LocalVariableNamingConventionJS, ConditionalExpressionJS, MagicNumberJS, IncrementDecrementResultUsedJS\r\n\t\tconst enc4 = (i >= input.length) ? 0x00 : indexof(input.charAt(i++));\r\n\t\t\r\n\t\t// noinspection LocalVariableNamingConventionJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst chr1 = (test(enc1) << 2) | (test(enc2) >> 4);\r\n\t\t// noinspection LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst chr2 = ((test(enc2) & 0x0F) << 4) | (test(enc3) >> 2);\r\n\t\t// noinspection LocalVariableNamingConventionJS, MagicNumberJS, NonShortCircuitBooleanExpressionJS\r\n\t\tconst chr3 = ((test(enc3) & 0x03) << 6) | test(enc4);\r\n\t\t\r\n\t\toutput += String.fromCharCode(chr1);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS, MagicNumberJS\r\n\t\tif(enc3 !== 64)\r\n\t\t\toutput += String.fromCharCode(chr2);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS, NonBlockStatementBodyJS, MagicNumberJS\r\n\t\tif(enc4 !== 64)\r\n\t\t\toutput += String.fromCharCode(chr3);\r\n\t}\r\n\t\r\n\tif(cutTailZeros)\r\n\t{\r\n\t\tconst outputLength = output.length;\r\n\t\tlet nonZeroStart = (-1);\r\n\t\t\r\n\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\tfor(let i = (outputLength - 1); i >= 0; i--)\r\n\t\t{\r\n\t\t\t// noinspection ConstantOnRightSideOfComparisonJS\r\n\t\t\tif(output.charCodeAt(i) !== 0)\r\n\t\t\t{\r\n\t\t\t\tnonZeroStart = i;\r\n\t\t\t\t// noinspection BreakStatementJS\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// noinspection NonBlockStatementBodyJS, NegatedIfStatementJS\r\n\t\tif(nonZeroStart !== (-1))\r\n\t\t\toutput = output.slice(0, nonZeroStart + 1);\r\n\t\telse\r\n\t\t\toutput = \"\";\r\n\t}\r\n\t\r\n\treturn output;\r\n}\r\n//**************************************************************************************\r\nexport function arrayBufferToString(buffer)\r\n{\r\n\tlet resultString = \"\";\r\n\tconst view = new Uint8Array(buffer);\r\n\t\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(const element of view)\r\n\t\tresultString += String.fromCharCode(element);\r\n\t\r\n\treturn resultString;\r\n}\r\n//**************************************************************************************\r\nexport function stringToArrayBuffer(str)\r\n{\r\n\tconst stringLength = str.length;\r\n\t\r\n\tconst resultBuffer = new ArrayBuffer(stringLength);\r\n\tconst resultView = new Uint8Array(resultBuffer);\r\n\t\r\n\t// noinspection NonBlockStatementBodyJS\r\n\tfor(let i = 0; i < stringLength; i++)\r\n\t\tresultView[i] = str.charCodeAt(i);\r\n\t\r\n\treturn resultBuffer;\r\n}\r\n//**************************************************************************************\r\nconst log2 = Math.log(2);\r\n//**************************************************************************************\r\n// noinspection FunctionNamingConventionJS\r\n/**\r\n * Get nearest to input length power of 2\r\n * @param {number} length Current length of existing array\r\n * @returns {number}\r\n */\r\nexport function nearestPowerOf2(length)\r\n{\r\n\tconst base = (Math.log(length) / log2);\r\n\t\r\n\tconst floor = Math.floor(base);\r\n\tconst round = Math.round(base);\r\n\t\r\n\t// noinspection ConditionalExpressionJS\r\n\treturn ((floor === round) ? floor : round);\r\n}\r\n//**************************************************************************************\r\n/**\r\n * Delete properties by name from specified object\r\n * @param {Object} object Object to delete properties from\r\n * @param {Array.<string>} propsArray Array of properties names\r\n */\r\nexport function clearProps(object, propsArray)\r\n{\r\n\tfor(const prop of propsArray)\r\n\t\tdelete object[prop];\r\n}\r\n//**************************************************************************************\r\n"]}