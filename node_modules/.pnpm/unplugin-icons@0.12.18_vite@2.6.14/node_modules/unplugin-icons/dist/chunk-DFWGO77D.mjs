// src/core/utils.ts
import { installPackage } from "@antfu/install-pkg";
import { sleep } from "@antfu/utils";
import { cyan, yellow } from "kolorist";
function camelize(str) {
  return str.replace(/-([a-z0-9])/g, (g) => g[1].toUpperCase());
}
function pascalize(str) {
  const camel = camelize(str);
  return camel[0].toUpperCase() + camel.slice(1);
}
function camelToKebab(key) {
  const result = key.replace(/:/g, "-").replace(/([A-Z])/g, " $1").trim();
  return result.split(/\s+/g).join("-").toLowerCase();
}
var warnned = new Set();
function warnOnce(msg) {
  if (!warnned.has(msg)) {
    warnned.add(msg);
    console.warn(yellow(`[unplugin-icons] ${msg}`));
  }
}
var pending;
var tasks = {};
async function tryInstallPkg(name) {
  if (pending)
    await pending;
  if (!tasks[name]) {
    console.log(cyan(`Installing ${name}...`));
    tasks[name] = pending = installPackage(name, { dev: true, preferOffline: true }).then(() => sleep(300)).catch((e) => {
      warnOnce(`Failed to install ${name}`);
      console.error(e);
    }).finally(() => {
      pending = void 0;
    });
  }
  return tasks[name];
}

export {
  camelize,
  pascalize,
  camelToKebab,
  warnOnce,
  tryInstallPkg
};
