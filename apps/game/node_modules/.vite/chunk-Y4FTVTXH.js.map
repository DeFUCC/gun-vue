{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/gun@0.2020.1235/node_modules/gun/gun.js"],
  "sourcesContent": [";(function(){\n\n  /* UNBUILD */\n  function USE(arg, req){\n    return req? require(arg) : arg.slice? USE[R(arg)] : function(mod, path){\n      arg(mod = {exports: {}});\n      USE[R(path)] = mod.exports;\n    }\n    function R(p){\n      return p.split('/').slice(-1).toString().replace('.js','');\n    }\n  }\n  if(typeof module !== \"undefined\"){ var MODULE = module }\n  /* UNBUILD */\n\n\t;USE(function(module){\n\t\t// Shim for generic javascript utilities.\n\t\tString.random = function(l, c){\n\t\t\tvar s = '';\n\t\t\tl = l || 24; // you are not going to make a 0 length random number, so no need to check type\n\t\t\tc = c || '0123456789ABCDEFGHIJKLMNOPQRSTUVWXZabcdefghijklmnopqrstuvwxyz';\n\t\t\twhile(l-- > 0){ s += c.charAt(Math.floor(Math.random() * c.length)) }\n\t\t\treturn s;\n\t\t}\n\t\tString.match = function(t, o){ var tmp, u;\n\t\t\tif('string' !== typeof t){ return false }\n\t\t\tif('string' == typeof o){ o = {'=': o} }\n\t\t\to = o || {};\n\t\t\ttmp = (o['='] || o['*'] || o['>'] || o['<']);\n\t\t\tif(t === tmp){ return true }\n\t\t\tif(u !== o['=']){ return false }\n\t\t\ttmp = (o['*'] || o['>']);\n\t\t\tif(t.slice(0, (tmp||'').length) === tmp){ return true }\n\t\t\tif(u !== o['*']){ return false }\n\t\t\tif(u !== o['>'] && u !== o['<']){\n\t\t\t\treturn (t >= o['>'] && t <= o['<'])? true : false;\n\t\t\t}\n\t\t\tif(u !== o['>'] && t >= o['>']){ return true }\n\t\t\tif(u !== o['<'] && t <= o['<']){ return true }\n\t\t\treturn false;\n\t\t}\n\t\tString.hash = function(s, c){ // via SO\n\t\t\tif(typeof s !== 'string'){ return }\n\t    c = c || 0; // CPU schedule hashing by\n\t    if(!s.length){ return c }\n\t    for(var i=0,l=s.length,n; i<l; ++i){\n\t      n = s.charCodeAt(i);\n\t      c = ((c<<5)-c)+n;\n\t      c |= 0;\n\t    }\n\t    return c;\n\t  }\n\t\tvar has = Object.prototype.hasOwnProperty;\n\t\tObject.plain = function(o){ return o? (o instanceof Object && o.constructor === Object) || Object.prototype.toString.call(o).match(/^\\[object (\\w+)\\]$/)[1] === 'Object' : false }\n\t\tObject.empty = function(o, n){\n\t\t\tfor(var k in o){ if(has.call(o, k) && (!n || -1==n.indexOf(k))){ return false } }\n\t\t\treturn true;\n\t\t}\n\t\tObject.keys = Object.keys || function(o){\n\t\t\tvar l = [];\n\t\t\tfor(var k in o){ if(has.call(o, k)){ l.push(k) } }\n\t\t\treturn l;\n\t\t}\n\t\t;(function(){ // max ~1ms or before stack overflow \n\t\t\tvar u, sT = setTimeout, l = 0, c = 0, sI = (typeof setImmediate !== ''+u && setImmediate) || sT; // queueMicrotask faster but blocks UI\n\t\t\tsT.poll = sT.poll || function(f){ //f(); return; // for testing\n\t\t\t\tif((1 >= (+new Date - l)) && c++ < 3333){ f(); return }\n\t\t\t\tsI(function(){ l = +new Date; f() },c=0)\n\t\t\t}\n\t\t}());\n\t\t;(function(){ // Too many polls block, this \"threads\" them in turns over a single thread in time.\n\t\t\tvar sT = setTimeout, t = sT.turn = sT.turn || function(f){ 1 == s.push(f) && p(T) }\n\t\t\t, s = t.s = [], p = sT.poll, i = 0, f, T = function(){\n\t\t\t\tif(f = s[i++]){ f() }\n\t\t\t\tif(i == s.length || 99 == i){\n\t\t\t\t\ts = t.s = s.slice(i);\n\t\t\t\t\ti = 0;\n\t\t\t\t}\n\t\t\t\tif(s.length){ p(T) }\n\t\t\t}\n\t\t}());\n\t\t;(function(){\n\t\t\tvar u, sT = setTimeout, T = sT.turn;\n\t\t\t(sT.each = sT.each || function(l,f,e,S){ S = S || 9; (function t(s,L,r){\n\t\t\t  if(L = (s = (l||[]).splice(0,S)).length){\n\t\t\t  \tfor(var i = 0; i < L; i++){\n\t\t\t  \t\tif(u !== (r = f(s[i]))){ break }\n\t\t\t  \t}\n\t\t\t  \tif(u === r){ T(t); return }\n\t\t\t  } e && e(r);\n\t\t\t}())})();\n\t\t}());\n\t})(USE, './shim');\n\n\t;USE(function(module){\n\t\t// On event emitter generic javascript utility.\n\t\tmodule.exports = function onto(tag, arg, as){\n\t\t\tif(!tag){ return {to: onto} }\n\t\t\tvar u, f = 'function' == typeof arg, tag = (this.tag || (this.tag = {}))[tag] || f && (\n\t\t\t\tthis.tag[tag] = {tag: tag, to: onto._ = { next: function(arg){ var tmp;\n\t\t\t\t\tif(tmp = this.to){ tmp.next(arg) }\n\t\t\t}}});\n\t\t\tif(f){\n\t\t\t\tvar be = {\n\t\t\t\t\toff: onto.off ||\n\t\t\t\t\t(onto.off = function(){\n\t\t\t\t\t\tif(this.next === onto._.next){ return !0 }\n\t\t\t\t\t\tif(this === this.the.last){\n\t\t\t\t\t\t\tthis.the.last = this.back;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.to.back = this.back;\n\t\t\t\t\t\tthis.next = onto._.next;\n\t\t\t\t\t\tthis.back.to = this.to;\n\t\t\t\t\t\tif(this.the.last === this.the){\n\t\t\t\t\t\t\tdelete this.on.tag[this.the.tag];\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\tto: onto._,\n\t\t\t\t\tnext: arg,\n\t\t\t\t\tthe: tag,\n\t\t\t\t\ton: this,\n\t\t\t\t\tas: as,\n\t\t\t\t};\n\t\t\t\t(be.back = tag.last || tag).to = be;\n\t\t\t\treturn tag.last = be;\n\t\t\t}\n\t\t\tif((tag = tag.to) && u !== arg){ tag.next(arg) }\n\t\t\treturn tag;\n\t\t};\n\t})(USE, './onto');\n\n\t;USE(function(module){\n\t\tUSE('./shim');\n\t\tmodule.exports = function(v){ // Valid values are a subset of JSON: null, binary, number (!Infinity), text, or a soul relation. Arrays need special algorithms to handle concurrency, so they are not supported directly. Use an extension that supports them if needed but research their problems first.\n\t\t\tif(v === undefined){ return false }\n\t\t\tif(v === null){ return true } // \"deletes\", nulling out keys.\n\t\t\tif(v === Infinity){ return false } // we want this to be, but JSON does not support it, sad face.\n\t\t\tif(v !== v){ return false } // can you guess what this checks for? ;)\n\t\t\tif('string' == typeof v // text!\n\t\t\t|| 'boolean' == typeof v\n\t\t\t|| 'number' == typeof v){\n\t\t\t\treturn true; // simple values are valid.\n\t\t\t}\n\t\t\tif(v && ('string' == typeof (v['#']||0)) && Object.empty(v, ['#'])){ return v['#'] } // is link\n\t\t\treturn false; // If not, everything else remaining is an invalid data type. Custom extensions can be built on top of these primitives to support other types.\n\t\t}\n\t})(USE, './valid');\n\n\t;USE(function(module){\n\t\tUSE('./shim');\n\t\tfunction State(){\n\t\t\tvar t = +new Date;\n\t\t\tif(last < t){\n\t\t\t\treturn N = 0, last = t + State.drift;\n\t\t\t}\n\t\t\treturn last = t + ((N += 1) / D) + State.drift;\n\t\t}\n\t\tState.drift = 0;\n\t\tvar NI = -Infinity, N = 0, D = 999, last = NI, u; // WARNING! In the future, on machines that are D times faster than 2016AD machines, you will want to increase D by another several orders of magnitude so the processing speed never out paces the decimal resolution (increasing an integer effects the state accuracy).\n\t\tState.is = function(n, k, o){ // convenience function to get the state on a key on a node and return it.\n\t\t\tvar tmp = (k && n && n._ && n._['>']) || o;\n\t\t\tif(!tmp){ return }\n\t\t\treturn ('number' == typeof (tmp = tmp[k]))? tmp : NI;\n\t\t}\n\t\tState.ify = function(n, k, s, v, soul){ // put a key's state on a node.\n\t\t\t(n = n || {})._ = n._ || {}; // safety check or init.\n\t\t\tif(soul){ n._['#'] = soul } // set a soul if specified.\n\t\t\tvar tmp = n._['>'] || (n._['>'] = {}); // grab the states data.\n\t\t\tif(u !== k && k !== '_'){\n\t\t\t\tif('number' == typeof s){ tmp[k] = s } // add the valid state.\n\t\t\t\tif(u !== v){ n[k] = v } // Note: Not its job to check for valid values!\n\t\t\t}\n\t\t\treturn n;\n\t\t}\n\t\tmodule.exports = State;\n\t})(USE, './state');\n\n\t;USE(function(module){\n\t\tUSE('./shim');\n\t\tfunction Dup(opt){\n\t\t\tvar dup = {s:{}}, s = dup.s;\n\t\t\topt = opt || {max: 999, age: 1000 * 9};//*/ 1000 * 9 * 3};\n\t\t\tdup.check = function(id){\n\t\t\t\tif(!s[id]){ return false }\n\t\t\t\treturn dt(id);\n\t\t\t}\n\t\t\tvar dt = dup.track = function(id){\n\t\t\t\tvar it = s[id] || (s[id] = {});\n\t\t\t\tit.was = dup.now = +new Date;\n\t\t\t\tif(!dup.to){ dup.to = setTimeout(dup.drop, opt.age + 9) }\n\t\t\t\treturn it;\n\t\t\t}\n\t\t\tdup.drop = function(age){\n\t\t\t\tdup.to = null;\n\t\t\t\tdup.now = +new Date;\n\t\t\t\tvar l = Object.keys(s);\n\t\t\t\tconsole.STAT && console.STAT(dup.now, +new Date - dup.now, 'dup drop keys'); // prev ~20% CPU 7% RAM 300MB // now ~25% CPU 7% RAM 500MB\n\t\t\t\tsetTimeout.each(l, function(id){ var it = s[id]; // TODO: .keys( is slow?\n\t\t\t\t\tif(it && (age || opt.age) > (dup.now - it.was)){ return }\n\t\t\t\t\tdelete s[id];\n\t\t\t\t},0,99);\n\t\t\t}\n\t\t\treturn dup;\n\t\t}\n\t\tmodule.exports = Dup;\n\t})(USE, './dup');\n\n\t;USE(function(module){\n\t\t// request / response module, for asking and acking messages.\n\t\tUSE('./onto'); // depends upon onto!\n\t\tmodule.exports = function ask(cb, as){\n\t\t\tif(!this.on){ return }\n\t\t\tvar lack = (this.opt||{}).lack || 9000;\n\t\t\tif(!('function' == typeof cb)){\n\t\t\t\tif(!cb){ return }\n\t\t\t\tvar id = cb['#'] || cb, tmp = (this.tag||'')[id];\n\t\t\t\tif(!tmp){ return }\n\t\t\t\tif(as){\n\t\t\t\t\ttmp = this.on(id, as);\n\t\t\t\t\tclearTimeout(tmp.err);\n\t\t\t\t\ttmp.err = setTimeout(function(){ tmp.off() }, lack);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar id = (as && as['#']) || random(9);\n\t\t\tif(!cb){ return id }\n\t\t\tvar to = this.on(id, cb, as);\n\t\t\tto.err = to.err || setTimeout(function(){ to.off();\n\t\t\t\tto.next({err: \"Error: No ACK yet.\", lack: true});\n\t\t\t}, lack);\n\t\t\treturn id;\n\t\t}\n\t\tvar random = String.random || function(){ return Math.random().toString(36).slice(2) }\n\t})(USE, './ask');\n\n\t;USE(function(module){\n\n\t\tfunction Gun(o){\n\t\t\tif(o instanceof Gun){ return (this._ = {$: this}).$ }\n\t\t\tif(!(this instanceof Gun)){ return new Gun(o) }\n\t\t\treturn Gun.create(this._ = {$: this, opt: o});\n\t\t}\n\n\t\tGun.is = function($){ return ($ instanceof Gun) || ($ && $._ && ($ === $._.$)) || false }\n\n\t\tGun.version = 0.2020;\n\n\t\tGun.chain = Gun.prototype;\n\t\tGun.chain.toJSON = function(){};\n\n\t\tUSE('./shim');\n\t\tGun.valid = USE('./valid');\n\t\tGun.state = USE('./state');\n\t\tGun.on = USE('./onto');\n\t\tGun.dup = USE('./dup');\n\t\tGun.ask = USE('./ask');\n\n\t\t;(function(){\n\t\t\tGun.create = function(at){\n\t\t\t\tat.root = at.root || at;\n\t\t\t\tat.graph = at.graph || {};\n\t\t\t\tat.on = at.on || Gun.on;\n\t\t\t\tat.ask = at.ask || Gun.ask;\n\t\t\t\tat.dup = at.dup || Gun.dup();\n\t\t\t\tvar gun = at.$.opt(at.opt);\n\t\t\t\tif(!at.once){\n\t\t\t\t\tat.on('in', universe, at);\n\t\t\t\t\tat.on('out', universe, at);\n\t\t\t\t\tat.on('put', map, at);\n\t\t\t\t\tGun.on('create', at);\n\t\t\t\t\tat.on('create', at);\n\t\t\t\t}\n\t\t\t\tat.once = 1;\n\t\t\t\treturn gun;\n\t\t\t}\n\t\t\tfunction universe(msg){\n\t\t\t\t//if(!F){ var eve = this; setTimeout(function(){ universe.call(eve, msg,1) },Math.random() * 100);return; } // ADD F TO PARAMS!\n\t\t\t\tif(!msg){ return }\n\t\t\t\tif(msg.out === universe){ this.to.next(msg); return }\n\t\t\t\tvar eve = this, as = eve.as, at = as.at || as, gun = at.$, dup = at.dup, tmp, DBG = msg.DBG;\n\t\t\t\t(tmp = msg['#']) || (tmp = msg['#'] = text_rand(9));\n\t\t\t\tif(dup.check(tmp)){ return } dup.track(tmp);\n\t\t\t\ttmp = msg._; msg._ = ('function' == typeof tmp)? tmp : function(){};\n\t\t\t\t(msg.$ && (msg.$ === (msg.$._||'').$)) || (msg.$ = gun);\n\t\t\t\tif(msg['@'] && !msg.put){ ack(msg) }\n\t\t\t\tif(!at.ask(msg['@'], msg)){ // is this machine listening for an ack?\n\t\t\t\t\tDBG && (DBG.u = +new Date);\n\t\t\t\t\tif(msg.put){ put(msg); return } else\n\t\t\t\t\tif(msg.get){ Gun.on.get(msg, gun) }\n\t\t\t\t}\n\t\t\t\tDBG && (DBG.uc = +new Date);\n\t\t\t\teve.to.next(msg);\n\t\t\t\tDBG && (DBG.ua = +new Date);\n\t\t\t\tif(msg.nts || msg.NTS){ return } // TODO: This shouldn't be in core, but fast way to prevent NTS spread. Delete this line after all peers have upgraded to newer versions.\n\t\t\t\tmsg.out = universe; at.on('out', msg);\n\t\t\t\tDBG && (DBG.ue = +new Date);\n\t\t\t}\n\t\t\tfunction put(msg){\n\t\t\t\tif(!msg){ return }\n\t\t\t\tvar ctx = msg._||'', root = ctx.root = ((ctx.$ = msg.$||'')._||'').root;\n\t\t\t\tif(msg['@'] && ctx.faith && !ctx.miss){ // TODO: AXE may split/route based on 'put' what should we do here? Detect @ in AXE? I think we don't have to worry, as DAM will route it on @.\n\t\t\t\t\tmsg.out = universe;\n\t\t\t\t\troot.on('out', msg);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tctx.latch = root.hatch; ctx.match = root.hatch = [];\n\t\t\t\tvar put = msg.put;\n\t\t\t\tvar DBG = ctx.DBG = msg.DBG, S = +new Date;\n\t\t\t\tif(put['#'] && put['.']){ /*root && root.on('put', msg);*/ return } // TODO: BUG! This needs to call HAM instead.\n\t\t\t\tDBG && (DBG.p = S);\n\t\t\t\tctx['#'] = msg['#'];\n\t\t\t\tctx.msg = msg;\n\t\t\t\tctx.all = 0;\n\t\t\t\tctx.stun = 1;\n\t\t\t\tvar nl = Object.keys(put);//.sort(); // TODO: This is unbounded operation, large graphs will be slower. Write our own CPU scheduled sort? Or somehow do it in below? Keys itself is not O(1) either, create ES5 shim over ?weak map? or custom which is constant.\n\t\t\t\tconsole.STAT && console.STAT(S, ((DBG||ctx).pk = +new Date) - S, 'put sort');\n\t\t\t\tvar ni = 0, nj, kl, soul, node, states, err, tmp;\n\t\t\t\t(function pop(o){\n\t\t\t\t\tif(nj != ni){ nj = ni;\n\t\t\t\t\t\tif(!(soul = nl[ni])){\n\t\t\t\t\t\t\tconsole.STAT && console.STAT(S, ((DBG||ctx).pd = +new Date) - S, 'put');\n\t\t\t\t\t\t\tfire(ctx);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!(node = put[soul])){ err = ERR+cut(soul)+\"no node.\" } else\n\t\t\t\t\t\tif(!(tmp = node._)){ err = ERR+cut(soul)+\"no meta.\" } else\n\t\t\t\t\t\tif(soul !== tmp['#']){ err = ERR+cut(soul)+\"soul not same.\" } else\n\t\t\t\t\t\tif(!(states = tmp['>'])){ err = ERR+cut(soul)+\"no state.\" }\n\t\t\t\t\t\tkl = Object.keys(node||{}); // TODO: .keys( is slow\n\t\t\t\t\t}\n\t\t\t\t\tif(err){\n\t\t\t\t\t\tmsg.err = ctx.err = err; // invalid data should error and stun the message.\n\t\t\t\t\t\tfire(ctx);\n\t\t\t\t\t\t//console.log(\"handle error!\", err) // handle!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tvar i = 0, key; o = o || 0;\n\t\t\t\t\twhile(o++ < 9 && (key = kl[i++])){\n\t\t\t\t\t\tif('_' === key){ continue }\n\t\t\t\t\t\tvar val = node[key], state = states[key];\n\t\t\t\t\t\tif(u === state){ err = ERR+cut(key)+\"on\"+cut(soul)+\"no state.\"; break }\n\t\t\t\t\t\tif(!valid(val)){ err = ERR+cut(key)+\"on\"+cut(soul)+\"bad \"+(typeof val)+cut(val); break }\n\t\t\t\t\t\t//ctx.all++; //ctx.ack[soul+key] = '';\n\t\t\t\t\t\tham(val, key, soul, state, msg);\n\t\t\t\t\t}\n\t\t\t\t\tif((kl = kl.slice(i)).length){ turn(pop); return }\n\t\t\t\t\t++ni; kl = null; pop(o);\n\t\t\t\t}());\n\t\t\t} Gun.on.put = put;\n\t\t\t// TODO: MARK!!! clock below, reconnect sync, SEA certify wire merge, User.auth taking multiple times, // msg put, put, say ack, hear loop...\n\t\t\t// WASIS BUG! first .once( undef 2nd good. .off othe rpeople: .open\n\t\t\tfunction ham(val, key, soul, state, msg){\n\t\t\t\tvar ctx = msg._||'', root = ctx.root, graph = root.graph, lot, tmp;\n\t\t\t\tvar vertex = graph[soul] || empty, was = state_is(vertex, key, 1), known = vertex[key];\n\t\t\t\t\n\t\t\t\tvar DBG = ctx.DBG; if(tmp = console.STAT){ if(!graph[soul] || !known){ tmp.has = (tmp.has || 0) + 1 } }\n\n\t\t\t\tvar now = State(), u;\n\t\t\t\tif(state > now){\n\t\t\t\t\tsetTimeout(function(){ ham(val, key, soul, state, msg) }, (tmp = state - now) > MD? MD : tmp); // Max Defer 32bit. :(\n\t\t\t\t\tconsole.STAT && console.STAT(((DBG||ctx).Hf = +new Date), tmp, 'future');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(state < was){ /*old;*/ if(!ctx.miss){ return } } // but some chains have a cache miss that need to re-fire. // TODO: Improve in future. // for AXE this would reduce rebroadcast, but GUN does it on message forwarding.\n\t\t\t\tif(!ctx.faith){ // TODO: BUG? Can this be used for cache miss as well? // Yes this was a bug, need to check cache miss for RAD tests, but should we care about the faith check now? Probably not.\n\t\t\t\t\tif(state === was && (val === known || L(val) <= L(known))){ /*console.log(\"same\");*/ /*same;*/ if(!ctx.miss){ return } } // same\n\t\t\t\t}\n\t\t\t\tctx.stun++; // TODO: 'forget' feature in SEA tied to this, bad approach, but hacked in for now. Any changes here must update there.\n\t\t\t\tvar aid = msg['#']+ctx.all++, id = {toString: function(){ return aid }, _: ctx}; id.toJSON = id.toString; // this *trick* makes it compatible between old & new versions.\n\t\t\t\tDBG && (DBG.ph = DBG.ph || +new Date);\n\t\t\t\troot.on('put', {'#': id, '@': msg['@'], put: {'#': soul, '.': key, ':': val, '>': state}, _: ctx});\n\t\t\t}\n\t\t\tfunction map(msg){\n\t\t\t\tvar DBG; if(DBG = (msg._||'').DBG){ DBG.pa = +new Date; DBG.pm = DBG.pm || +new Date}\n      \tvar eve = this, root = eve.as, graph = root.graph, ctx = msg._, put = msg.put, soul = put['#'], key = put['.'], val = put[':'], state = put['>'], id = msg['#'], tmp;\n      \tif((tmp = ctx.msg) && (tmp = tmp.put) && (tmp = tmp[soul])){ state_ify(tmp, key, state, val, soul) } // necessary! or else out messages do not get SEA transforms.\n\t\t\t\tgraph[soul] = state_ify(graph[soul], key, state, val, soul);\n\t\t\t\tif(tmp = (root.next||'')[soul]){ tmp.on('in', msg) }\n\t\t\t\tfire(ctx);\n\t\t\t\teve.to.next(msg);\n\t\t\t}\n\t\t\tfunction fire(ctx, msg){ var root;\n\t\t\t\tif(ctx.stop){ return }\n\t\t\t\tif(!ctx.err && 0 < --ctx.stun){ return } // TODO: 'forget' feature in SEA tied to this, bad approach, but hacked in for now. Any changes here must update there.\n\t\t\t\tctx.stop = 1;\n\t\t\t\tif(!(root = ctx.root)){ return }\n\t\t\t\tvar tmp = ctx.match; tmp.end = 1;\n\t\t\t\tif(tmp === root.hatch){ if(!(tmp = ctx.latch) || tmp.end){ delete root.hatch } else { root.hatch = tmp } }\n\t\t\t\tctx.hatch && ctx.hatch(); // TODO: rename/rework how put & this interact.\n\t\t\t\tsetTimeout.each(ctx.match, function(cb){cb && cb()}); \n\t\t\t\tif(!(msg = ctx.msg) || ctx.err || msg.err){ return }\n\t\t\t\tmsg.out = universe;\n\t\t\t\tctx.root.on('out', msg);\n\t\t\t}\n\t\t\tfunction ack(msg){ // aggregate ACKs.\n\t\t\t\tvar id = msg['@'] || '', ctx;\n\t\t\t\tif(!(ctx = id._)){ return }\n\t\t\t\tctx.acks = (ctx.acks||0) + 1;\n\t\t\t\tif(ctx.err = msg.err){\n\t\t\t\t\tmsg['@'] = ctx['#'];\n\t\t\t\t\tfire(ctx); // TODO: BUG? How it skips/stops propagation of msg if any 1 item is error, this would assume a whole batch/resync has same malicious intent.\n\t\t\t\t}\n\t\t\t\tif(!ctx.stop && !ctx.crack){ ctx.crack = ctx.match && ctx.match.push(function(){back(ctx)}) } // handle synchronous acks\n\t\t\t\tback(ctx);\n\t\t\t}\n\t\t\tfunction back(ctx){\n\t\t\t\tif(!ctx || !ctx.root){ return }\n\t\t\t\tif(ctx.stun || ctx.acks !== ctx.all){ return }\n\t\t\t\tctx.root.on('in', {'@': ctx['#'], err: ctx.err, ok: ctx.err? u : {'':1}});\n\t\t\t}\n\n\t\t\tvar ERR = \"Error: Invalid graph!\";\n\t\t\tvar cut = function(s){ return \" '\"+(''+s).slice(0,9)+\"...' \" }\n\t\t\tvar L = JSON.stringify, MD = 2147483647, State = Gun.state;\n\n\t\t}());\n\n\t\t;(function(){\n\t\t\tGun.on.get = function(msg, gun){\n\t\t\t\tvar root = gun._, get = msg.get, soul = get['#'], node = root.graph[soul], has = get['.'];\n\t\t\t\tvar next = root.next || (root.next = {}), at = next[soul];\n\t\t\t\t// queue concurrent GETs?\n\t\t\t\t// TODO: consider tagging original message into dup for DAM.\n\t\t\t\t// TODO: ^ above? In chat app, 12 messages resulted in same peer asking for `#user.pub` 12 times. (same with #user GET too, yipes!) // DAM note: This also resulted in 12 replies from 1 peer which all had same ##hash but none of them deduped because each get was different.\n\t\t\t\t// TODO: Moving quick hacks fixing these things to axe for now.\n\t\t\t\t// TODO: a lot of GET #foo then GET #foo.\"\" happening, why?\n\t\t\t\t// TODO: DAM's ## hash check, on same get ACK, producing multiple replies still, maybe JSON vs YSON?\n\t\t\t\t// TMP note for now: viMZq1slG was chat LEX query #.\n\t\t\t\t/*if(gun !== (tmp = msg.$) && (tmp = (tmp||'')._)){\n\t\t\t\t\tif(tmp.Q){ tmp.Q[msg['#']] = ''; return } // chain does not need to ask for it again.\n\t\t\t\t\ttmp.Q = {};\n\t\t\t\t}*/\n\t\t\t\t/*if(u === has){\n\t\t\t\t\tif(at.Q){\n\t\t\t\t\t\t//at.Q[msg['#']] = '';\n\t\t\t\t\t\t//return;\n\t\t\t\t\t}\n\t\t\t\t\tat.Q = {};\n\t\t\t\t}*/\n\t\t\t\tvar ctx = msg._||{}, DBG = ctx.DBG = msg.DBG;\n\t\t\t\tDBG && (DBG.g = +new Date);\n\t\t\t\t//console.log(\"GET:\", get, node, has);\n\t\t\t\tif(!node){ return root.on('get', msg) }\n\t\t\t\tif(has){\n\t\t\t\t\tif('string' != typeof has || u === node[has]){ return root.on('get', msg) }\n\t\t\t\t\tnode = state_ify({}, has, state_is(node, has), node[has], soul);\n\t\t\t\t\t// If we have a key in-memory, do we really need to fetch?\n\t\t\t\t\t// Maybe... in case the in-memory key we have is a local write\n\t\t\t\t\t// we still need to trigger a pull/merge from peers.\n\t\t\t\t}\n\t\t\t\t//Gun.window? Gun.obj.copy(node) : node; // HNPERF: If !browser bump Performance? Is this too dangerous to reference root graph? Copy / shallow copy too expensive for big nodes. Gun.obj.to(node); // 1 layer deep copy // Gun.obj.copy(node); // too slow on big nodes\n\t\t\t\tnode && ack(msg, node);\n\t\t\t\troot.on('get', msg); // send GET to storage adapters.\n\t\t\t}\n\t\t\tfunction ack(msg, node){\n\t\t\t\tvar S = +new Date, ctx = msg._||{}, DBG = ctx.DBG = msg.DBG;\n\t\t\t\tvar to = msg['#'], id = text_rand(9), keys = Object.keys(node||'').sort(), soul = ((node||'')._||'')['#'], kl = keys.length, j = 0, root = msg.$._.root, F = (node === root.graph[soul]);\n\t\t\t\tconsole.STAT && console.STAT(S, ((DBG||ctx).gk = +new Date) - S, 'got keys');\n\t\t\t\t// PERF: Consider commenting this out to force disk-only reads for perf testing? // TODO: .keys( is slow\n\t\t\t\tnode && (function go(){\n\t\t\t\t\tS = +new Date;\n\t\t\t\t\tvar i = 0, k, put = {}, tmp;\n\t\t\t\t\twhile(i < 9 && (k = keys[i++])){\n\t\t\t\t\t\tstate_ify(put, k, state_is(node, k), node[k], soul);\n\t\t\t\t\t}\n\t\t\t\t\tkeys = keys.slice(i);\n\t\t\t\t\t(tmp = {})[soul] = put; put = tmp;\n\t\t\t\t\tvar faith; if(F){ faith = function(){}; faith.ram = faith.faith = true; } // HNPERF: We're testing performance improvement by skipping going through security again, but this should be audited.\n\t\t\t\t\ttmp = keys.length;\n\t\t\t\t\tconsole.STAT && console.STAT(S, -(S - (S = +new Date)), 'got copied some');\n\t\t\t\t\tDBG && (DBG.ga = +new Date);\n\t\t\t\t\troot.on('in', {'@': to, '#': id, put: put, '%': (tmp? (id = text_rand(9)) : u), $: root.$, _: faith, DBG: DBG});\n\t\t\t\t\tconsole.STAT && console.STAT(S, +new Date - S, 'got in');\n\t\t\t\t\tif(!tmp){ return }\n\t\t\t\t\tsetTimeout.turn(go);\n\t\t\t\t}());\n\t\t\t\tif(!node){ root.on('in', {'@': msg['#']}) } // TODO: I don't think I like this, the default lS adapter uses this but \"not found\" is a sensitive issue, so should probably be handled more carefully/individually.\n\t\t\t} Gun.on.get.ack = ack;\n\t\t}());\n\n\t\t;(function(){\n\t\t\tGun.chain.opt = function(opt){\n\t\t\t\topt = opt || {};\n\t\t\t\tvar gun = this, at = gun._, tmp = opt.peers || opt;\n\t\t\t\tif(!Object.plain(opt)){ opt = {} }\n\t\t\t\tif(!Object.plain(at.opt)){ at.opt = opt }\n\t\t\t\tif('string' == typeof tmp){ tmp = [tmp] }\n\t\t\t\tif(tmp instanceof Array){\n\t\t\t\t\tif(!Object.plain(at.opt.peers)){ at.opt.peers = {}}\n\t\t\t\t\ttmp.forEach(function(url){\n\t\t\t\t\t\tvar p = {}; p.id = p.url = url;\n\t\t\t\t\t\tat.opt.peers[url] = at.opt.peers[url] || p;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tat.opt.peers = at.opt.peers || {};\n\t\t\t\tobj_each(opt, function each(k){ var v = this[k];\n\t\t\t\t\tif((this && this.hasOwnProperty(k)) || 'string' == typeof v || Object.empty(v)){ this[k] = v; return }\n\t\t\t\t\tif(v && v.constructor !== Object && !(v instanceof Array)){ return }\n\t\t\t\t\tobj_each(v, each);\n\t\t\t\t});\n\t\t\t\tGun.on('opt', at);\n\t\t\t\tat.opt.uuid = at.opt.uuid || function uuid(l){ return Gun.state().toString(36).replace('.','') + String.random(l||12) }\n\t\t\t\treturn gun;\n\t\t\t}\n\t\t}());\n\n\t\tvar obj_each = function(o,f){ Object.keys(o).forEach(f,o) }, text_rand = String.random, turn = setTimeout.turn, valid = Gun.valid, state_is = Gun.state.is, state_ify = Gun.state.ify, u, empty = {}, C;\n\n\t\tGun.log = function(){ return (!Gun.log.off && C.log.apply(C, arguments)), [].slice.call(arguments).join(' ') };\n\t\tGun.log.once = function(w,s,o){ return (o = Gun.log.once)[w] = o[w] || 0, o[w]++ || Gun.log(s) };\n\n\t\tif(typeof window !== \"undefined\"){ (window.GUN = window.Gun = Gun).window = window }\n\t\ttry{ if(typeof MODULE !== \"undefined\"){ MODULE.exports = Gun } }catch(e){}\n\t\tmodule.exports = Gun;\n\t\t\n\t\t(Gun.window||{}).console = (Gun.window||{}).console || {log: function(){}};\n\t\t(C = console).only = function(i, s){ return (C.only.i && i === C.only.i && C.only.i++) && (C.log.apply(C, arguments) || s) };\n\n\t\t;\"Please do not remove welcome log unless you are paying for a monthly sponsorship, thanks!\";\n\t\tGun.log.once(\"welcome\", \"Hello wonderful person! :) Thanks for using GUN, please ask for help on http://chat.gun.eco if anything takes you longer than 5min to figure out!\");\n\t})(USE, './root');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('./root');\n\t\tGun.chain.back = function(n, opt){ var tmp;\n\t\t\tn = n || 1;\n\t\t\tif(-1 === n || Infinity === n){\n\t\t\t\treturn this._.root.$;\n\t\t\t} else\n\t\t\tif(1 === n){\n\t\t\t\treturn (this._.back || this._).$;\n\t\t\t}\n\t\t\tvar gun = this, at = gun._;\n\t\t\tif(typeof n === 'string'){\n\t\t\t\tn = n.split('.');\n\t\t\t}\n\t\t\tif(n instanceof Array){\n\t\t\t\tvar i = 0, l = n.length, tmp = at;\n\t\t\t\tfor(i; i < l; i++){\n\t\t\t\t\ttmp = (tmp||empty)[n[i]];\n\t\t\t\t}\n\t\t\t\tif(u !== tmp){\n\t\t\t\t\treturn opt? gun : tmp;\n\t\t\t\t} else\n\t\t\t\tif((tmp = at.back)){\n\t\t\t\t\treturn tmp.$.back(n, opt);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif('function' == typeof n){\n\t\t\t\tvar yes, tmp = {back: at};\n\t\t\t\twhile((tmp = tmp.back)\n\t\t\t\t&& u === (yes = n(tmp, opt))){}\n\t\t\t\treturn yes;\n\t\t\t}\n\t\t\tif('number' == typeof n){\n\t\t\t\treturn (at.back || at).$.back(n - 1);\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tvar empty = {}, u;\n\t})(USE, './back');\n\n\t;USE(function(module){\n\t\t// WARNING: GUN is very simple, but the JavaScript chaining API around GUN\n\t\t// is complicated and was extremely hard to build. If you port GUN to another\n\t\t// language, consider implementing an easier API to build.\n\t\tvar Gun = USE('./root');\n\t\tGun.chain.chain = function(sub){\n\t\t\tvar gun = this, at = gun._, chain = new (sub || gun).constructor(gun), cat = chain._, root;\n\t\t\tcat.root = root = at.root;\n\t\t\tcat.id = ++root.once;\n\t\t\tcat.back = gun._;\n\t\t\tcat.on = Gun.on;\n\t\t\tcat.on('in', Gun.on.in, cat); // For 'in' if I add my own listeners to each then I MUST do it before in gets called. If I listen globally for all incoming data instead though, regardless of individual listeners, I can transform the data there and then as well.\n\t\t\tcat.on('out', Gun.on.out, cat); // However for output, there isn't really the global option. I must listen by adding my own listener individually BEFORE this one is ever called.\n\t\t\treturn chain;\n\t\t}\n\n\t\tfunction output(msg){\n\t\t\tvar put, get, at = this.as, back = at.back, root = at.root, tmp;\n\t\t\tif(!msg.$){ msg.$ = at.$ }\n\t\t\tthis.to.next(msg);\n\t\t\tif(at.err){ at.on('in', {put: at.put = u, $: at.$}); return }\n\t\t\tif(get = msg.get){\n\t\t\t\t/*if(u !== at.put){\n\t\t\t\t\tat.on('in', at);\n\t\t\t\t\treturn;\n\t\t\t\t}*/\n\t\t\t\tif(root.pass){ root.pass[at.id] = at; } // will this make for buggy behavior elsewhere?\n\t\t\t\tif(at.lex){ Object.keys(at.lex).forEach(function(k){ tmp[k] = at.lex[k] }, tmp = msg.get = msg.get || {}) }\n\t\t\t\tif(get['#'] || at.soul){\n\t\t\t\t\tget['#'] = get['#'] || at.soul;\n\t\t\t\t\tmsg['#'] || (msg['#'] = text_rand(9)); // A3120 ?\n\t\t\t\t\tback = (root.$.get(get['#'])._);\n\t\t\t\t\tif(!(get = get['.'])){ // soul\n\t\t\t\t\t\ttmp = back.ask && back.ask['']; // check if we have already asked for the full node\n\t\t\t\t\t\t(back.ask || (back.ask = {}))[''] = back; // add a flag that we are now.\n\t\t\t\t\t\tif(u !== back.put){ // if we already have data,\n\t\t\t\t\t\t\tback.on('in', back); // send what is cached down the chain\n\t\t\t\t\t\t\tif(tmp){ return } // and don't ask for it again.\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmsg.$ = back.$;\n\t\t\t\t\t} else\n\t\t\t\t\tif(obj_has(back.put, get)){ // TODO: support #LEX !\n\t\t\t\t\t\ttmp = back.ask && back.ask[get];\n\t\t\t\t\t\t(back.ask || (back.ask = {}))[get] = back.$.get(get)._;\n\t\t\t\t\t\tback.on('in', {get: get, put: {'#': back.soul, '.': get, ':': back.put[get], '>': state_is(root.graph[back.soul], get)}});\n\t\t\t\t\t\tif(tmp){ return }\n\t\t\t\t\t}\n\t\t\t\t\t\t/*put = (back.$.get(get)._);\n\t\t\t\t\t\tif(!(tmp = put.ack)){ put.ack = -1 }\n\t\t\t\t\t\tback.on('in', {\n\t\t\t\t\t\t\t$: back.$,\n\t\t\t\t\t\t\tput: Gun.state.ify({}, get, Gun.state(back.put, get), back.put[get]),\n\t\t\t\t\t\t\tget: back.get\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif(tmp){ return }\n\t\t\t\t\t} else\n\t\t\t\t\tif('string' != typeof get){\n\t\t\t\t\t\tvar put = {}, meta = (back.put||{})._;\n\t\t\t\t\t\tGun.obj.map(back.put, function(v,k){\n\t\t\t\t\t\t\tif(!Gun.text.match(k, get)){ return }\n\t\t\t\t\t\t\tput[k] = v;\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif(!Gun.obj.empty(put)){\n\t\t\t\t\t\t\tput._ = meta;\n\t\t\t\t\t\t\tback.on('in', {$: back.$, put: put, get: back.get})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(tmp = at.lex){\n\t\t\t\t\t\t\ttmp = (tmp._) || (tmp._ = function(){});\n\t\t\t\t\t\t\tif(back.ack < tmp.ask){ tmp.ask = back.ack }\n\t\t\t\t\t\t\tif(tmp.ask){ return }\n\t\t\t\t\t\t\ttmp.ask = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\troot.ask(ack, msg); // A3120 ?\n\t\t\t\t\treturn root.on('in', msg);\n\t\t\t\t}\n\t\t\t\t//if(root.now){ root.now[at.id] = root.now[at.id] || true; at.pass = {} }\n\t\t\t\tif(get['.']){\n\t\t\t\t\tif(at.get){\n\t\t\t\t\t\tmsg = {get: {'.': at.get}, $: at.$};\n\t\t\t\t\t\t(back.ask || (back.ask = {}))[at.get] = msg.$._; // TODO: PERFORMANCE? More elegant way?\n\t\t\t\t\t\treturn back.on('out', msg);\n\t\t\t\t\t}\n\t\t\t\t\tmsg = {get: at.lex? msg.get : {}, $: at.$};\n\t\t\t\t\treturn back.on('out', msg);\n\t\t\t\t}\n\t\t\t\t(at.ask || (at.ask = {}))[''] = at;\t //at.ack = at.ack || -1;\n\t\t\t\tif(at.get){\n\t\t\t\t\tget['.'] = at.get;\n\t\t\t\t\t(back.ask || (back.ask = {}))[at.get] = msg.$._; // TODO: PERFORMANCE? More elegant way?\n\t\t\t\t\treturn back.on('out', msg);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn back.on('out', msg);\n\t\t}; Gun.on.out = output;\n\n\t\tfunction input(msg, cat){ cat = cat || this.as; // TODO: V8 may not be able to optimize functions with different parameter calls, so try to do benchmark to see if there is any actual difference.\n\t\t\tvar root = cat.root, gun = msg.$ || (msg.$ = cat.$), at = (gun||'')._ || empty, tmp = msg.put||'', soul = tmp['#'], key = tmp['.'], change = (u !== tmp['='])? tmp['='] : tmp[':'], state = tmp['>'] || -Infinity, sat; // eve = event, at = data at, cat = chain at, sat = sub at (children chains).\n\t\t\tif(u !== msg.put && (u === tmp['#'] || u === tmp['.'] || (u === tmp[':'] && u === tmp['=']) || u === tmp['>'])){ // convert from old format\n\t\t\t\tif(!valid(tmp)){\n\t\t\t\t\tif(!(soul = ((tmp||'')._||'')['#'])){ console.log(\"chain not yet supported for\", tmp, '...', msg, cat); return; }\n\t\t\t\t\tgun = cat.root.$.get(soul);\n\t\t\t\t\treturn setTimeout.each(Object.keys(tmp).sort(), function(k){ // TODO: .keys( is slow // BUG? ?Some re-in logic may depend on this being sync?\n\t\t\t\t\t\tif('_' == k || u === (state = state_is(tmp, k))){ return }\n\t\t\t\t\t\tcat.on('in', {$: gun, put: {'#': soul, '.': k, '=': tmp[k], '>': state}, VIA: msg});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tcat.on('in', {$: at.back.$, put: {'#': soul = at.back.soul, '.': key = at.has || at.get, '=': tmp, '>': state_is(at.back.put, key)}, via: msg}); // TODO: This could be buggy! It assumes/approxes data, other stuff could have corrupted it.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif((msg.seen||'')[cat.id]){ return } (msg.seen || (msg.seen = function(){}))[cat.id] = cat; // help stop some infinite loops\n\n\t\t\tif(cat !== at){ // don't worry about this when first understanding the code, it handles changing contexts on a message. A soul chain will never have a different context.\n\t\t\t\tObject.keys(msg).forEach(function(k){ tmp[k] = msg[k] }, tmp = {}); // make copy of message\n\t\t\t\ttmp.get = cat.get || tmp.get;\n\t\t\t\tif(!cat.soul && !cat.has){ // if we do not recognize the chain type\n\t\t\t\t\ttmp.$$$ = tmp.$$$ || cat.$; // make a reference to wherever it came from.\n\t\t\t\t} else\n\t\t\t\tif(at.soul){ // a has (property) chain will have a different context sometimes if it is linked (to a soul chain). Anything that is not a soul or has chain, will always have different contexts.\n\t\t\t\t\ttmp.$ = cat.$;\n\t\t\t\t\ttmp.$$ = tmp.$$ || at.$;\n\t\t\t\t}\n\t\t\t\tmsg = tmp; // use the message with the new context instead;\n\t\t\t}\n\t\t\tunlink(msg, cat);\n\n\t\t\tif(((cat.soul/* && (cat.ask||'')['']*/) || msg.$$) && state >= state_is(root.graph[soul], key)){ // The root has an in-memory cache of the graph, but if our peer has asked for the data then we want a per deduplicated chain copy of the data that might have local edits on it.\n\t\t\t\t(tmp = root.$.get(soul)._).put = state_ify(tmp.put, key, state, change, soul);\n\t\t\t}\n\t\t\tif(!at.soul /*&& (at.ask||'')['']*/ && state >= state_is(root.graph[soul], key) && (sat = (root.$.get(soul)._.next||'')[key])){ // Same as above here, but for other types of chains. // TODO: Improve perf by preventing echoes recaching.\n\t\t\t\tsat.put = change; // update cache\n\t\t\t\tif('string' == typeof (tmp = valid(change))){\n\t\t\t\t\tsat.put = root.$.get(tmp)._.put || change; // share same cache as what we're linked to.\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.to && this.to.next(msg); // 1st API job is to call all chain listeners.\n\t\t\t// TODO: Make input more reusable by only doing these (some?) calls if we are a chain we recognize? This means each input listener would be responsible for when listeners need to be called, which makes sense, as they might want to filter.\n\t\t\tcat.any && setTimeout.each(Object.keys(cat.any), function(any){ (any = cat.any[any]) && any(msg) },0,99); // 1st API job is to call all chain listeners. // TODO: .keys( is slow // BUG: Some re-in logic may depend on this being sync.\n\t\t\tcat.echo && setTimeout.each(Object.keys(cat.echo), function(lat){ (lat = cat.echo[lat]) && lat.on('in', msg) },0,99); // & linked at chains // TODO: .keys( is slow // BUG: Some re-in logic may depend on this being sync.\n\n\t\t\tif(((msg.$$||'')._||at).soul){ // comments are linear, but this line of code is non-linear, so if I were to comment what it does, you'd have to read 42 other comments first... but you can't read any of those comments until you first read this comment. What!? // shouldn't this match link's check?\n\t\t\t\t// is there cases where it is a $$ that we do NOT want to do the following? \n\t\t\t\tif((sat = cat.next) && (sat = sat[key])){ // TODO: possible trick? Maybe have `ionmap` code set a sat? // TODO: Maybe we should do `cat.ask` instead? I guess does not matter.\n\t\t\t\t\ttmp = {}; Object.keys(msg).forEach(function(k){ tmp[k] = msg[k] });\n\t\t\t\t\ttmp.$ = (msg.$$||msg.$).get(tmp.get = key); delete tmp.$$; delete tmp.$$$;\n\t\t\t\t\tsat.on('in', tmp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlink(msg, cat);\n\t\t}; Gun.on.in = input;\n\n\t\tfunction link(msg, cat){ cat = cat || this.as || msg.$._;\n\t\t\tif(msg.$$ && this !== Gun.on){ return } // $$ means we came from a link, so we are at the wrong level, thus ignore it unless overruled manually by being called directly.\n\t\t\tif(!msg.put || cat.soul){ return } // But you cannot overrule being linked to nothing, or trying to link a soul chain - that must never happen.\n\t\t\tvar put = msg.put||'', link = put['=']||put[':'], tmp;\n\t\t\tvar root = cat.root, tat = root.$.get(put['#']).get(put['.'])._;\n\t\t\tif('string' != typeof (link = valid(link))){\n\t\t\t\tif(this === Gun.on){ (tat.echo || (tat.echo = {}))[cat.id] = cat } // allow some chain to explicitly force linking to simple data.\n\t\t\t\treturn; // by default do not link to data that is not a link.\n\t\t\t}\n\t\t\tif((tat.echo || (tat.echo = {}))[cat.id] // we've already linked ourselves so we do not need to do it again. Except... (annoying implementation details)\n\t\t\t\t&& !(root.pass||'')[cat.id]){ return } // if a new event listener was added, we need to make a pass through for it. The pass will be on the chain, not always the chain passed down. \n\t\t\tif(tmp = root.pass){ if(tmp[link+cat.id]){ return } tmp[link+cat.id] = 1 } // But the above edge case may \"pass through\" on a circular graph causing infinite passes, so we hackily add a temporary check for that.\n\n\t\t\t(tat.echo||(tat.echo={}))[cat.id] = cat; // set ourself up for the echo! // TODO: BUG? Echo to self no longer causes problems? Confirm.\n\n\t\t\tif(cat.has){ cat.link = link }\n\t\t\tvar sat = root.$.get(tat.link = link)._; // grab what we're linking to.\n\t\t\t(sat.echo || (sat.echo = {}))[tat.id] = tat; // link it.\n\t\t\tvar tmp = cat.ask||''; // ask the chain for what needs to be loaded next!\n\t\t\tif(tmp[''] || cat.lex){ // we might need to load the whole thing // TODO: cat.lex probably has edge case bugs to it, need more test coverage.\n\t\t\t\tsat.on('out', {get: {'#': link}});\n\t\t\t}\n\t\t\tsetTimeout.each(Object.keys(tmp), function(get, sat){ // if sub chains are asking for data. // TODO: .keys( is slow // BUG? ?Some re-in logic may depend on this being sync?\n\t\t\t\tif(!get || !(sat = tmp[get])){ return }\n\t\t\t\tsat.on('out', {get: {'#': link, '.': get}}); // go get it.\n\t\t\t},0,99);\n\t\t}; Gun.on.link = link;\n\n\t\tfunction unlink(msg, cat){ // ugh, so much code for seemingly edge case behavior.\n\t\t\tvar put = msg.put||'', change = (u !== put['='])? put['='] : put[':'], root = cat.root, link, tmp;\n\t\t\tif(u === change){ // 1st edge case: If we have a brand new database, no data will be found.\n\t\t\t\t// TODO: BUG! because emptying cache could be async from below, make sure we are not emptying a newer cache. So maybe pass an Async ID to check against?\n\t\t\t\t// TODO: BUG! What if this is a map? // Warning! Clearing things out needs to be robust against sync/async ops, or else you'll see `map val get put` test catastrophically fail because map attempts to link when parent graph is streamed before child value gets set. Need to differentiate between lack acks and force clearing.\n\t\t\t\tif(cat.soul && u !== cat.put){ return } // data may not be found on a soul, but if a soul already has data, then nothing can clear the soul as a whole.\n\t\t\t\t//if(!cat.has){ return }\n\t\t\t\ttmp = (msg.$$||msg.$||'')._||'';\n\t\t\t\tif(msg['@'] && (u !== tmp.put || u !== cat.put)){ return } // a \"not found\" from other peers should not clear out data if we have already found it.\n\t\t\t\t//if(cat.has && u === cat.put && !(root.pass||'')[cat.id]){ return } // if we are already unlinked, do not call again, unless edge case. // TODO: BUG! This line should be deleted for \"unlink deeply nested\".\n\t\t\t\tif(link = cat.link || msg.linked){\n\t\t\t\t\tdelete (root.$.get(link)._.echo||'')[cat.id];\n\t\t\t\t}\n\t\t\t\tif(cat.has){ // TODO: Empty out links, maps, echos, acks/asks, etc.?\n\t\t\t\t\tcat.link = null;\n\t\t\t\t}\n\t\t\t\tcat.put = u; // empty out the cache if, for example, alice's car's color no longer exists (relative to alice) if alice no longer has a car.\n\t\t\t\t// TODO: BUG! For maps, proxy this so the individual sub is triggered, not all subs.\n\t\t\t\tsetTimeout.each(Object.keys(cat.next||''), function(get, sat){ // empty out all sub chains. // TODO: .keys( is slow // BUG? ?Some re-in logic may depend on this being sync? // TODO: BUG? This will trigger deeper put first, does put logic depend on nested order? // TODO: BUG! For map, this needs to be the isolated child, not all of them.\n\t\t\t\t\tif(!(sat = cat.next[get])){ return }\n\t\t\t\t\t//if(cat.has && u === sat.put && !(root.pass||'')[sat.id]){ return } // if we are already unlinked, do not call again, unless edge case. // TODO: BUG! This line should be deleted for \"unlink deeply nested\".\n\t\t\t\t\tif(link){ delete (root.$.get(link).get(get)._.echo||'')[sat.id] }\n\t\t\t\t\tsat.on('in', {get: get, put: u, $: sat.$}); // TODO: BUG? Add recursive seen check?\n\t\t\t\t},0,99);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(cat.soul){ return } // a soul cannot unlink itself.\n\t\t\tif(msg.$$){ return } // a linked chain does not do the unlinking, the sub chain does. // TODO: BUG? Will this cancel maps?\n\t\t\tlink = valid(change); // need to unlink anytime we are not the same link, though only do this once per unlink (and not on init).\n\t\t\ttmp = msg.$._||'';\n\t\t\tif(link === tmp.link || (cat.has && !tmp.link)){\n\t\t\t\tif((root.pass||'')[cat.id] && 'string' !== typeof link){\n\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete (tmp.echo||'')[cat.id];\n\t\t\tunlink({get: cat.get, put: u, $: msg.$, linked: msg.linked = msg.linked || tmp.link}, cat); // unlink our sub chains.\n\t\t}; Gun.on.unlink = unlink;\n\n\t\tfunction ack(msg, ev){\n\t\t\t//if(!msg['%'] && (this||'').off){ this.off() } // do NOT memory leak, turn off listeners! Now handled by .ask itself\n\t\t\t// manhattan:\n\t\t\tvar as = this.as, at = as.$._, root = at.root, get = as.get||'', tmp = (msg.put||'')[get['#']]||'';\n\t\t\tif(!msg.put || ('string' == typeof get['.'] && u === tmp[get['.']])){\n\t\t\t\tif(u !== at.put){ return }\n\t\t\t\tif(!at.soul && !at.has){ return } // TODO: BUG? For now, only core-chains will handle not-founds, because bugs creep in if non-core chains are used as $ but we can revisit this later for more powerful extensions.\n\t\t\t\tat.ack = (at.ack || 0) + 1;\n\t\t\t\tat.on('in', {\n\t\t\t\t\tget: at.get,\n\t\t\t\t\tput: at.put = u,\n\t\t\t\t\t$: at.$,\n\t\t\t\t\t'@': msg['@']\n\t\t\t\t});\n\t\t\t\t/*(tmp = at.Q) && setTimeout.each(Object.keys(tmp), function(id){ // TODO: Temporary testing, not integrated or being used, probably delete.\n\t\t\t\t\tObject.keys(msg).forEach(function(k){ tmp[k] = msg[k] }, tmp = {}); tmp['@'] = id; // copy message\n\t\t\t\t\troot.on('in', tmp);\n\t\t\t\t}); delete at.Q;*/\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t(msg._||{}).miss = 1;\n\t\t\tGun.on.put(msg);\n\t\t\treturn; // eom\n\t\t}\n\n\t\tvar empty = {}, u, text_rand = String.random, valid = Gun.valid, obj_has = function(o, k){ return o && Object.prototype.hasOwnProperty.call(o, k) }, state = Gun.state, state_is = state.is, state_ify = state.ify;\n\t})(USE, './chain');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('./root');\n\t\tGun.chain.get = function(key, cb, as){\n\t\t\tvar gun, tmp;\n\t\t\tif(typeof key === 'string'){\n\t\t\t\tif(key.length == 0) {\t\n\t\t\t\t\t(gun = this.chain())._.err = {err: Gun.log('0 length key!', key)};\n\t\t\t\t\tif(cb){ cb.call(gun, gun._.err) }\n\t\t\t\t\treturn gun;\n\t\t\t\t}\n\t\t\t\tvar back = this, cat = back._;\n\t\t\t\tvar next = cat.next || empty;\n\t\t\t\tif(!(gun = next[key])){\n\t\t\t\t\tgun = key && cache(key, back);\n\t\t\t\t}\n\t\t\t\tgun = gun && gun.$;\n\t\t\t} else\n\t\t\tif('function' == typeof key){\n\t\t\t\tif(true === cb){ return soul(this, key, cb, as), this }\n\t\t\t\tgun = this;\n\t\t\t\tvar cat = gun._, opt = cb || {}, root = cat.root, id;\n\t\t\t\topt.at = cat;\n\t\t\t\topt.ok = key;\n\t\t\t\tvar wait = {}; // can we assign this to the at instead, like in once?\n\t\t\t\t//var path = []; cat.$.back(at => { at.get && path.push(at.get.slice(0,9))}); path = path.reverse().join('.');\n\t\t\t\tfunction any(msg, eve, f){\n\t\t\t\t\tif(any.stun){ return }\n\t\t\t\t\tif((tmp = root.pass) && !tmp[id]){ return }\n\t\t\t\t\tvar at = msg.$._, sat = (msg.$$||'')._, data = (sat||at).put, odd = (!at.has && !at.soul), test = {}, link, tmp;\n\t\t\t\t\tif(odd || u === data){ // handles non-core\n\t\t\t\t\t\tdata = (u === ((tmp = msg.put)||'')['='])? (u === (tmp||'')[':'])? tmp : tmp[':'] : tmp['='];\n\t\t\t\t\t}\n\t\t\t\t\tif(link = ('string' == typeof (tmp = Gun.valid(data)))){\n\t\t\t\t\t\tdata = (u === (tmp = root.$.get(tmp)._.put))? opt.not? u : data : tmp;\n\t\t\t\t\t}\n\t\t\t\t\tif(opt.not && u === data){ return }\n\t\t\t\t\tif(u === opt.stun){\n\t\t\t\t\t\tif((tmp = root.stun) && tmp.on){\n\t\t\t\t\t\t\tcat.$.back(function(a){ // our chain stunned?\n\t\t\t\t\t\t\t\ttmp.on(''+a.id, test = {});\n\t\t\t\t\t\t\t\tif((test.run || 0) < any.id){ return test } // if there is an earlier stun on gapless parents/self.\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t!test.run && tmp.on(''+at.id, test = {}); // this node stunned?\n\t\t\t\t\t\t\t!test.run && sat && tmp.on(''+sat.id, test = {}); // linked node stunned?\n\t\t\t\t\t\t\tif(any.id > test.run){\n\t\t\t\t\t\t\t\tif(!test.stun || test.stun.end){\n\t\t\t\t\t\t\t\t\ttest.stun = tmp.on('stun');\n\t\t\t\t\t\t\t\t\ttest.stun = test.stun && test.stun.last;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(test.stun && !test.stun.end){\n\t\t\t\t\t\t\t\t\t//if(odd && u === data){ return }\n\t\t\t\t\t\t\t\t\t//if(u === msg.put){ return } // \"not found\" acks will be found if there is stun, so ignore these.\n\t\t\t\t\t\t\t\t\t(test.stun.add || (test.stun.add = {}))[id] = function(){ any(msg,eve,1) } // add ourself to the stun callback list that is called at end of the write.\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(/*odd &&*/ u === data){ f = 0 } // if data not found, keep waiting/trying.\n\t\t\t\t\t\t/*if(f && u === data){\n\t\t\t\t\t\t\tcat.on('out', opt.out);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}*/\n\t\t\t\t\t\tif((tmp = root.hatch) && !tmp.end && u === opt.hatch && !f){ // quick hack! // What's going on here? Because data is streamed, we get things one by one, but a lot of developers would rather get a callback after each batch instead, so this does that by creating a wait list per chain id that is then called at the end of the batch by the hatch code in the root put listener.\n\t\t\t\t\t\t\tif(wait[at.$._.id]){ return } wait[at.$._.id] = 1;\n\t\t\t\t\t\t\ttmp.push(function(){any(msg,eve,1)});\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}; wait = {}; // end quick hack.\n\t\t\t\t\t}\n\t\t\t\t\t// call:\n\t\t\t\t\tif(root.pass){ if(root.pass[id+at.id]){ return } root.pass[id+at.id] = 1 }\n\t\t\t\t\tif(opt.on){ opt.ok.call(at.$, data, at.get, msg, eve || any); return } // TODO: Also consider breaking `this` since a lot of people do `=>` these days and `.call(` has slower performance.\n\t\t\t\t\tif(opt.v2020){ opt.ok(msg, eve || any); return }\n\t\t\t\t\tObject.keys(msg).forEach(function(k){ tmp[k] = msg[k] }, tmp = {}); msg = tmp; msg.put = data; // 2019 COMPATIBILITY! TODO: GET RID OF THIS!\n\t\t\t\t\topt.ok.call(opt.as, msg, eve || any); // is this the right\n\t\t\t\t};\n\t\t\t\tany.at = cat;\n\t\t\t\t//(cat.any||(cat.any=function(msg){ setTimeout.each(Object.keys(cat.any||''), function(act){ (act = cat.any[act]) && act(msg) },0,99) }))[id = String.random(7)] = any; // maybe switch to this in future?\n\t\t\t\t(cat.any||(cat.any={}))[id = String.random(7)] = any;\n\t\t\t\tany.off = function(){ any.stun = 1; if(!cat.any){ return } delete cat.any[id] }\n\t\t\t\tany.rid = rid; // logic from old version, can we clean it up now?\n\t\t\t\tany.id = opt.run || ++root.once; // used in callback to check if we are earlier than a write. // will this ever cause an integer overflow?\n\t\t\t\ttmp = root.pass; (root.pass = {})[id] = 1; // Explanation: test trade-offs want to prevent recursion so we add/remove pass flag as it gets fulfilled to not repeat, however map map needs many pass flags - how do we reconcile?\n\t\t\t\topt.out = opt.out || {get: {}};\n\t\t\t\tcat.on('out', opt.out);\n\t\t\t\troot.pass = tmp;\n\t\t\t\treturn gun;\n\t\t\t} else\n\t\t\tif('number' == typeof key){\n\t\t\t\treturn this.get(''+key, cb, as);\n\t\t\t} else\n\t\t\tif('string' == typeof (tmp = valid(key))){\n\t\t\t\treturn this.get(tmp, cb, as);\n\t\t\t} else\n\t\t\tif(tmp = this.get.next){\n\t\t\t\tgun = tmp(this, key);\n\t\t\t}\n\t\t\tif(!gun){\n\t\t\t\t(gun = this.chain())._.err = {err: Gun.log('Invalid get request!', key)}; // CLEAN UP\n\t\t\t\tif(cb){ cb.call(gun, gun._.err) }\n\t\t\t\treturn gun;\n\t\t\t}\n\t\t\tif(cb && 'function' == typeof cb){\n\t\t\t\tgun.get(cb, as);\n\t\t\t}\n\t\t\treturn gun;\n\t\t}\n\t\tfunction cache(key, back){\n\t\t\tvar cat = back._, next = cat.next, gun = back.chain(), at = gun._;\n\t\t\tif(!next){ next = cat.next = {} }\n\t\t\tnext[at.get = key] = at;\n\t\t\tif(back === cat.root.$){\n\t\t\t\tat.soul = key;\n\t\t\t} else\n\t\t\tif(cat.soul || cat.has){\n\t\t\t\tat.has = key;\n\t\t\t\t//if(obj_has(cat.put, key)){\n\t\t\t\t\t//at.put = cat.put[key];\n\t\t\t\t//}\n\t\t\t}\n\t\t\treturn at;\n\t\t}\n\t\tfunction soul(gun, cb, opt, as){\n\t\t\tvar cat = gun._, acks = 0, tmp;\n\t\t\tif(tmp = cat.soul || cat.link){ return cb(tmp, as, cat) }\n\t\t\tif(cat.jam){ return cat.jam.push([cb, as]) }\n\t\t\tcat.jam = [[cb,as]];\n\t\t\tgun.get(function go(msg, eve){\n\t\t\t\tif(u === msg.put && !cat.root.opt.super && (tmp = Object.keys(cat.root.opt.peers).length) && ++acks <= tmp){ // TODO: super should not be in core code, bring AXE up into core instead to fix? // TODO: .keys( is slow\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\teve.rid(msg);\n\t\t\t\tvar at = ((at = msg.$) && at._) || {}, i = 0, as;\n\t\t\t\ttmp = cat.jam; delete cat.jam; // tmp = cat.jam.splice(0, 100);\n\t\t\t\t//if(tmp.length){ process.nextTick(function(){ go(msg, eve) }) }\n\t\t\t\twhile(as = tmp[i++]){ //Gun.obj.map(tmp, function(as, cb){\n\t\t\t\t\tvar cb = as[0], id; as = as[1];\n\t\t\t\t\tcb && cb(id = at.link || at.soul || Gun.valid(msg.put) || ((msg.put||{})._||{})['#'], as, msg, eve);\n\t\t\t\t} //);\n\t\t\t}, {out: {get: {'.':true}}});\n\t\t\treturn gun;\n\t\t}\n\t\tfunction rid(at){\n\t\t\tvar cat = this.at || this.on;\n\t\t\tif(!at || cat.soul || cat.has){ return this.off() }\n\t\t\tif(!(at = (at = (at = at.$ || at)._ || at).id)){ return }\n\t\t\tvar map = cat.map, tmp, seen;\n\t\t\t//if(!map || !(tmp = map[at]) || !(tmp = tmp.at)){ return }\n\t\t\tif(tmp = (seen = this.seen || (this.seen = {}))[at]){ return true }\n\t\t\tseen[at] = true;\n\t\t\treturn;\n\t\t\t//tmp.echo[cat.id] = {}; // TODO: Warning: This unsubscribes ALL of this chain's listeners from this link, not just the one callback event.\n\t\t\t//obj.del(map, at); // TODO: Warning: This unsubscribes ALL of this chain's listeners from this link, not just the one callback event.\n\t\t\treturn;\n\t\t}\n\t\tvar empty = {}, valid = Gun.valid, u;\n\t})(USE, './get');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('./root');\n\t\tGun.chain.put = function(data, cb, as){ // I rewrote it :)\n\t\t\tvar gun = this, at = gun._, root = at.root;\n\t\t\tas = as || {};\n\t\t\tas.root = at.root;\n\t\t\tas.run || (as.run = root.once);\n\t\t\tstun(as, at.id); // set a flag for reads to check if this chain is writing.\n\t\t\tas.ack = as.ack || cb;\n\t\t\tas.via = as.via || gun;\n\t\t\tas.data = as.data || data;\n\t\t\tas.soul || (as.soul = at.soul || ('string' == typeof cb && cb));\n\t\t\tvar s = as.state = as.state || Gun.state();\n\t\t\tif('function' == typeof data){ data(function(d){ as.data = d; gun.put(u,u,as) }); return gun }\n\t\t\tif(!as.soul){ return get(as), gun }\n\t\t\tas.$ = root.$.get(as.soul); // TODO: This may not allow user chaining and similar?\n\t\t\tas.todo = [{it: as.data, ref: as.$}];\n\t\t\tas.turn = as.turn || turn;\n\t\t\tas.ran = as.ran || ran;\n\t\t\t//var path = []; as.via.back(at => { at.get && path.push(at.get.slice(0,9)) }); path = path.reverse().join('.');\n\t\t\t// TODO: Perf! We only need to stun chains that are being modified, not necessarily written to.\n\t\t\t(function walk(){\n\t\t\t\tvar to = as.todo, at = to.pop(), d = at.it, cid = at.ref && at.ref._.id, v, k, cat, tmp, g;\n\t\t\t\tstun(as, at.ref);\n\t\t\t\tif(tmp = at.todo){\n\t\t\t\t\tk = tmp.pop(); d = d[k];\n\t\t\t\t\tif(tmp.length){ to.push(at) }\n\t\t\t\t}\n\t\t\t\tk && (to.path || (to.path = [])).push(k);\n\t\t\t\tif(!(v = valid(d)) && !(g = Gun.is(d))){\n\t\t\t\t\tif(!Object.plain(d)){ (as.ack||noop).call(as, as.out = {err: as.err = Gun.log(\"Invalid data: \" + ((d && (tmp = d.constructor) && tmp.name) || typeof d) + \" at \" + (as.via.back(function(at){at.get && tmp.push(at.get)}, tmp = []) || tmp.join('.'))+'.'+(to.path||[]).join('.'))}); as.ran(as); return }\n\t\t\t\t\tvar seen = as.seen || (as.seen = []), i = seen.length;\n\t\t\t\t\twhile(i--){ if(d === (tmp = seen[i]).it){ v = d = tmp.link; break } }\n\t\t\t\t}\n\t\t\t\tif(k && v){ at.node = state_ify(at.node, k, s, d) } // handle soul later.\n\t\t\t\telse {\n\t\t\t\t\tas.seen.push(cat = {it: d, link: {}, todo: g? [] : Object.keys(d).sort().reverse(), path: (to.path||[]).slice(), up: at}); // Any perf reasons to CPU schedule this .keys( ?\n\t\t\t\t\tat.node = state_ify(at.node, k, s, cat.link);\n\t\t\t\t\t!g && cat.todo.length && to.push(cat);\n\t\t\t\t\t// ---------------\n\t\t\t\t\tvar id = as.seen.length;\n\t\t\t\t\t(as.wait || (as.wait = {}))[id] = '';\n\t\t\t\t\ttmp = (cat.ref = (g? d : k? at.ref.get(k) : at.ref))._;\n\t\t\t\t\t(tmp = (d && (d._||'')['#']) || tmp.soul || tmp.link)? resolve({soul: tmp}) : cat.ref.get(resolve, {run: as.run, /*hatch: 0,*/ v2020:1, out:{get:{'.':' '}}}); // TODO: BUG! This should be resolve ONLY soul to prevent full data from being loaded. // Fixed now?\n\t\t\t\t\t//setTimeout(function(){ if(F){ return } console.log(\"I HAVE NOT BEEN CALLED!\", path, id, cat.ref._.id, k) }, 9000); var F; // MAKE SURE TO ADD F = 1 below!\n\t\t\t\t\tfunction resolve(msg, eve){\n\t\t\t\t\t\tvar end = cat.link['#'];\n\t\t\t\t\t\tif(eve){ eve.off(); eve.rid(msg) } // TODO: Too early! Check all peers ack not found.\n\t\t\t\t\t\t// TODO: BUG maybe? Make sure this does not pick up a link change wipe, that it uses the changign link instead.\n\t\t\t\t\t\tvar soul = end || msg.soul || (tmp = (msg.$$||msg.$)._||'').soul || tmp.link || ((tmp = tmp.put||'')._||'')['#'] || tmp['#'] || (((tmp = msg.put||'') && msg.$$)? tmp['#'] : (tmp['=']||tmp[':']||'')['#']);\n\t\t\t\t\t\t!end && stun(as, msg.$);\n\t\t\t\t\t\tif(!soul && !at.link['#']){ // check soul link above us\n\t\t\t\t\t\t\t(at.wait || (at.wait = [])).push(function(){ resolve(msg, eve) }) // wait\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!soul){\n\t\t\t\t\t\t\tsoul = [];\n\t\t\t\t\t\t\t(msg.$$||msg.$).back(function(at){\n\t\t\t\t\t\t\t\tif(tmp = at.soul || at.link){ return soul.push(tmp) }\n\t\t\t\t\t\t\t\tsoul.push(at.get);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tsoul = soul.reverse().join('/');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcat.link['#'] = soul;\n\t\t\t\t\t\t!g && (((as.graph || (as.graph = {}))[soul] = (cat.node || (cat.node = {_:{}})))._['#'] = soul);\n\t\t\t\t\t\tdelete as.wait[id];\n\t\t\t\t\t\tcat.wait && setTimeout.each(cat.wait, function(cb){ cb && cb() });\n\t\t\t\t\t\tas.ran(as);\n\t\t\t\t\t};\n\t\t\t\t\t// ---------------\n\t\t\t\t}\n\t\t\t\tif(!to.length){ return as.ran(as) }\n\t\t\t\tas.turn(walk);\n\t\t\t}());\n\t\t\treturn gun;\n\t\t}\n\n\t\tfunction stun(as, id){\n\t\t\tif(!id){ return } id = (id._||'').id||id;\n\t\t\tvar run = as.root.stun || (as.root.stun = {on: Gun.on}), test = {}, tmp;\n\t\t\tas.stun || (as.stun = run.on('stun', function(){ }));\n\t\t\tif(tmp = run.on(''+id)){ tmp.the.last.next(test) }\n\t\t\tif(test.run >= as.run){ return }\n\t\t\trun.on(''+id, function(test){\n\t\t\t\tif(as.stun.end){\n\t\t\t\t\tthis.off();\n\t\t\t\t\tthis.to.next(test);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttest.run = test.run || as.run;\n\t\t\t\ttest.stun = test.stun || as.stun; return;\n\t\t\t\tif(this.to.to){\n\t\t\t\t\tthis.the.last.next(test);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttest.stun = as.stun;\n\t\t\t});\n\t\t}\n\n\t\tfunction ran(as){\n\t\t\tif(as.err){ ran.end(as.stun, as.root); return } // move log handle here.\n\t\t\tif(as.todo.length || as.end || !Object.empty(as.wait)){ return } as.end = 1;\n\t\t\tvar cat = (as.$.back(-1)._), root = cat.root, ask = cat.ask(function(ack){\n\t\t\t\troot.on('ack', ack);\n\t\t\t\tif(ack.err){ Gun.log(ack) }\n\t\t\t\tif(++acks > (as.acks || 0)){ this.off() } // Adjustable ACKs! Only 1 by default.\n\t\t\t\tif(!as.ack){ return }\n\t\t\t\tas.ack(ack, this);\n\t\t\t}, as.opt), acks = 0, stun = as.stun, tmp;\n\t\t\t(tmp = function(){ // this is not official yet, but quick solution to hack in for now.\n\t\t\t\tif(!stun){ return }\n\t\t\t\tran.end(stun, root);\n\t\t\t\tsetTimeout.each(Object.keys(stun = stun.add||''), function(cb){ if(cb = stun[cb]){cb()} }); // resume the stunned reads // Any perf reasons to CPU schedule this .keys( ?\n\t\t\t}).hatch = tmp; // this is not official yet ^\n\t\t\t//console.log(1, \"PUT\", as.run, as.graph);\n\t\t\t(as.via._).on('out', {put: as.out = as.graph, opt: as.opt, '#': ask, _: tmp});\n\t\t}; ran.end = function(stun,root){\n\t\t\tstun.end = noop; // like with the earlier id, cheaper to make this flag a function so below callbacks do not have to do an extra type check.\n\t\t\tif(stun.the.to === stun && stun === stun.the.last){ delete root.stun }\n\t\t\tstun.off();\n\t\t}\n\n\t\tfunction get(as){\n\t\t\tvar at = as.via._, tmp;\n\t\t\tas.via = as.via.back(function(at){\n\t\t\t\tif(at.soul || !at.get){ return at.$ }\n\t\t\t\ttmp = as.data; (as.data = {})[at.get] = tmp;\n\t\t\t});\n\t\t\tif(!as.via || !as.via._.soul){\n\t\t\t\tas.via = at.root.$.get(((as.data||'')._||'')['#'] || at.$.back('opt.uuid')())\n\t\t\t}\n\t\t\tas.via.put(as.data, as.ack, as);\n\t\t\t\n\n\t\t\treturn;\n\t\t\tif(at.get && at.back.soul){\n\t\t\t\ttmp = as.data;\n\t\t\t\tas.via = at.back.$;\n\t\t\t\t(as.data = {})[at.get] = tmp; \n\t\t\t\tas.via.put(as.data, as.ack, as);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tvar u, empty = {}, noop = function(){}, turn = setTimeout.turn, valid = Gun.valid, state_ify = Gun.state.ify;\n\t\tvar iife = function(fn,as){fn.call(as||empty)}\n\t})(USE, './put');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('./root');\n\t\tUSE('./chain');\n\t\tUSE('./back');\n\t\tUSE('./put');\n\t\tUSE('./get');\n\t\tmodule.exports = Gun;\n\t})(USE, './index');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('./index');\n\t\tGun.chain.on = function(tag, arg, eas, as){ // don't rewrite!\n\t\t\tvar gun = this, cat = gun._, root = cat.root, act, off, id, tmp;\n\t\t\tif(typeof tag === 'string'){\n\t\t\t\tif(!arg){ return cat.on(tag) }\n\t\t\t\tact = cat.on(tag, arg, eas || cat, as);\n\t\t\t\tif(eas && eas.$){\n\t\t\t\t\t(eas.subs || (eas.subs = [])).push(act);\n\t\t\t\t}\n\t\t\t\treturn gun;\n\t\t\t}\n\t\t\tvar opt = arg;\n\t\t\t(opt = (true === opt)? {change: true} : opt || {}).not = 1; opt.on = 1;\n\t\t\t//opt.at = cat;\n\t\t\t//opt.ok = tag;\n\t\t\t//opt.last = {};\n\t\t\tvar wait = {}; // can we assign this to the at instead, like in once?\n\t\t\tgun.get(tag, opt);\n\t\t\t/*gun.get(function on(data,key,msg,eve){ var $ = this;\n\t\t\t\tif(tmp = root.hatch){ // quick hack!\n\t\t\t\t\tif(wait[$._.id]){ return } wait[$._.id] = 1;\n\t\t\t\t\ttmp.push(function(){on.call($, data,key,msg,eve)});\n\t\t\t\t\treturn;\n\t\t\t\t}; wait = {}; // end quick hack.\n\t\t\t\ttag.call($, data,key,msg,eve);\n\t\t\t}, opt); // TODO: PERF! Event listener leak!!!?*/\n\t\t\t/*\n\t\t\tfunction one(msg, eve){\n\t\t\t\tif(one.stun){ return }\n\t\t\t\tvar at = msg.$._, data = at.put, tmp;\n\t\t\t\tif(tmp = at.link){ data = root.$.get(tmp)._.put }\n\t\t\t\tif(opt.not===u && u === data){ return }\n\t\t\t\tif(opt.stun===u && (tmp = root.stun) && (tmp = tmp[at.id] || tmp[at.back.id]) && !tmp.end){ // Remember! If you port this into `.get(cb` make sure you allow stun:0 skip option for `.put(`.\n\t\t\t\t\ttmp[id] = function(){one(msg,eve)};\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//tmp = one.wait || (one.wait = {}); console.log(tmp[at.id] === ''); if(tmp[at.id] !== ''){ tmp[at.id] = tmp[at.id] || setTimeout(function(){tmp[at.id]='';one(msg,eve)},1); return } delete tmp[at.id];\n\t\t\t\t// call:\n\t\t\t\tif(opt.as){\n\t\t\t\t\topt.ok.call(opt.as, msg, eve || one);\n\t\t\t\t} else {\n\t\t\t\t\topt.ok.call(at.$, data, msg.get || at.get, msg, eve || one);\n\t\t\t\t}\n\t\t\t};\n\t\t\tone.at = cat;\n\t\t\t(cat.act||(cat.act={}))[id = String.random(7)] = one;\n\t\t\tone.off = function(){ one.stun = 1; if(!cat.act){ return } delete cat.act[id] }\n\t\t\tcat.on('out', {get: {}});*/\n\t\t\treturn gun;\n\t\t}\n\t\t// Rules:\n\t\t// 1. If cached, should be fast, but not read while write.\n\t\t// 2. Should not retrigger other listeners, should get triggered even if nothing found.\n\t\t// 3. If the same callback passed to many different once chains, each should resolve - an unsubscribe from the same callback should not effect the state of the other resolving chains, if you do want to cancel them all early you should mutate the callback itself with a flag & check for it at top of callback\n\t\tGun.chain.once = function(cb, opt){ opt = opt || {}; // avoid rewriting\n\t\t\tif(!cb){ return none(this,opt) }\n\t\t\tvar gun = this, cat = gun._, root = cat.root, data = cat.put, id = String.random(7), one, tmp;\n\t\t\tgun.get(function(data,key,msg,eve){\n\t\t\t\tvar $ = this, at = $._, one = (at.one||(at.one={}));\n\t\t\t\tif(eve.stun){ return } if('' === one[id]){ return }\n\t\t\t\tif(true === (tmp = Gun.valid(data))){ once(); return }\n\t\t\t\tif('string' == typeof tmp){ return } // TODO: BUG? Will this always load?\n\t\t\t\tclearTimeout((cat.one||'')[id]); // clear \"not found\" since they only get set on cat.\n\t\t\t\tclearTimeout(one[id]); one[id] = setTimeout(once, opt.wait||99); // TODO: Bug? This doesn't handle plural chains.\n\t\t\t\tfunction once(){\n\t\t\t\t\tif(!at.has && !at.soul){ at = {put: data, get: key} } // handles non-core messages.\n\t\t\t\t\tif(u === (tmp = at.put)){ tmp = ((msg.$$||'')._||'').put }\n\t\t\t\t\tif('string' == typeof Gun.valid(tmp)){ tmp = root.$.get(tmp)._.put; if(tmp === u){return} }\n\t\t\t\t\tif(eve.stun){ return } if('' === one[id]){ return } one[id] = '';\n\t\t\t\t\tif(cat.soul || cat.has){ eve.off() } // TODO: Plural chains? // else { ?.off() } // better than one check?\n\t\t\t\t\tcb.call($, tmp, at.get);\n\t\t\t\t};\n\t\t\t}, {on: 1});\n\t\t\treturn gun;\n\t\t}\n\t\tfunction none(gun,opt,chain){\n\t\t\tGun.log.once(\"valonce\", \"Chainable val is experimental, its behavior and API may change moving forward. Please play with it and report bugs and ideas on how to improve it.\");\n\t\t\t(chain = gun.chain())._.nix = gun.once(function(data, key){ chain._.on('in', this._) });\n\t\t\tchain._.lex = gun._.lex; // TODO: Better approach in future? This is quick for now.\n\t\t\treturn chain;\n\t\t}\n\n\t\tGun.chain.off = function(){\n\t\t\t// make off more aggressive. Warning, it might backfire!\n\t\t\tvar gun = this, at = gun._, tmp;\n\t\t\tvar cat = at.back;\n\t\t\tif(!cat){ return }\n\t\t\tat.ack = 0; // so can resubscribe.\n\t\t\tif(tmp = cat.next){\n\t\t\t\tif(tmp[at.get]){\n\t\t\t\t\tdelete tmp[at.get];\n\t\t\t\t} else {\n\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TODO: delete cat.one[map.id]?\n\t\t\tif(tmp = cat.ask){\n\t\t\t\tdelete tmp[at.get];\n\t\t\t}\n\t\t\tif(tmp = cat.put){\n\t\t\t\tdelete tmp[at.get];\n\t\t\t}\n\t\t\tif(tmp = at.soul){\n\t\t\t\tdelete cat.root.graph[tmp];\n\t\t\t}\n\t\t\tif(tmp = at.map){\n\t\t\t\tObject.keys(tmp).forEach(function(i,at){ at = tmp[i]; //obj_map(tmp, function(at){\n\t\t\t\t\tif(at.link){\n\t\t\t\t\t\tcat.root.$.get(at.link).off();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif(tmp = at.next){\n\t\t\t\tObject.keys(tmp).forEach(function(i,neat){ neat = tmp[i]; //obj_map(tmp, function(neat){\n\t\t\t\t\tneat.$.off();\n\t\t\t\t});\n\t\t\t}\n\t\t\tat.on('off', {});\n\t\t\treturn gun;\n\t\t}\n\t\tvar empty = {}, noop = function(){}, u;\n\t})(USE, './on');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('./index'), next = Gun.chain.get.next;\n\t\tGun.chain.get.next = function(gun, lex){ var tmp;\n\t\t\tif(!Object.plain(lex)){ return (next||noop)(gun, lex) }\n\t\t\tif(tmp = ((tmp = lex['#'])||'')['='] || tmp){ return gun.get(tmp) }\n\t\t\t(tmp = gun.chain()._).lex = lex; // LEX!\n\t\t\tgun.on('in', function(eve){\n\t\t\t\tif(String.match(eve.get|| (eve.put||'')['.'], lex['.'] || lex['#'] || lex)){\n\t\t\t\t\ttmp.on('in', eve);\n\t\t\t\t}\n\t\t\t\tthis.to.next(eve);\n\t\t\t});\n\t\t\treturn tmp.$;\n\t\t}\n\t\tGun.chain.map = function(cb, opt, t){\n\t\t\tvar gun = this, cat = gun._, lex, chain;\n\t\t\tif(Object.plain(cb)){ lex = cb['.']? cb : {'.': cb}; cb = u }\n\t\t\tif(!cb){\n\t\t\t\tif(chain = cat.each){ return chain }\n\t\t\t\t(cat.each = chain = gun.chain())._.lex = lex || chain._.lex || cat.lex;\n\t\t\t\tchain._.nix = gun.back('nix');\n\t\t\t\tgun.on('in', map, chain._);\n\t\t\t\treturn chain;\n\t\t\t}\n\t\t\tGun.log.once(\"mapfn\", \"Map functions are experimental, their behavior and API may change moving forward. Please play with it and report bugs and ideas on how to improve it.\");\n\t\t\tchain = gun.chain();\n\t\t\tgun.map().on(function(data, key, msg, eve){\n\t\t\t\tvar next = (cb||noop).call(this, data, key, msg, eve);\n\t\t\t\tif(u === next){ return }\n\t\t\t\tif(data === next){ return chain._.on('in', msg) }\n\t\t\t\tif(Gun.is(next)){ return chain._.on('in', next._) }\n\t\t\t\tvar tmp = {}; Object.keys(msg.put).forEach(function(k){ tmp[k] = msg.put[k] }, tmp); tmp['='] = next; \n\t\t\t\tchain._.on('in', {get: key, put: tmp});\n\t\t\t});\n\t\t\treturn chain;\n\t\t}\n\t\tfunction map(msg){ this.to.next(msg);\n\t\t\tvar cat = this.as, gun = msg.$, at = gun._, put = msg.put, tmp;\n\t\t\tif(!at.soul && !msg.$$){ return } // this line took hundreds of tries to figure out. It only works if core checks to filter out above chains during link tho. This says \"only bother to map on a node\" for this layer of the chain. If something is not a node, map should not work.\n\t\t\tif((tmp = cat.lex) && !String.match(msg.get|| (put||'')['.'], tmp['.'] || tmp['#'] || tmp)){ return }\n\t\t\tGun.on.link(msg, cat);\n\t\t}\n\t\tvar noop = function(){}, event = {stun: noop, off: noop}, u;\n\t})(USE, './map');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('./index');\n\t\tGun.chain.set = function(item, cb, opt){\n\t\t\tvar gun = this, root = gun.back(-1), soul, tmp;\n\t\t\tcb = cb || function(){};\n\t\t\topt = opt || {}; opt.item = opt.item || item;\n\t\t\tif(soul = ((item||'')._||'')['#']){ (item = {})['#'] = soul } // check if node, make link.\n\t\t\tif('string' == typeof (tmp = Gun.valid(item))){ return gun.get(soul = tmp).put(item, cb, opt) } // check if link\n\t\t\tif(!Gun.is(item)){\n\t\t\t\tif(Object.plain(item)){\n\t\t\t\t\titem = root.get(soul = gun.back('opt.uuid')()).put(item);\n\t\t\t\t}\n\t\t\t\treturn gun.get(soul || root.back('opt.uuid')(7)).put(item, cb, opt);\n\t\t\t}\n\t\t\tgun.put(function(go){\n\t\t\t\titem.get(function(soul, o, msg){ // TODO: BUG! We no longer have this option? & go error not handled?\n\t\t\t\t\tif(!soul){ return cb.call(gun, {err: Gun.log('Only a node can be linked! Not \"' + msg.put + '\"!')}) }\n\t\t\t\t\t(tmp = {})[soul] = {'#': soul}; go(tmp);\n\t\t\t\t},true);\n\t\t\t})\n\t\t\treturn item;\n\t\t}\n\t})(USE, './set');\n\n\t;USE(function(module){\n\t\tUSE('./shim');\n\n\t\tfunction Mesh(root){\n\t\t\tvar mesh = function(){};\n\t\t\tvar opt = root.opt || {};\n\t\t\topt.log = opt.log || console.log;\n\t\t\topt.gap = opt.gap || opt.wait || 0;\n\t\t\topt.max = opt.max || (opt.memory? (opt.memory * 999 * 999) : 300000000) * 0.3;\n\t\t\topt.pack = opt.pack || (opt.max * 0.01 * 0.01);\n\t\t\topt.puff = opt.puff || 9; // IDEA: do a start/end benchmark, divide ops/result.\n\t\t\tvar puff = setTimeout.turn || setTimeout;\n\t\t\tvar parse = JSON.parseAsync || function(t,cb,r){ var u; try{ cb(u, JSON.parse(t,r)) }catch(e){ cb(e) } }\n\t\t\tvar json = JSON.stringifyAsync || function(v,cb,r,s){ var u; try{ cb(u, JSON.stringify(v,r,s)) }catch(e){ cb(e) } }\n\n\t\t\tvar dup = root.dup, dup_check = dup.check, dup_track = dup.track;\n\n\t\t\tvar ST = +new Date, LT = ST;\n\n\t\t\tvar hear = mesh.hear = function(raw, peer){\n\t\t\t\tif(!raw){ return }\n\t\t\t\tif(opt.max <= raw.length){ return mesh.say({dam: '!', err: \"Message too big!\"}, peer) }\n\t\t\t\tif(mesh === this){\n\t\t\t\t\t/*if('string' == typeof raw){ try{\n\t\t\t\t\t\tvar stat = console.STAT || {};\n\t\t\t\t\t\t//console.log('HEAR:', peer.id, (raw||'').slice(0,250), ((raw||'').length / 1024 / 1024).toFixed(4));\n\t\t\t\t\t\t\n\t\t\t\t\t\t//console.log(setTimeout.turn.s.length, 'stacks', parseFloat((-(LT - (LT = +new Date))/1000).toFixed(3)), 'sec', parseFloat(((LT-ST)/1000 / 60).toFixed(1)), 'up', stat.peers||0, 'peers', stat.has||0, 'has', stat.memhused||0, stat.memused||0, stat.memax||0, 'heap mem max');\n\t\t\t\t\t}catch(e){ console.log('DBG err', e) }}*/\n\t\t\t\t\thear.d += raw.length||0 ; ++hear.c } // STATS!\n\t\t\t\tvar S = peer.SH = +new Date;\n\t\t\t\tvar tmp = raw[0], msg;\n\t\t\t\t//raw && raw.slice && console.log(\"hear:\", ((peer.wire||'').headers||'').origin, raw.length, raw.slice && raw.slice(0,50)); //tc-iamunique-tc-package-ds1\n\t\t\t\tif('[' === tmp){\n\t\t\t\t\tparse(raw, function(err, msg){\n\t\t\t\t\t\tif(err || !msg){ return mesh.say({dam: '!', err: \"DAM JSON parse error.\"}, peer) }\n\t\t\t\t\t\tconsole.STAT && console.STAT(+new Date, msg.length, '# on hear batch');\n\t\t\t\t\t\tvar P = opt.puff;\n\t\t\t\t\t\t(function go(){\n\t\t\t\t\t\t\tvar S = +new Date;\n\t\t\t\t\t\t\tvar i = 0, m; while(i < P && (m = msg[i++])){ hear(m, peer) }\n\t\t\t\t\t\t\tmsg = msg.slice(i); // slicing after is faster than shifting during.\n\t\t\t\t\t\t\tconsole.STAT && console.STAT(S, +new Date - S, 'hear loop');\n\t\t\t\t\t\t\tflush(peer); // force send all synchronously batched acks.\n\t\t\t\t\t\t\tif(!msg.length){ return }\n\t\t\t\t\t\t\tpuff(go, 0);\n\t\t\t\t\t\t}());\n\t\t\t\t\t});\n\t\t\t\t\traw = ''; // \n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif('{' === tmp || ((raw['#'] || Object.plain(raw)) && (msg = raw))){\n\t\t\t\t\tif(msg){ return hear.one(msg, peer, S) }\n\t\t\t\t\tparse(raw, function(err, msg){\n\t\t\t\t\t\tif(err || !msg){ return mesh.say({dam: '!', err: \"DAM JSON parse error.\"}, peer) }\n\t\t\t\t\t\thear.one(msg, peer, S);\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\thear.one = function(msg, peer, S){ // S here is temporary! Undo.\n\t\t\t\tvar id, hash, tmp, ash, DBG;\n\t\t\t\tif(msg.DBG){ msg.DBG = DBG = {DBG: msg.DBG} }\n\t\t\t\tDBG && (DBG.h = S);\n\t\t\t\tDBG && (DBG.hp = +new Date);\n\t\t\t\tif(!(id = msg['#'])){ id = msg['#'] = String.random(9) }\n\t\t\t\tif(tmp = dup_check(id)){ return }\n\t\t\t\t// DAM logic:\n\t\t\t\tif(!(hash = msg['##']) && false && u !== msg.put){ /*hash = msg['##'] = Type.obj.hash(msg.put)*/ } // disable hashing for now // TODO: impose warning/penalty instead (?)\n\t\t\t\tif(hash && (tmp = msg['@'] || (msg.get && id)) && dup.check(ash = tmp+hash)){ return } // Imagine A <-> B <=> (C & D), C & D reply with same ACK but have different IDs, B can use hash to dedup. Or if a GET has a hash already, we shouldn't ACK if same.\n\t\t\t\t(msg._ = function(){}).via = mesh.leap = peer;\n\t\t\t\tif((tmp = msg['><']) && 'string' == typeof tmp){ tmp.slice(0,99).split(',').forEach(function(k){ this[k] = 1 }, (msg._).yo = {}) } // Peers already sent to, do not resend.\n\t\t\t\t// DAM ^\n\t\t\t\tif(tmp = msg.dam){\n\t\t\t\t\tif(tmp = mesh.hear[tmp]){\n\t\t\t\t\t\ttmp(msg, peer, root);\n\t\t\t\t\t}\n\t\t\t\t\tdup_track(id);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar S = +new Date;\n\t\t\t\tDBG && (DBG.is = S); peer.SI = id;\n\t\t\t\troot.on('in', mesh.last = msg);\n\t\t\t\t//ECHO = msg.put || ECHO; !(msg.ok !== -3740) && mesh.say({ok: -3740, put: ECHO, '@': msg['#']}, peer);\n\t\t\t\tDBG && (DBG.hd = +new Date);\n\t\t\t\tconsole.STAT && console.STAT(S, +new Date - S, msg.get? 'msg get' : msg.put? 'msg put' : 'msg');\n\t\t\t\t(tmp = dup_track(id)).via = peer; // don't dedup message ID till after, cause GUN has internal dedup check.\n\t\t\t\tif(msg.get){ tmp.it = msg }\n\t\t\t\tif(ash){ dup_track(ash) } //dup.track(tmp+hash, true).it = it(msg);\n\t\t\t\tmesh.leap = mesh.last = null; // warning! mesh.leap could be buggy.\n\t\t\t}\n\t\t\tvar tomap = function(k,i,m){m(k,true)};\n\t\t\tvar noop = function(){};\n\t\t\thear.c = hear.d = 0;\n\n\t\t\t;(function(){\n\t\t\t\tvar SMIA = 0;\n\t\t\t\tvar loop;\n\t\t\t\tmesh.hash = function(msg, peer){ var h, s, t;\n\t\t\t\t\tvar S = +new Date;\n\t\t\t\t\tjson(msg.put, function hash(err, text){\n\t\t\t\t\t\tvar ss = (s || (s = t = text||'')).slice(0, 32768); // 1024 * 32\n\t\t\t\t\t  h = String.hash(ss, h); s = s.slice(32768);\n\t\t\t\t\t  if(s){ puff(hash, 0); return }\n\t\t\t\t\t\tconsole.STAT && console.STAT(S, +new Date - S, 'say json+hash');\n\t\t\t\t\t  msg._.$put = t;\n\t\t\t\t\t  msg['##'] = h;\n\t\t\t\t\t  say(msg, peer);\n\t\t\t\t\t  delete msg._.$put;\n\t\t\t\t\t}, sort);\n\t\t\t\t}\n\t\t\t\tfunction sort(k, v){ var tmp;\n\t\t\t\t\tif(!(v instanceof Object)){ return v }\n\t\t\t\t\tObject.keys(v).sort().forEach(sorta, {to: tmp = {}, on: v});\n\t\t\t\t\treturn tmp;\n\t\t\t\t} function sorta(k){ this.to[k] = this.on[k] }\n\n\t\t\t\tvar say = mesh.say = function(msg, peer){ var tmp;\n\t\t\t\t\tif((tmp = this) && (tmp = tmp.to) && tmp.next){ tmp.next(msg) } // compatible with middleware adapters.\n\t\t\t\t\tif(!msg){ return false }\n\t\t\t\t\tvar id, hash, raw, ack = msg['@'];\n//if(opt.super && (!ack || !msg.put)){ return } // TODO: MANHATTAN STUB //OBVIOUSLY BUG! But squelch relay. // :( get only is 100%+ CPU usage :(\n\t\t\t\t\tvar meta = msg._||(msg._=function(){});\n\t\t\t\t\tvar DBG = msg.DBG, S = +new Date; meta.y = meta.y || S; if(!peer){ DBG && (DBG.y = S) }\n\t\t\t\t\tif(!(id = msg['#'])){ id = msg['#'] = String.random(9) }\n\t\t\t\t\t!loop && dup_track(id);//.it = it(msg); // track for 9 seconds, default. Earth<->Mars would need more! // always track, maybe move this to the 'after' logic if we split function.\n\t\t\t\t\tif(msg.put && (msg.err || (dup.s[id]||'').err)){ return false } // TODO: in theory we should not be able to stun a message, but for now going to check if it can help network performance preventing invalid data to relay.\n\t\t\t\t\tif(!(hash = msg['##']) && u !== msg.put && !meta.via && ack){ mesh.hash(msg, peer); return } // TODO: Should broadcasts be hashed?\n\t\t\t\t\tif(!peer && ack){ peer = ((tmp = dup.s[ack]) && (tmp.via || ((tmp = tmp.it) && (tmp = tmp._) && tmp.via))) || ((tmp = mesh.last) && ack === tmp['#'] && mesh.leap) } // warning! mesh.leap could be buggy! mesh last check reduces this.\n\t\t\t\t\tif(!peer && ack){ // still no peer, then ack daisy chain lost.\n\t\t\t\t\t\tif(dup.s[ack]){ return } // in dups but no peer hints that this was ack to self, ignore.\n\t\t\t\t\t\tconsole.STAT && console.STAT(+new Date, ++SMIA, 'total no peer to ack to');\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} // TODO: Temporary? If ack via trace has been lost, acks will go to all peers, which trashes browser bandwidth. Not relaying the ack will force sender to ask for ack again. Note, this is technically wrong for mesh behavior.\n\t\t\t\t\tif(!peer && mesh.way){ return mesh.way(msg) }\n\t\t\t\t\tDBG && (DBG.yh = +new Date);\n\t\t\t\t\tif(!(raw = meta.raw)){ mesh.raw(msg, peer); return }\n\t\t\t\t\tDBG && (DBG.yr = +new Date);\n\t\t\t\t\tif(!peer || !peer.id){\n\t\t\t\t\t\tif(!Object.plain(peer || opt.peers)){ return false }\n\t\t\t\t\t\tvar S = +new Date;\n\t\t\t\t\t\tvar P = opt.puff, ps = opt.peers, pl = Object.keys(peer || opt.peers || {}); // TODO: .keys( is slow\n\t\t\t\t\t\tconsole.STAT && console.STAT(S, +new Date - S, 'peer keys');\n\t\t\t\t\t\t;(function go(){\n\t\t\t\t\t\t\tvar S = +new Date;\n\t\t\t\t\t\t\t//Type.obj.map(peer || opt.peers, each); // in case peer is a peer list.\n\t\t\t\t\t\t\tloop = 1; var wr = meta.raw; meta.raw = raw; // quick perf hack\n\t\t\t\t\t\t\tvar i = 0, p; while(i < 9 && (p = (pl||'')[i++])){\n\t\t\t\t\t\t\t\tif(!(p = ps[p])){ continue }\n\t\t\t\t\t\t\t\tsay(msg, p);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmeta.raw = wr; loop = 0;\n\t\t\t\t\t\t\tpl = pl.slice(i); // slicing after is faster than shifting during.\n\t\t\t\t\t\t\tconsole.STAT && console.STAT(S, +new Date - S, 'say loop');\n\t\t\t\t\t\t\tif(!pl.length){ return }\n\t\t\t\t\t\t\tpuff(go, 0);\n\t\t\t\t\t\t\tack && dup_track(ack); // keep for later\n\t\t\t\t\t\t}());\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// TODO: PERF: consider splitting function here, so say loops do less work.\n\t\t\t\t\tif(!peer.wire && mesh.wire){ mesh.wire(peer) }\n\t\t\t\t\tif(id === peer.last){ return } peer.last = id;  // was it just sent?\n\t\t\t\t\tif(peer === meta.via){ return false } // don't send back to self.\n\t\t\t\t\tif((tmp = meta.yo) && (tmp[peer.url] || tmp[peer.pid] || tmp[peer.id]) /*&& !o*/){ return false }\n\t\t\t\t\tconsole.STAT && console.STAT(S, ((DBG||meta).yp = +new Date) - (meta.y || S), 'say prep');\n\t\t\t\t\t!loop && ack && dup_track(ack); // streaming long responses needs to keep alive the ack.\n\t\t\t\t\tif(peer.batch){\n\t\t\t\t\t\tpeer.tail = (tmp = peer.tail || 0) + raw.length;\n\t\t\t\t\t\tif(peer.tail <= opt.pack){\n\t\t\t\t\t\t\tpeer.batch += (tmp?',':'')+raw;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tflush(peer);\n\t\t\t\t\t}\n\t\t\t\t\tpeer.batch = '['; // Prevents double JSON!\n\t\t\t\t\tvar ST = +new Date;\n\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\tconsole.STAT && console.STAT(ST, +new Date - ST, '0ms TO');\n\t\t\t\t\t\tflush(peer);\n\t\t\t\t\t}, opt.gap); // TODO: queuing/batching might be bad for low-latency video game performance! Allow opt out?\n\t\t\t\t\tsend(raw, peer);\n\t\t\t\t\tconsole.STAT && (ack === peer.SI) && console.STAT(S, +new Date - peer.SH, 'say ack');\n\t\t\t\t}\n\t\t\t\tmesh.say.c = mesh.say.d = 0;\n\t\t\t\t// TODO: this caused a out-of-memory crash!\n\t\t\t\tmesh.raw = function(msg, peer){ // TODO: Clean this up / delete it / move logic out!\n\t\t\t\t\tif(!msg){ return '' }\n\t\t\t\t\tvar meta = (msg._) || {}, put, tmp;\n\t\t\t\t\tif(tmp = meta.raw){ return tmp }\n\t\t\t\t\tif('string' == typeof msg){ return msg }\n\t\t\t\t\tvar hash = msg['##'], ack = msg['@'];\n\t\t\t\t\tif(hash && ack){\n\t\t\t\t\t\tif(!meta.via && dup_check(ack+hash)){ return false } // for our own out messages, memory & storage may ack the same thing, so dedup that. Tho if via another peer, we already tracked it upon hearing, so this will always trigger false positives, so don't do that!\n\t\t\t\t\t\tif((tmp = (dup.s[ack]||'').it) || ((tmp = mesh.last) && ack === tmp['#'])){\n\t\t\t\t\t\t\tif(hash === tmp['##']){ return false } // if ask has a matching hash, acking is optional.\n\t\t\t\t\t\t\tif(!tmp['##']){ tmp['##'] = hash } // if none, add our hash to ask so anyone we relay to can dedup. // NOTE: May only check against 1st ack chunk, 2nd+ won't know and still stream back to relaying peers which may then dedup. Any way to fix this wasted bandwidth? I guess force rate limiting breaking change, that asking peer has to ask for next lexical chunk.\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!msg.dam){\n\t\t\t\t\t\tvar i = 0, to = []; tmp = opt.peers;\n\t\t\t\t\t\tfor(var k in tmp){ var p = tmp[k]; // TODO: Make it up peers instead!\n\t\t\t\t\t\t\tto.push(p.url || p.pid || p.id);\n\t\t\t\t\t\t\tif(++i > 6){ break }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(i > 1){ msg['><'] = to.join() } // TODO: BUG! This gets set regardless of peers sent to! Detect?\n\t\t\t\t\t}\n\t\t\t\t\tif(put = meta.$put){\n\t\t\t\t\t\ttmp = {}; Object.keys(msg).forEach(function(k){ tmp[k] = msg[k] });\n\t\t\t\t\t\ttmp.put = ':])([:';\n\t\t\t\t\t\tjson(tmp, function(err, raw){\n\t\t\t\t\t\t\tif(err){ return } // TODO: Handle!!\n\t\t\t\t\t\t\tvar S = +new Date;\n\t\t\t\t\t\t\ttmp = raw.indexOf('\"put\":\":])([:\"');\n\t\t\t\t\t\t\tres(u, raw = raw.slice(0, tmp+6) + put + raw.slice(tmp + 14));\n\t\t\t\t\t\t\tconsole.STAT && console.STAT(S, +new Date - S, 'say slice');\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tjson(msg, res);\n\t\t\t\t\tfunction res(err, raw){\n\t\t\t\t\t\tif(err){ return } // TODO: Handle!!\n\t\t\t\t\t\tmeta.raw = raw; //if(meta && (raw||'').length < (999 * 99)){ meta.raw = raw } // HNPERF: If string too big, don't keep in memory.\n\t\t\t\t\t\tsay(msg, peer);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}());\n\n\t\t\tfunction flush(peer){\n\t\t\t\tvar tmp = peer.batch, t = 'string' == typeof tmp, l;\n\t\t\t\tif(t){ tmp += ']' }// TODO: Prevent double JSON!\n\t\t\t\tpeer.batch = peer.tail = null;\n\t\t\t\tif(!tmp){ return }\n\t\t\t\tif(t? 3 > tmp.length : !tmp.length){ return } // TODO: ^\n\t\t\t\tif(!t){try{tmp = (1 === tmp.length? tmp[0] : JSON.stringify(tmp));\n\t\t\t\t}catch(e){return opt.log('DAM JSON stringify error', e)}}\n\t\t\t\tif(!tmp){ return }\n\t\t\t\tsend(tmp, peer);\n\t\t\t}\n\t\t\t// for now - find better place later.\n\t\t\tfunction send(raw, peer){ try{\n\t\t\t\t//console.log('SAY:', peer.id, (raw||'').slice(0,250), ((raw||'').length / 1024 / 1024).toFixed(4));\n\t\t\t\tvar wire = peer.wire;\n\t\t\t\tif(peer.say){\n\t\t\t\t\tpeer.say(raw);\n\t\t\t\t} else\n\t\t\t\tif(wire.send){\n\t\t\t\t\twire.send(raw);\n\t\t\t\t}\n\t\t\t\tmesh.say.d += raw.length||0; ++mesh.say.c; // STATS!\n\t\t\t}catch(e){\n\t\t\t\t(peer.queue = peer.queue || []).push(raw);\n\t\t\t}}\n\n\t\t\tmesh.hi = function(peer){\n\t\t\t\tvar tmp = peer.wire || {};\n\t\t\t\tif(peer.id){\n\t\t\t\t\topt.peers[peer.url || peer.id] = peer;\n\t\t\t\t} else {\n\t\t\t\t\ttmp = peer.id = peer.id || String.random(9);\n\t\t\t\t\tmesh.say({dam: '?', pid: root.opt.pid}, opt.peers[tmp] = peer);\n\t\t\t\t\tdelete dup.s[peer.last]; // IMPORTANT: see https://gun.eco/docs/DAM#self\n\t\t\t\t}\n\t\t\t\tpeer.met = peer.met || +(new Date);\n\t\t\t\tif(!tmp.hied){ root.on(tmp.hied = 'hi', peer) }\n\t\t\t\t// @rogowski I need this here by default for now to fix go1dfish's bug\n\t\t\t\ttmp = peer.queue; peer.queue = [];\n\t\t\t\tsetTimeout.each(tmp||[],function(msg){\n\t\t\t\t\tsend(msg, peer);\n\t\t\t\t},0,9);\n\t\t\t\t//Type.obj.native && Type.obj.native(); // dirty place to check if other JS polluted.\n\t\t\t}\n\t\t\tmesh.bye = function(peer){\n\t\t\t\troot.on('bye', peer);\n\t\t\t\tvar tmp = +(new Date); tmp = (tmp - (peer.met||tmp));\n\t\t\t\tmesh.bye.time = ((mesh.bye.time || tmp) + tmp) / 2;\n\t\t\t}\n\t\t\tmesh.hear['!'] = function(msg, peer){ opt.log('Error:', msg.err) }\n\t\t\tmesh.hear['?'] = function(msg, peer){\n\t\t\t\tif(msg.pid){\n\t\t\t\t\tif(!peer.pid){ peer.pid = msg.pid }\n\t\t\t\t\tif(msg['@']){ return }\n\t\t\t\t}\n\t\t\t\tmesh.say({dam: '?', pid: opt.pid, '@': msg['#']}, peer);\n\t\t\t\tdelete dup.s[peer.last]; // IMPORTANT: see https://gun.eco/docs/DAM#self\n\t\t\t}\n\n\t\t\troot.on('create', function(root){\n\t\t\t\troot.opt.pid = root.opt.pid || String.random(9);\n\t\t\t\tthis.to.next(root);\n\t\t\t\troot.on('out', mesh.say);\n\t\t\t});\n\n\t\t\troot.on('bye', function(peer, tmp){\n\t\t\t\tpeer = opt.peers[peer.id || peer] || peer;\n\t\t\t\tthis.to.next(peer);\n\t\t\t\tpeer.bye? peer.bye() : (tmp = peer.wire) && tmp.close && tmp.close();\n\t\t\t\tdelete opt.peers[peer.id];\n\t\t\t\tpeer.wire = null;\n\t\t\t});\n\n\t\t\tvar gets = {};\n\t\t\troot.on('bye', function(peer, tmp){ this.to.next(peer);\n\t\t\t\tif(tmp = console.STAT){ tmp.peers = (tmp.peers || 0) - 1; }\n\t\t\t\tif(!(tmp = peer.url)){ return } gets[tmp] = true;\n\t\t\t\tsetTimeout(function(){ delete gets[tmp] },opt.lack || 9000);\n\t\t\t});\n\t\t\troot.on('hi', function(peer, tmp){ this.to.next(peer);\n\t\t\t\tif(tmp = console.STAT){ tmp.peers = (tmp.peers || 0) + 1 }\n\t\t\t\tif(!(tmp = peer.url) || !gets[tmp]){ return } delete gets[tmp];\n\t\t\t\tif(opt.super){ return } // temporary (?) until we have better fix/solution?\n\t\t\t\tsetTimeout.each(Object.keys(root.next), function(soul){ var node = root.next[soul]; // TODO: .keys( is slow\n\t\t\t\t\ttmp = {}; tmp[soul] = root.graph[soul]; tmp = String.hash(tmp); // TODO: BUG! This is broken.\n\t\t\t\t\tmesh.say({'##': tmp, get: {'#': soul}}, peer);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn mesh;\n\t\t}\n\t  var empty = {}, ok = true, u;\n\n\t  try{ module.exports = Mesh }catch(e){}\n\n\t})(USE, './mesh');\n\n\t;USE(function(module){\n\t\tvar Gun = USE('../index');\n\t\tGun.Mesh = USE('./mesh');\n\n\t\t// TODO: resync upon reconnect online/offline\n\t\t//window.ononline = window.onoffline = function(){ console.log('online?', navigator.onLine) }\n\n\t\tGun.on('opt', function(root){\n\t\t\tthis.to.next(root);\n\t\t\tif(root.once){ return }\n\t\t\tvar opt = root.opt;\n\t\t\tif(false === opt.WebSocket){ return }\n\n\t\t\tvar env = Gun.window || {};\n\t\t\tvar websocket = opt.WebSocket || env.WebSocket || env.webkitWebSocket || env.mozWebSocket;\n\t\t\tif(!websocket){ return }\n\t\t\topt.WebSocket = websocket;\n\n\t\t\tvar mesh = opt.mesh = opt.mesh || Gun.Mesh(root);\n\n\t\t\tvar wire = mesh.wire || opt.wire;\n\t\t\tmesh.wire = opt.wire = open;\n\t\t\tfunction open(peer){ try{\n\t\t\t\tif(!peer || !peer.url){ return wire && wire(peer) }\n\t\t\t\tvar url = peer.url.replace(/^http/, 'ws');\n\t\t\t\tvar wire = peer.wire = new opt.WebSocket(url);\n\t\t\t\twire.onclose = function(){\n\t\t\t\t\topt.mesh.bye(peer);\n\t\t\t\t\treconnect(peer);\n\t\t\t\t};\n\t\t\t\twire.onerror = function(error){\n\t\t\t\t\treconnect(peer);\n\t\t\t\t};\n\t\t\t\twire.onopen = function(){\n\t\t\t\t\topt.mesh.hi(peer);\n\t\t\t\t}\n\t\t\t\twire.onmessage = function(msg){\n\t\t\t\t\tif(!msg){ return }\n\t\t\t\t\topt.mesh.hear(msg.data || msg, peer);\n\t\t\t\t};\n\t\t\t\treturn wire;\n\t\t\t}catch(e){}}\n\n\t\t\tsetTimeout(function(){ !opt.super && root.on('out', {dam:'hi'}) },1); // it can take a while to open a socket, so maybe no longer lazy load for perf reasons?\n\n\t\t\tvar wait = 2 * 999;\n\t\t\tfunction reconnect(peer){\n\t\t\t\tclearTimeout(peer.defer);\n\t\t\t\tif(doc && peer.retry <= 0){ return }\n\t\t\t\tpeer.retry = (peer.retry || opt.retry+1 || 60) - ((-peer.tried + (peer.tried = +new Date) < wait*4)?1:0);\n\t\t\t\tpeer.defer = setTimeout(function to(){\n\t\t\t\t\tif(doc && doc.hidden){ return setTimeout(to,wait) }\n\t\t\t\t\topen(peer);\n\t\t\t\t}, wait);\n\t\t\t}\n\t\t\tvar doc = (''+u !== typeof document) && document;\n\t\t});\n\t\tvar noop = function(){}, u;\n\t})(USE, './websocket');\n\n\t;USE(function(module){\n\t\tif(typeof Gun === 'undefined'){ return }\n\n\t\tvar noop = function(){}, store, u;\n\t\ttry{store = (Gun.window||noop).localStorage}catch(e){}\n\t\tif(!store){\n\t\t\tGun.log(\"Warning: No localStorage exists to persist data to!\");\n\t\t\tstore = {setItem: function(k,v){this[k]=v}, removeItem: function(k){delete this[k]}, getItem: function(k){return this[k]}};\n\t\t}\n\t\tGun.on('create', function lg(root){\n\t\t\tthis.to.next(root);\n\t\t\tvar opt = root.opt, graph = root.graph, acks = [], disk, to;\n\t\t\tif(false === opt.localStorage){ return }\n\t\t\topt.prefix = opt.file || 'gun/';\n\t\t\ttry{ disk = lg[opt.prefix] = lg[opt.prefix] || JSON.parse(store.getItem(opt.prefix)) || {}; // TODO: Perf! This will block, should we care, since limited to 5MB anyways?\n\t\t\t}catch(e){ disk = lg[opt.prefix] = {}; }\n\n\t\t\troot.on('get', function(msg){\n\t\t\t\tthis.to.next(msg);\n\t\t\t\tvar lex = msg.get, soul, data, tmp, u;\n\t\t\t\tif(!lex || !(soul = lex['#'])){ return }\n\t\t\t\tdata = disk[soul] || u;\n\t\t\t\tif(data && (tmp = lex['.']) && !Object.plain(tmp)){ // pluck!\n\t\t\t\t\tdata = Gun.state.ify({}, tmp, Gun.state.is(data, tmp), data[tmp], soul);\n\t\t\t\t}\n\t\t\t\t//if(data){ (tmp = {})[soul] = data } // back into a graph.\n\t\t\t\t//setTimeout(function(){\n\t\t\t\tGun.on.get.ack(msg, data); //root.on('in', {'@': msg['#'], put: tmp, lS:1});// || root.$});\n\t\t\t\t//}, Math.random() * 10); // FOR TESTING PURPOSES!\n\t\t\t});\n\n\t\t\troot.on('put', function(msg){\n\t\t\t\tthis.to.next(msg); // remember to call next middleware adapter\n\t\t\t\tvar put = msg.put, soul = put['#'], key = put['.'], tmp; // pull data off wire envelope\n\t\t\t\tdisk[soul] = Gun.state.ify(disk[soul], key, put['>'], put[':'], soul); // merge into disk object\n\t\t\t\tif(!msg['@']){ acks.push(msg['#']) } // then ack any non-ack write. // TODO: use batch id.\n\t\t\t\tif(to){ return }\n\t\t\t\t//flush();return;\n\t\t\t\tto = setTimeout(flush, opt.wait || 1); // that gets saved as a whole to disk every 1ms\n\t\t\t});\n\t\t\tfunction flush(){\n\t\t\t\tvar err, ack = acks; clearTimeout(to); to = false; acks = [];\n\t\t\t\ttry{store.setItem(opt.prefix, JSON.stringify(disk));\n\t\t\t\t}catch(e){\n\t\t\t\t\tGun.log((err = (e || \"localStorage failure\")) + \" Consider using GUN's IndexedDB plugin for RAD for more storage space, https://gun.eco/docs/RAD#install\");\n\t\t\t\t\troot.on('localStorage:error', {err: err, get: opt.prefix, put: disk});\n\t\t\t\t}\n\t\t\t\tif(!err && !Object.empty(opt.peers)){ return } // only ack if there are no peers. // Switch this to probabilistic mode\n\t\t\t\tsetTimeout.each(ack, function(id){\n\t\t\t\t\troot.on('in', {'@': id, err: err, ok: 0}); // localStorage isn't reliable, so make its `ok` code be a low number.\n\t\t\t\t});\n\t\t\t}\n\t\t\n\t\t});\n\t})(USE, './localStorage');\n\n}());\n\n/* BELOW IS TEMPORARY FOR OLD INTERNAL COMPATIBILITY, THEY ARE IMMEDIATELY DEPRECATED AND WILL BE REMOVED IN NEXT VERSION */\n;(function(){\n\tvar u;\n\tif(''+u == typeof Gun){ return }\n\tvar DEP = function(n){ console.log(\"Warning! Deprecated internal utility will break in next version:\", n) }\n\t// Generic javascript utilities.\n\tvar Type = Gun;\n\t//Type.fns = Type.fn = {is: function(fn){ return (!!fn && fn instanceof Function) }}\n\tType.fn = Type.fn || {is: function(fn){ DEP('fn'); return (!!fn && 'function' == typeof fn) }}\n\tType.bi = Type.bi || {is: function(b){ DEP('bi');return (b instanceof Boolean || typeof b == 'boolean') }}\n\tType.num = Type.num || {is: function(n){ DEP('num'); return !list_is(n) && ((n - parseFloat(n) + 1) >= 0 || Infinity === n || -Infinity === n) }}\n\tType.text = Type.text || {is: function(t){ DEP('text'); return (typeof t == 'string') }}\n\tType.text.ify = Type.text.ify || function(t){ DEP('text.ify');\n\t\tif(Type.text.is(t)){ return t }\n\t\tif(typeof JSON !== \"undefined\"){ return JSON.stringify(t) }\n\t\treturn (t && t.toString)? t.toString() : t;\n\t}\n\tType.text.random = Type.text.random || function(l, c){ DEP('text.random');\n\t\tvar s = '';\n\t\tl = l || 24; // you are not going to make a 0 length random number, so no need to check type\n\t\tc = c || '0123456789ABCDEFGHIJKLMNOPQRSTUVWXZabcdefghijklmnopqrstuvwxyz';\n\t\twhile(l > 0){ s += c.charAt(Math.floor(Math.random() * c.length)); l-- }\n\t\treturn s;\n\t}\n\tType.text.match = Type.text.match || function(t, o){ var tmp, u; DEP('text.match');\n\t\tif('string' !== typeof t){ return false }\n\t\tif('string' == typeof o){ o = {'=': o} }\n\t\to = o || {};\n\t\ttmp = (o['='] || o['*'] || o['>'] || o['<']);\n\t\tif(t === tmp){ return true }\n\t\tif(u !== o['=']){ return false }\n\t\ttmp = (o['*'] || o['>'] || o['<']);\n\t\tif(t.slice(0, (tmp||'').length) === tmp){ return true }\n\t\tif(u !== o['*']){ return false }\n\t\tif(u !== o['>'] && u !== o['<']){\n\t\t\treturn (t >= o['>'] && t <= o['<'])? true : false;\n\t\t}\n\t\tif(u !== o['>'] && t >= o['>']){ return true }\n\t\tif(u !== o['<'] && t <= o['<']){ return true }\n\t\treturn false;\n\t}\n\tType.text.hash = Type.text.hash || function(s, c){ // via SO\n\t\tDEP('text.hash');\n\t\tif(typeof s !== 'string'){ return }\n\t  c = c || 0;\n\t  if(!s.length){ return c }\n\t  for(var i=0,l=s.length,n; i<l; ++i){\n\t    n = s.charCodeAt(i);\n\t    c = ((c<<5)-c)+n;\n\t    c |= 0;\n\t  }\n\t  return c;\n\t}\n\tType.list = Type.list || {is: function(l){ DEP('list'); return (l instanceof Array) }}\n\tType.list.slit = Type.list.slit || Array.prototype.slice;\n\tType.list.sort = Type.list.sort || function(k){ // creates a new sort function based off some key\n\t\tDEP('list.sort');\n\t\treturn function(A,B){\n\t\t\tif(!A || !B){ return 0 } A = A[k]; B = B[k];\n\t\t\tif(A < B){ return -1 }else if(A > B){ return 1 }\n\t\t\telse { return 0 }\n\t\t}\n\t}\n\tType.list.map = Type.list.map || function(l, c, _){ DEP('list.map'); return obj_map(l, c, _) }\n\tType.list.index = 1; // change this to 0 if you want non-logical, non-mathematical, non-matrix, non-convenient array notation\n\tType.obj = Type.boj || {is: function(o){ DEP('obj'); return o? (o instanceof Object && o.constructor === Object) || Object.prototype.toString.call(o).match(/^\\[object (\\w+)\\]$/)[1] === 'Object' : false }}\n\tType.obj.put = Type.obj.put || function(o, k, v){ DEP('obj.put'); return (o||{})[k] = v, o }\n\tType.obj.has = Type.obj.has || function(o, k){ DEP('obj.has'); return o && Object.prototype.hasOwnProperty.call(o, k) }\n\tType.obj.del = Type.obj.del || function(o, k){ DEP('obj.del'); \n\t\tif(!o){ return }\n\t\to[k] = null;\n\t\tdelete o[k];\n\t\treturn o;\n\t}\n\tType.obj.as = Type.obj.as || function(o, k, v, u){ DEP('obj.as'); return o[k] = o[k] || (u === v? {} : v) }\n\tType.obj.ify = Type.obj.ify || function(o){ DEP('obj.ify'); \n\t\tif(obj_is(o)){ return o }\n\t\ttry{o = JSON.parse(o);\n\t\t}catch(e){o={}};\n\t\treturn o;\n\t}\n\t;(function(){ var u;\n\t\tfunction map(v,k){\n\t\t\tif(obj_has(this,k) && u !== this[k]){ return }\n\t\t\tthis[k] = v;\n\t\t}\n\t\tType.obj.to = Type.obj.to || function(from, to){ DEP('obj.to'); \n\t\t\tto = to || {};\n\t\t\tobj_map(from, map, to);\n\t\t\treturn to;\n\t\t}\n\t}());\n\tType.obj.copy = Type.obj.copy || function(o){ DEP('obj.copy'); // because http://web.archive.org/web/20140328224025/http://jsperf.com/cloning-an-object/2\n\t\treturn !o? o : JSON.parse(JSON.stringify(o)); // is shockingly faster than anything else, and our data has to be a subset of JSON anyways!\n\t}\n\t;(function(){\n\t\tfunction empty(v,i){ var n = this.n, u;\n\t\t\tif(n && (i === n || (obj_is(n) && obj_has(n, i)))){ return }\n\t\t\tif(u !== i){ return true }\n\t\t}\n\t\tType.obj.empty = Type.obj.empty || function(o, n){ DEP('obj.empty'); \n\t\t\tif(!o){ return true }\n\t\t\treturn obj_map(o,empty,{n:n})? false : true;\n\t\t}\n\t}());\n\t;(function(){\n\t\tfunction t(k,v){\n\t\t\tif(2 === arguments.length){\n\t\t\t\tt.r = t.r || {};\n\t\t\t\tt.r[k] = v;\n\t\t\t\treturn;\n\t\t\t} t.r = t.r || [];\n\t\t\tt.r.push(k);\n\t\t};\n\t\tvar keys = Object.keys, map, u;\n\t\tObject.keys = Object.keys || function(o){ return map(o, function(v,k,t){t(k)}) }\n\t\tType.obj.map = map = Type.obj.map || function(l, c, _){ DEP('obj.map'); \n\t\t\tvar u, i = 0, x, r, ll, lle, f = 'function' == typeof c;\n\t\t\tt.r = u;\n\t\t\tif(keys && obj_is(l)){\n\t\t\t\tll = keys(l); lle = true;\n\t\t\t}\n\t\t\t_ = _ || {};\n\t\t\tif(list_is(l) || ll){\n\t\t\t\tx = (ll || l).length;\n\t\t\t\tfor(;i < x; i++){\n\t\t\t\t\tvar ii = (i + Type.list.index);\n\t\t\t\t\tif(f){\n\t\t\t\t\t\tr = lle? c.call(_, l[ll[i]], ll[i], t) : c.call(_, l[i], ii, t);\n\t\t\t\t\t\tif(r !== u){ return r }\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//if(Type.test.is(c,l[i])){ return ii } // should implement deep equality testing!\n\t\t\t\t\t\tif(c === l[lle? ll[i] : i]){ return ll? ll[i] : ii } // use this for now\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor(i in l){\n\t\t\t\t\tif(f){\n\t\t\t\t\t\tif(obj_has(l,i)){\n\t\t\t\t\t\t\tr = _? c.call(_, l[i], i, t) : c(l[i], i, t);\n\t\t\t\t\t\t\tif(r !== u){ return r }\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//if(a.test.is(c,l[i])){ return i } // should implement deep equality testing!\n\t\t\t\t\t\tif(c === l[i]){ return i } // use this for now\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn f? t.r : Type.list.index? 0 : -1;\n\t\t}\n\t}());\n\tType.time = Type.time || {};\n\tType.time.is = Type.time.is || function(t){ DEP('time'); return t? t instanceof Date : (+new Date().getTime()) }\n\n\tvar fn_is = Type.fn.is;\n\tvar list_is = Type.list.is;\n\tvar obj = Type.obj, obj_is = obj.is, obj_has = obj.has, obj_map = obj.map;\n\n\tvar Val = {};\n\tVal.is = function(v){ DEP('val.is'); // Valid values are a subset of JSON: null, binary, number (!Infinity), text, or a soul relation. Arrays need special algorithms to handle concurrency, so they are not supported directly. Use an extension that supports them if needed but research their problems first.\n\t\tif(v === u){ return false }\n\t\tif(v === null){ return true } // \"deletes\", nulling out keys.\n\t\tif(v === Infinity){ return false } // we want this to be, but JSON does not support it, sad face.\n\t\tif(text_is(v) // by \"text\" we mean strings.\n\t\t|| bi_is(v) // by \"binary\" we mean boolean.\n\t\t|| num_is(v)){ // by \"number\" we mean integers or decimals.\n\t\t\treturn true; // simple values are valid.\n\t\t}\n\t\treturn Val.link.is(v) || false; // is the value a soul relation? Then it is valid and return it. If not, everything else remaining is an invalid data type. Custom extensions can be built on top of these primitives to support other types.\n\t}\n\tVal.link = Val.rel = {_: '#'};\n\t;(function(){\n\t\tVal.link.is = function(v){ DEP('val.link.is'); // this defines whether an object is a soul relation or not, they look like this: {'#': 'UUID'}\n\t\t\tif(v && v[rel_] && !v._ && obj_is(v)){ // must be an object.\n\t\t\t\tvar o = {};\n\t\t\t\tobj_map(v, map, o);\n\t\t\t\tif(o.id){ // a valid id was found.\n\t\t\t\t\treturn o.id; // yay! Return it.\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false; // the value was not a valid soul relation.\n\t\t}\n\t\tfunction map(s, k){ var o = this; // map over the object...\n\t\t\tif(o.id){ return o.id = false } // if ID is already defined AND we're still looping through the object, it is considered invalid.\n\t\t\tif(k == rel_ && text_is(s)){ // the key should be '#' and have a text value.\n\t\t\t\to.id = s; // we found the soul!\n\t\t\t} else {\n\t\t\t\treturn o.id = false; // if there exists anything else on the object that isn't the soul, then it is considered invalid.\n\t\t\t}\n\t\t}\n\t}());\n\tVal.link.ify = function(t){ DEP('val.link.ify'); return obj_put({}, rel_, t) } // convert a soul into a relation and return it.\n\tType.obj.has._ = '.';\n\tvar rel_ = Val.link._, u;\n\tvar bi_is = Type.bi.is;\n\tvar num_is = Type.num.is;\n\tvar text_is = Type.text.is;\n\tvar obj = Type.obj, obj_is = obj.is, obj_put = obj.put, obj_map = obj.map;\n\n\tType.val = Type.val || Val;\n\n\tvar Node = {_: '_'};\n\tNode.soul = function(n, o){ DEP('node.soul'); return (n && n._ && n._[o || soul_]) } // convenience function to check to see if there is a soul on a node and return it.\n\tNode.soul.ify = function(n, o){ DEP('node.soul.ify'); // put a soul on an object.\n\t\to = (typeof o === 'string')? {soul: o} : o || {};\n\t\tn = n || {}; // make sure it exists.\n\t\tn._ = n._ || {}; // make sure meta exists.\n\t\tn._[soul_] = o.soul || n._[soul_] || text_random(); // put the soul on it.\n\t\treturn n;\n\t}\n\tNode.soul._ = Val.link._;\n\t;(function(){\n\t\tNode.is = function(n, cb, as){ DEP('node.is'); var s; // checks to see if an object is a valid node.\n\t\t\tif(!obj_is(n)){ return false } // must be an object.\n\t\t\tif(s = Node.soul(n)){ // must have a soul on it.\n\t\t\t\treturn !obj_map(n, map, {as:as,cb:cb,s:s,n:n});\n\t\t\t}\n\t\t\treturn false; // nope! This was not a valid node.\n\t\t}\n\t\tfunction map(v, k){ // we invert this because the way we check for this is via a negation.\n\t\t\tif(k === Node._){ return } // skip over the metadata.\n\t\t\tif(!Val.is(v)){ return true } // it is true that this is an invalid node.\n\t\t\tif(this.cb){ this.cb.call(this.as, v, k, this.n, this.s) } // optionally callback each key/value.\n\t\t}\n\t}());\n\t;(function(){\n\t\tNode.ify = function(obj, o, as){ DEP('node.ify'); // returns a node from a shallow object.\n\t\t\tif(!o){ o = {} }\n\t\t\telse if(typeof o === 'string'){ o = {soul: o} }\n\t\t\telse if('function' == typeof o){ o = {map: o} }\n\t\t\tif(o.map){ o.node = o.map.call(as, obj, u, o.node || {}) }\n\t\t\tif(o.node = Node.soul.ify(o.node || {}, o)){\n\t\t\t\tobj_map(obj, map, {o:o,as:as});\n\t\t\t}\n\t\t\treturn o.node; // This will only be a valid node if the object wasn't already deep!\n\t\t}\n\t\tfunction map(v, k){ var o = this.o, tmp, u; // iterate over each key/value.\n\t\t\tif(o.map){\n\t\t\t\ttmp = o.map.call(this.as, v, ''+k, o.node);\n\t\t\t\tif(u === tmp){\n\t\t\t\t\tobj_del(o.node, k);\n\t\t\t\t} else\n\t\t\t\tif(o.node){ o.node[k] = tmp }\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(Val.is(v)){\n\t\t\t\to.node[k] = v;\n\t\t\t}\n\t\t}\n\t}());\n\tvar obj = Type.obj, obj_is = obj.is, obj_del = obj.del, obj_map = obj.map;\n\tvar text = Type.text, text_random = text.random;\n\tvar soul_ = Node.soul._;\n\tvar u;\n\tType.node = Type.node || Node;\n\n\tvar State = Type.state;\n\tState.lex = function(){ DEP('state.lex'); return State().toString(36).replace('.','') }\n\tState.to = function(from, k, to){ DEP('state.to'); \n\t\tvar val = (from||{})[k];\n\t\tif(obj_is(val)){\n\t\t\tval = obj_copy(val);\n\t\t}\n\t\treturn State.ify(to, k, State.is(from, k), val, Node.soul(from));\n\t}\n\t;(function(){\n\t\tState.map = function(cb, s, as){ DEP('state.map'); var u; // for use with Node.ify\n\t\t\tvar o = obj_is(o = cb || s)? o : null;\n\t\t\tcb = fn_is(cb = cb || s)? cb : null;\n\t\t\tif(o && !cb){\n\t\t\t\ts = num_is(s)? s : State();\n\t\t\t\to[N_] = o[N_] || {};\n\t\t\t\tobj_map(o, map, {o:o,s:s});\n\t\t\t\treturn o;\n\t\t\t}\n\t\t\tas = as || obj_is(s)? s : u;\n\t\t\ts = num_is(s)? s : State();\n\t\t\treturn function(v, k, o, opt){\n\t\t\t\tif(!cb){\n\t\t\t\t\tmap.call({o: o, s: s}, v,k);\n\t\t\t\t\treturn v;\n\t\t\t\t}\n\t\t\t\tcb.call(as || this || {}, v, k, o, opt);\n\t\t\t\tif(obj_has(o,k) && u === o[k]){ return }\n\t\t\t\tmap.call({o: o, s: s}, v,k);\n\t\t\t}\n\t\t}\n\t\tfunction map(v,k){\n\t\t\tif(N_ === k){ return }\n\t\t\tState.ify(this.o, k, this.s) ;\n\t\t}\n\t}());\n\tvar obj = Type.obj, obj_as = obj.as, obj_has = obj.has, obj_is = obj.is, obj_map = obj.map, obj_copy = obj.copy;\n\tvar num = Type.num, num_is = num.is;\n\tvar fn = Type.fn, fn_is = fn.is;\n\tvar N_ = Node._, u;\n\n\tvar Graph = {};\n\t;(function(){\n\t\tGraph.is = function(g, cb, fn, as){ DEP('graph.is'); // checks to see if an object is a valid graph.\n\t\t\tif(!g || !obj_is(g) || obj_empty(g)){ return false } // must be an object.\n\t\t\treturn !obj_map(g, map, {cb:cb,fn:fn,as:as}); // makes sure it wasn't an empty object.\n\t\t}\n\t\tfunction map(n, s){ // we invert this because the way'? we check for this is via a negation.\n\t\t\tif(!n || s !== Node.soul(n) || !Node.is(n, this.fn, this.as)){ return true } // it is true that this is an invalid graph.\n\t\t\tif(!this.cb){ return }\n\t\t\tnf.n = n; nf.as = this.as; // sequential race conditions aren't races.\n\t\t\tthis.cb.call(nf.as, n, s, nf);\n\t\t}\n\t\tfunction nf(fn){ // optional callback for each node.\n\t\t\tif(fn){ Node.is(nf.n, fn, nf.as) } // where we then have an optional callback for each key/value.\n\t\t}\n\t}());\n\t;(function(){\n\t\tGraph.ify = function(obj, env, as){ DEP('graph.ify'); \n\t\t\tvar at = {path: [], obj: obj};\n\t\t\tif(!env){\n\t\t\t\tenv = {};\n\t\t\t} else\n\t\t\tif(typeof env === 'string'){\n\t\t\t\tenv = {soul: env};\n\t\t\t} else\n\t\t\tif('function' == typeof env){\n\t\t\t\tenv.map = env;\n\t\t\t}\n\t\t\tif(typeof as === 'string'){\n\t\t\t\tenv.soul = env.soul || as;\n\t\t\t\tas = u;\n\t\t\t}\n\t\t\tif(env.soul){\n\t\t\t\tat.link = Val.link.ify(env.soul);\n\t\t\t}\n\t\t\tenv.shell = (as||{}).shell;\n\t\t\tenv.graph = env.graph || {};\n\t\t\tenv.seen = env.seen || [];\n\t\t\tenv.as = env.as || as;\n\t\t\tnode(env, at);\n\t\t\tenv.root = at.node;\n\t\t\treturn env.graph;\n\t\t}\n\t\tfunction node(env, at){ var tmp;\n\t\t\tif(tmp = seen(env, at)){ return tmp }\n\t\t\tat.env = env;\n\t\t\tat.soul = soul;\n\t\t\tif(Node.ify(at.obj, map, at)){\n\t\t\t\tat.link = at.link || Val.link.ify(Node.soul(at.node));\n\t\t\t\tif(at.obj !== env.shell){\n\t\t\t\t\tenv.graph[Val.link.is(at.link)] = at.node;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn at;\n\t\t}\n\t\tfunction map(v,k,n){\n\t\t\tvar at = this, env = at.env, is, tmp;\n\t\t\tif(Node._ === k && obj_has(v,Val.link._)){\n\t\t\t\treturn n._; // TODO: Bug?\n\t\t\t}\n\t\t\tif(!(is = valid(v,k,n, at,env))){ return }\n\t\t\tif(!k){\n\t\t\t\tat.node = at.node || n || {};\n\t\t\t\tif(obj_has(v, Node._) && Node.soul(v)){ // ? for safety ?\n\t\t\t\t\tat.node._ = obj_copy(v._);\n\t\t\t\t}\n\t\t\t\tat.node = Node.soul.ify(at.node, Val.link.is(at.link));\n\t\t\t\tat.link = at.link || Val.link.ify(Node.soul(at.node));\n\t\t\t}\n\t\t\tif(tmp = env.map){\n\t\t\t\ttmp.call(env.as || {}, v,k,n, at);\n\t\t\t\tif(obj_has(n,k)){\n\t\t\t\t\tv = n[k];\n\t\t\t\t\tif(u === v){\n\t\t\t\t\t\tobj_del(n, k);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif(!(is = valid(v,k,n, at,env))){ return }\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!k){ return at.node }\n\t\t\tif(true === is){\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\ttmp = node(env, {obj: v, path: at.path.concat(k)});\n\t\t\tif(!tmp.node){ return }\n\t\t\treturn tmp.link; //{'#': Node.soul(tmp.node)};\n\t\t}\n\t\tfunction soul(id){ var at = this;\n\t\t\tvar prev = Val.link.is(at.link), graph = at.env.graph;\n\t\t\tat.link = at.link || Val.link.ify(id);\n\t\t\tat.link[Val.link._] = id;\n\t\t\tif(at.node && at.node[Node._]){\n\t\t\t\tat.node[Node._][Val.link._] = id;\n\t\t\t}\n\t\t\tif(obj_has(graph, prev)){\n\t\t\t\tgraph[id] = graph[prev];\n\t\t\t\tobj_del(graph, prev);\n\t\t\t}\n\t\t}\n\t\tfunction valid(v,k,n, at,env){ var tmp;\n\t\t\tif(Val.is(v)){ return true }\n\t\t\tif(obj_is(v)){ return 1 }\n\t\t\tif(tmp = env.invalid){\n\t\t\t\tv = tmp.call(env.as || {}, v,k,n);\n\t\t\t\treturn valid(v,k,n, at,env);\n\t\t\t}\n\t\t\tenv.err = \"Invalid value at '\" + at.path.concat(k).join('.') + \"'!\";\n\t\t\tif(Type.list.is(v)){ env.err += \" Use `.set(item)` instead of an Array.\" }\n\t\t}\n\t\tfunction seen(env, at){\n\t\t\tvar arr = env.seen, i = arr.length, has;\n\t\t\twhile(i--){ has = arr[i];\n\t\t\t\tif(at.obj === has.obj){ return has }\n\t\t\t}\n\t\t\tarr.push(at);\n\t\t}\n\t}());\n\tGraph.node = function(node){ DEP('graph.node'); \n\t\tvar soul = Node.soul(node);\n\t\tif(!soul){ return }\n\t\treturn obj_put({}, soul, node);\n\t}\n\t;(function(){\n\t\tGraph.to = function(graph, root, opt){ DEP('graph.to'); \n\t\t\tif(!graph){ return }\n\t\t\tvar obj = {};\n\t\t\topt = opt || {seen: {}};\n\t\t\tobj_map(graph[root], map, {obj:obj, graph: graph, opt: opt});\n\t\t\treturn obj;\n\t\t}\n\t\tfunction map(v,k){ var tmp, obj;\n\t\t\tif(Node._ === k){\n\t\t\t\tif(obj_empty(v, Val.link._)){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.obj[k] = obj_copy(v);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(!(tmp = Val.link.is(v))){\n\t\t\t\tthis.obj[k] = v;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(obj = this.opt.seen[tmp]){\n\t\t\t\tthis.obj[k] = obj;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.obj[k] = this.opt.seen[tmp] = Graph.to(this.graph, tmp, this.opt);\n\t\t}\n\t}());\n\tvar fn_is = Type.fn.is;\n\tvar obj = Type.obj, obj_is = obj.is, obj_del = obj.del, obj_has = obj.has, obj_empty = obj.empty, obj_put = obj.put, obj_map = obj.map, obj_copy = obj.copy;\n\tvar u;\n\tType.graph = Type.graph || Graph;\n}());"],
  "mappings": "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",
  "names": []
}
