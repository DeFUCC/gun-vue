{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/gun@0.2020.1235/node_modules/gun/lib/webrtc.js", "dep:gun_lib_webrtc"],
  "sourcesContent": [";(function(){\n\tvar Gun = (typeof window !== \"undefined\")? window.Gun : require('../gun');\n\n\tGun.on('opt', function(root){\n\t\tthis.to.next(root);\n\t\tvar opt = root.opt;\n\t\tif(root.once){ return }\n\t\tif(!Gun.Mesh){ return }\n\t\tif(false === opt.RTCPeerConnection){ return }\n\n\t\tvar env;\n\t\tif(typeof window !== \"undefined\"){ env = window }\n\t\tif(typeof global !== \"undefined\"){ env = global }\n\t\tenv = env || {};\n\n\t\tvar rtcpc = opt.RTCPeerConnection || env.RTCPeerConnection || env.webkitRTCPeerConnection || env.mozRTCPeerConnection;\n\t\tvar rtcsd = opt.RTCSessionDescription || env.RTCSessionDescription || env.webkitRTCSessionDescription || env.mozRTCSessionDescription;\n\t\tvar rtcic = opt.RTCIceCandidate || env.RTCIceCandidate || env.webkitRTCIceCandidate || env.mozRTCIceCandidate;\n\t\tif(!rtcpc || !rtcsd || !rtcic){ return }\n\t\topt.RTCPeerConnection = rtcpc;\n\t\topt.RTCSessionDescription = rtcsd;\n\t\topt.RTCIceCandidate = rtcic;\n\t\topt.rtc = opt.rtc || {'iceServers': [\n      {urls: 'stun:stun.l.google.com:19302'},\n      {urls: \"stun:stun.sipgate.net:3478\"}/*,\n      {urls: \"stun:stun.stunprotocol.org\"},\n      {urls: \"stun:stun.sipgate.net:10000\"},\n      {urls: \"stun:217.10.68.152:10000\"},\n      {urls: 'stun:stun.services.mozilla.com'}*/ \n    ]};\n    // TODO: Select the most appropriate stuns. \n    // FIXME: Find the wire throwing ICE Failed\n    // The above change corrects at least firefox RTC Peer handler where it **throws** on over 6 ice servers, and updates url: to urls: removing deprecation warning \n    opt.rtc.dataChannel = opt.rtc.dataChannel || {ordered: false, maxRetransmits: 2};\n    opt.rtc.sdp = opt.rtc.sdp || {mandatory: {OfferToReceiveAudio: false, OfferToReceiveVideo: false}};\n    opt.announce = function(to){\n\t\t\troot.on('out', {rtc: {id: opt.pid, to:to}}); // announce ourself\n    };\n\t\tvar mesh = opt.mesh = opt.mesh || Gun.Mesh(root);\n\t\troot.on('create', function(at){\n\t\t\tthis.to.next(at);\n\t\t\tsetTimeout(opt.announce, 1);\n\t\t});\n\t\troot.on('in', function(msg){\n\t\t\tif(msg.rtc){ open(msg) }\n\t\t\tthis.to.next(msg);\n\t\t});\n\n\t\tfunction open(msg){\n\t\t\tvar rtc = msg.rtc, peer, tmp;\n\t\t\tif(!rtc || !rtc.id){ return }\n\t\t\tdelete opt.announce[rtc.id]; /// remove after connect\n\t\t\tif(tmp = rtc.answer){\n\t\t\t\tif(!(peer = opt.peers[rtc.id] || open[rtc.id]) || peer.remoteSet){ return }\n\t\t\t\treturn peer.setRemoteDescription(peer.remoteSet = new opt.RTCSessionDescription(tmp)); \n\t\t\t}\n\t\t\tif(tmp = rtc.candidate){\n\t\t\t\tpeer = opt.peers[rtc.id] || open[rtc.id] || open({rtc: {id: rtc.id}});\n\t\t\t\treturn peer.addIceCandidate(new opt.RTCIceCandidate(tmp));\n\t\t\t}\n\t\t\t//if(opt.peers[rtc.id]){ return }\n\t\t\tif(open[rtc.id]){ return }\n\t\t\t(peer = new opt.RTCPeerConnection(opt.rtc)).id = rtc.id;\n\t\t\tvar wire = peer.wire = peer.createDataChannel('dc', opt.rtc.dataChannel);\n\t\t\topen[rtc.id] = peer;\n\t\t\twire.onclose = function(){\n\t\t\t\tdelete open[rtc.id];\n\t\t\t\tmesh.bye(peer);\n\t\t\t\t//reconnect(peer);\n\t\t\t};\n\t\t\twire.onerror = function(err){};\n\t\t\twire.onopen = function(e){\n\t\t\t\t//delete open[rtc.id];\n\t\t\t\tmesh.hi(peer);\n\t\t\t}\n\t\t\twire.onmessage = function(msg){\n\t\t\t\tif(!msg){ return }\n\t\t\t\tmesh.hear(msg.data || msg, peer);\n\t\t\t};\n\t\t\tpeer.onicecandidate = function(e){ // source: EasyRTC!\n        if(!e.candidate){ return }\n        root.on('out', {'@': msg['#'], rtc: {candidate: e.candidate, id: opt.pid}});\n\t\t\t}\n\t\t\tpeer.ondatachannel = function(e){\n\t\t\t\tvar rc = e.channel;\n\t\t\t\trc.onmessage = wire.onmessage;\n\t\t\t\trc.onopen = wire.onopen;\n\t\t\t\trc.onclose = wire.onclose;\n\t\t\t}\n\t\t\tif(tmp = rtc.offer){\n\t\t\t\tpeer.setRemoteDescription(new opt.RTCSessionDescription(tmp)); \n\t\t\t\tpeer.createAnswer(function(answer){\n\t\t\t\t\tpeer.setLocalDescription(answer);\n\t\t\t\t\troot.on('out', {'@': msg['#'], rtc: {answer: answer, id: opt.pid}});\n\t\t\t\t}, function(){}, opt.rtc.sdp);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpeer.createOffer(function(offer){\n\t\t\t\tpeer.setLocalDescription(offer);\n\t\t\t\troot.on('out', {'@': msg['#'], rtc: {offer: offer, id: opt.pid}});\n\t\t\t}, function(){}, opt.rtc.sdp);\n\t\t\treturn peer;\n\t\t}\n\t});\n\tvar noop = function(){};\n}());\n", "export default require(\"../../node_modules/.pnpm/gun@0.2020.1235/node_modules/gun/lib/webrtc.js\");"],
  "mappings": "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",
  "names": []
}
