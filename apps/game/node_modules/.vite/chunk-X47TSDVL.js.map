{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/gun@0.2020.1235/node_modules/gun/sea.js"],
  "sourcesContent": [";(function(){\n\n  /* UNBUILD */\n  function USE(arg, req){\n    return req? require(arg) : arg.slice? USE[R(arg)] : function(mod, path){\n      arg(mod = {exports: {}});\n      USE[R(path)] = mod.exports;\n    }\n    function R(p){\n      return p.split('/').slice(-1).toString().replace('.js','');\n    }\n  }\n  if(typeof module !== \"undefined\"){ var MODULE = module }\n  /* UNBUILD */\n\n  ;USE(function(module){\n    // Security, Encryption, and Authorization: SEA.js\n    // MANDATORY READING: https://gun.eco/explainers/data/security.html\n    // IT IS IMPLEMENTED IN A POLYFILL/SHIM APPROACH.\n    // THIS IS AN EARLY ALPHA!\n\n    if(typeof window !== \"undefined\"){ module.window = window }\n\n    var tmp = module.window || module, u;\n    var SEA = tmp.SEA || {};\n\n    if(SEA.window = module.window){ SEA.window.SEA = SEA }\n\n    try{ if(u+'' !== typeof MODULE){ MODULE.exports = SEA } }catch(e){}\n    module.exports = SEA;\n  })(USE, './root');\n\n  ;USE(function(module){\n    var SEA = USE('./root');\n    try{ if(SEA.window){\n      if(location.protocol.indexOf('s') < 0\n      && location.host.indexOf('localhost') < 0\n      && ! /^127\\.\\d+\\.\\d+\\.\\d+$/.test(location.hostname)\n      && location.protocol.indexOf('file:') < 0){\n        console.warn('HTTPS needed for WebCrypto in SEA, redirecting...');\n        location.protocol = 'https:'; // WebCrypto does NOT work without HTTPS!\n      }\n    } }catch(e){}\n  })(USE, './https');\n\n  ;USE(function(module){\n    var u;\n    if(u+''== typeof btoa){\n      if(u+'' == typeof Buffer){\n        try{ global.Buffer = USE(\"buffer\", 1).Buffer }catch(e){ console.log(\"Please `npm install buffer` or add it to your package.json !\") }\n      }\n      global.btoa = function(data){ return Buffer.from(data, \"binary\").toString(\"base64\") };\n      global.atob = function(data){ return Buffer.from(data, \"base64\").toString(\"binary\") };\n    }\n  })(USE, './base64');\n\n  ;USE(function(module){\n    USE('./base64');\n    // This is Array extended to have .toString(['utf8'|'hex'|'base64'])\n    function SeaArray() {}\n    Object.assign(SeaArray, { from: Array.from })\n    SeaArray.prototype = Object.create(Array.prototype)\n    SeaArray.prototype.toString = function(enc, start, end) { enc = enc || 'utf8'; start = start || 0;\n      const length = this.length\n      if (enc === 'hex') {\n        const buf = new Uint8Array(this)\n        return [ ...Array(((end && (end + 1)) || length) - start).keys()]\n        .map((i) => buf[ i + start ].toString(16).padStart(2, '0')).join('')\n      }\n      if (enc === 'utf8') {\n        return Array.from(\n          { length: (end || length) - start },\n          (_, i) => String.fromCharCode(this[ i + start])\n        ).join('')\n      }\n      if (enc === 'base64') {\n        return btoa(this)\n      }\n    }\n    module.exports = SeaArray;\n  })(USE, './array');\n\n  ;USE(function(module){\n    USE('./base64');\n    // This is Buffer implementation used in SEA. Functionality is mostly\n    // compatible with NodeJS 'safe-buffer' and is used for encoding conversions\n    // between binary and 'hex' | 'utf8' | 'base64'\n    // See documentation and validation for safe implementation in:\n    // https://github.com/feross/safe-buffer#update\n    var SeaArray = USE('./array');\n    function SafeBuffer(...props) {\n      console.warn('new SafeBuffer() is depreciated, please use SafeBuffer.from()')\n      return SafeBuffer.from(...props)\n    }\n    SafeBuffer.prototype = Object.create(Array.prototype)\n    Object.assign(SafeBuffer, {\n      // (data, enc) where typeof data === 'string' then enc === 'utf8'|'hex'|'base64'\n      from() {\n        if (!Object.keys(arguments).length || arguments[0]==null) {\n          throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n        }\n        const input = arguments[0]\n        let buf\n        if (typeof input === 'string') {\n          const enc = arguments[1] || 'utf8'\n          if (enc === 'hex') {\n            const bytes = input.match(/([\\da-fA-F]{2})/g)\n            .map((byte) => parseInt(byte, 16))\n            if (!bytes || !bytes.length) {\n              throw new TypeError('Invalid first argument for type \\'hex\\'.')\n            }\n            buf = SeaArray.from(bytes)\n          } else if (enc === 'utf8' || 'binary' === enc) { // EDIT BY MARK: I think this is safe, tested it against a couple \"binary\" strings. This lets SafeBuffer match NodeJS Buffer behavior more where it safely btoas regular strings.\n            const length = input.length\n            const words = new Uint16Array(length)\n            Array.from({ length: length }, (_, i) => words[i] = input.charCodeAt(i))\n            buf = SeaArray.from(words)\n          } else if (enc === 'base64') {\n            const dec = atob(input)\n            const length = dec.length\n            const bytes = new Uint8Array(length)\n            Array.from({ length: length }, (_, i) => bytes[i] = dec.charCodeAt(i))\n            buf = SeaArray.from(bytes)\n          } else if (enc === 'binary') { // deprecated by above comment\n            buf = SeaArray.from(input) // some btoas were mishandled.\n          } else {\n            console.info('SafeBuffer.from unknown encoding: '+enc)\n          }\n          return buf\n        }\n        const byteLength = input.byteLength // what is going on here? FOR MARTTI\n        const length = input.byteLength ? input.byteLength : input.length\n        if (length) {\n          let buf\n          if (input instanceof ArrayBuffer) {\n            buf = new Uint8Array(input)\n          }\n          return SeaArray.from(buf || input)\n        }\n      },\n      // This is 'safe-buffer.alloc' sans encoding support\n      alloc(length, fill = 0 /*, enc*/ ) {\n        return SeaArray.from(new Uint8Array(Array.from({ length: length }, () => fill)))\n      },\n      // This is normal UNSAFE 'buffer.alloc' or 'new Buffer(length)' - don't use!\n      allocUnsafe(length) {\n        return SeaArray.from(new Uint8Array(Array.from({ length : length })))\n      },\n      // This puts together array of array like members\n      concat(arr) { // octet array\n        if (!Array.isArray(arr)) {\n          throw new TypeError('First argument must be Array containing ArrayBuffer or Uint8Array instances.')\n        }\n        return SeaArray.from(arr.reduce((ret, item) => ret.concat(Array.from(item)), []))\n      }\n    })\n    SafeBuffer.prototype.from = SafeBuffer.from\n    SafeBuffer.prototype.toString = SeaArray.prototype.toString\n\n    module.exports = SafeBuffer;\n  })(USE, './buffer');\n\n  ;USE(function(module){\n    const SEA = USE('./root')\n    const api = {Buffer: USE('./buffer')}\n    var o = {}, u;\n\n    // ideally we can move away from JSON entirely? unlikely due to compatibility issues... oh well.\n    JSON.parseAsync = JSON.parseAsync || function(t,cb,r){ var u; try{ cb(u, JSON.parse(t,r)) }catch(e){ cb(e) } }\n    JSON.stringifyAsync = JSON.stringifyAsync || function(v,cb,r,s){ var u; try{ cb(u, JSON.stringify(v,r,s)) }catch(e){ cb(e) } }\n\n    api.parse = function(t,r){ return new Promise(function(res, rej){\n      JSON.parseAsync(t,function(err, raw){ err? rej(err) : res(raw) },r);\n    })}\n    api.stringify = function(v,r,s){ return new Promise(function(res, rej){\n      JSON.stringifyAsync(v,function(err, raw){ err? rej(err) : res(raw) },r,s);\n    })}\n\n    if(SEA.window){\n      api.crypto = window.crypto || window.msCrypto\n      api.subtle = (api.crypto||o).subtle || (api.crypto||o).webkitSubtle;\n      api.TextEncoder = window.TextEncoder;\n      api.TextDecoder = window.TextDecoder;\n      api.random = (len) => api.Buffer.from(api.crypto.getRandomValues(new Uint8Array(api.Buffer.alloc(len))));\n    }\n    if(!api.TextDecoder)\n    {\n      const { TextEncoder, TextDecoder } = USE((u+'' == typeof MODULE?'.':'')+'./lib/text-encoding', 1);\n      api.TextDecoder = TextDecoder;\n      api.TextEncoder = TextEncoder;\n    }\n    if(!api.crypto)\n    {\n      try\n      {\n      var crypto = USE('crypto', 1);\n      Object.assign(api, {\n        crypto,\n        random: (len) => api.Buffer.from(crypto.randomBytes(len))\n      });      \n      const { Crypto: WebCrypto } = USE('@peculiar/webcrypto', 1);\n      api.ossl = api.subtle = new WebCrypto({directory: 'ossl'}).subtle // ECDH\n    }\n    catch(e){\n      console.log(\"Please `npm install @peculiar/webcrypto` or add it to your package.json !\");\n    }}\n\n    module.exports = api\n  })(USE, './shim');\n\n  ;USE(function(module){\n    var SEA = USE('./root');\n    var shim = USE('./shim');\n    var s = {};\n    s.pbkdf2 = {hash: {name : 'SHA-256'}, iter: 100000, ks: 64};\n    s.ecdsa = {\n      pair: {name: 'ECDSA', namedCurve: 'P-256'},\n      sign: {name: 'ECDSA', hash: {name: 'SHA-256'}}\n    };\n    s.ecdh = {name: 'ECDH', namedCurve: 'P-256'};\n\n    // This creates Web Cryptography API compliant JWK for sign/verify purposes\n    s.jwk = function(pub, d){  // d === priv\n      pub = pub.split('.');\n      var x = pub[0], y = pub[1];\n      var jwk = {kty: \"EC\", crv: \"P-256\", x: x, y: y, ext: true};\n      jwk.key_ops = d ? ['sign'] : ['verify'];\n      if(d){ jwk.d = d }\n      return jwk;\n    };\n    \n    s.keyToJwk = function(keyBytes) {\n      const keyB64 = keyBytes.toString('base64');\n      const k = keyB64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=/g, '');\n      return { kty: 'oct', k: k, ext: false, alg: 'A256GCM' };\n    }\n\n    s.recall = {\n      validity: 12 * 60 * 60, // internally in seconds : 12 hours\n      hook: function(props){ return props } // { iat, exp, alias, remember } // or return new Promise((resolve, reject) => resolve(props)\n    };\n\n    s.check = function(t){ return (typeof t == 'string') && ('SEA{' === t.slice(0,4)) }\n    s.parse = async function p(t){ try {\n      var yes = (typeof t == 'string');\n      if(yes && 'SEA{' === t.slice(0,4)){ t = t.slice(3) }\n      return yes ? await shim.parse(t) : t;\n      } catch (e) {}\n      return t;\n    }\n\n    SEA.opt = s;\n    module.exports = s\n  })(USE, './settings');\n\n  ;USE(function(module){\n    var shim = USE('./shim');\n    module.exports = async function(d, o){\n      var t = (typeof d == 'string')? d : await shim.stringify(d);\n      var hash = await shim.subtle.digest({name: o||'SHA-256'}, new shim.TextEncoder().encode(t));\n      return shim.Buffer.from(hash);\n    }\n  })(USE, './sha256');\n\n  ;USE(function(module){\n    // This internal func returns SHA-1 hashed data for KeyID generation\n    const __shim = USE('./shim')\n    const subtle = __shim.subtle\n    const ossl = __shim.ossl ? __shim.ossl : subtle\n    const sha1hash = (b) => ossl.digest({name: 'SHA-1'}, new ArrayBuffer(b))\n    module.exports = sha1hash\n  })(USE, './sha1');\n\n  ;USE(function(module){\n    var SEA = USE('./root');\n    var shim = USE('./shim');\n    var S = USE('./settings');\n    var sha = USE('./sha256');\n    var u;\n\n    SEA.work = SEA.work || (async (data, pair, cb, opt) => { try { // used to be named `proof`\n      var salt = (pair||{}).epub || pair; // epub not recommended, salt should be random!\n      opt = opt || {};\n      if(salt instanceof Function){\n        cb = salt;\n        salt = u;\n      }\n      data = (typeof data == 'string')? data : await shim.stringify(data);\n      if('sha' === (opt.name||'').toLowerCase().slice(0,3)){\n        var rsha = shim.Buffer.from(await sha(data, opt.name), 'binary').toString(opt.encode || 'base64')\n        if(cb){ try{ cb(rsha) }catch(e){console.log(e)} }\n        return rsha;\n      }\n      salt = salt || shim.random(9);\n      var key = await (shim.ossl || shim.subtle).importKey('raw', new shim.TextEncoder().encode(data), {name: opt.name || 'PBKDF2'}, false, ['deriveBits']);\n      var work = await (shim.ossl || shim.subtle).deriveBits({\n        name: opt.name || 'PBKDF2',\n        iterations: opt.iterations || S.pbkdf2.iter,\n        salt: new shim.TextEncoder().encode(opt.salt || salt),\n        hash: opt.hash || S.pbkdf2.hash,\n      }, key, opt.length || (S.pbkdf2.ks * 8))\n      data = shim.random(data.length)  // Erase data in case of passphrase\n      var r = shim.Buffer.from(work, 'binary').toString(opt.encode || 'base64')\n      if(cb){ try{ cb(r) }catch(e){console.log(e)} }\n      return r;\n    } catch(e) { \n      console.log(e);\n      SEA.err = e;\n      if(SEA.throw){ throw e }\n      if(cb){ cb() }\n      return;\n    }});\n\n    module.exports = SEA.work;\n  })(USE, './work');\n\n  ;USE(function(module){\n    var SEA = USE('./root');\n    var shim = USE('./shim');\n    var S = USE('./settings');\n\n    SEA.name = SEA.name || (async (cb, opt) => { try {\n      if(cb){ try{ cb() }catch(e){console.log(e)} }\n      return;\n    } catch(e) {\n      console.log(e);\n      SEA.err = e;\n      if(SEA.throw){ throw e }\n      if(cb){ cb() }\n      return;\n    }});\n\n    //SEA.pair = async (data, proof, cb) => { try {\n    SEA.pair = SEA.pair || (async (cb, opt) => { try {\n\n      var ecdhSubtle = shim.ossl || shim.subtle;\n      // First: ECDSA keys for signing/verifying...\n      var sa = await shim.subtle.generateKey({name: 'ECDSA', namedCurve: 'P-256'}, true, [ 'sign', 'verify' ])\n      .then(async (keys) => {\n        // privateKey scope doesn't leak out from here!\n        //const { d: priv } = await shim.subtle.exportKey('jwk', keys.privateKey)\n        var key = {};\n        key.priv = (await shim.subtle.exportKey('jwk', keys.privateKey)).d;\n        var pub = await shim.subtle.exportKey('jwk', keys.publicKey);\n        //const pub = Buff.from([ x, y ].join(':')).toString('base64') // old\n        key.pub = pub.x+'.'+pub.y; // new\n        // x and y are already base64\n        // pub is UTF8 but filename/URL safe (https://www.ietf.org/rfc/rfc3986.txt)\n        // but split on a non-base64 letter.\n        return key;\n      })\n      \n      // To include PGPv4 kind of keyId:\n      // const pubId = await SEA.keyid(keys.pub)\n      // Next: ECDH keys for encryption/decryption...\n\n      try{\n      var dh = await ecdhSubtle.generateKey({name: 'ECDH', namedCurve: 'P-256'}, true, ['deriveKey'])\n      .then(async (keys) => {\n        // privateKey scope doesn't leak out from here!\n        var key = {};\n        key.epriv = (await ecdhSubtle.exportKey('jwk', keys.privateKey)).d;\n        var pub = await ecdhSubtle.exportKey('jwk', keys.publicKey);\n        //const epub = Buff.from([ ex, ey ].join(':')).toString('base64') // old\n        key.epub = pub.x+'.'+pub.y; // new\n        // ex and ey are already base64\n        // epub is UTF8 but filename/URL safe (https://www.ietf.org/rfc/rfc3986.txt)\n        // but split on a non-base64 letter.\n        return key;\n      })\n      }catch(e){\n        if(SEA.window){ throw e }\n        if(e == 'Error: ECDH is not a supported algorithm'){ console.log('Ignoring ECDH...') }\n        else { throw e }\n      } dh = dh || {};\n\n      var r = { pub: sa.pub, priv: sa.priv, /* pubId, */ epub: dh.epub, epriv: dh.epriv }\n      if(cb){ try{ cb(r) }catch(e){console.log(e)} }\n      return r;\n    } catch(e) {\n      console.log(e);\n      SEA.err = e;\n      if(SEA.throw){ throw e }\n      if(cb){ cb() }\n      return;\n    }});\n\n    module.exports = SEA.pair;\n  })(USE, './pair');\n\n  ;USE(function(module){\n    var SEA = USE('./root');\n    var shim = USE('./shim');\n    var S = USE('./settings');\n    var sha = USE('./sha256');\n    var u;\n\n    SEA.sign = SEA.sign || (async (data, pair, cb, opt) => { try {\n      opt = opt || {};\n      if(!(pair||opt).priv){\n        if(!SEA.I){ throw 'No signing key.' }\n        pair = await SEA.I(null, {what: data, how: 'sign', why: opt.why});\n      }\n      if(u === data){ throw '`undefined` not allowed.' }\n      var json = await S.parse(data);\n      var check = opt.check = opt.check || json;\n      if(SEA.verify && (SEA.opt.check(check) || (check && check.s && check.m))\n      && u !== await SEA.verify(check, pair)){ // don't sign if we already signed it.\n        var r = await S.parse(check);\n        if(!opt.raw){ r = 'SEA' + await shim.stringify(r) }\n        if(cb){ try{ cb(r) }catch(e){console.log(e)} }\n        return r;\n      }\n      var pub = pair.pub;\n      var priv = pair.priv;\n      var jwk = S.jwk(pub, priv);\n      var hash = await sha(json);\n      var sig = await (shim.ossl || shim.subtle).importKey('jwk', jwk, {name: 'ECDSA', namedCurve: 'P-256'}, false, ['sign'])\n      .then((key) => (shim.ossl || shim.subtle).sign({name: 'ECDSA', hash: {name: 'SHA-256'}}, key, new Uint8Array(hash))) // privateKey scope doesn't leak out from here!\n      var r = {m: json, s: shim.Buffer.from(sig, 'binary').toString(opt.encode || 'base64')}\n      if(!opt.raw){ r = 'SEA' + await shim.stringify(r) }\n\n      if(cb){ try{ cb(r) }catch(e){console.log(e)} }\n      return r;\n    } catch(e) {\n      console.log(e);\n      SEA.err = e;\n      if(SEA.throw){ throw e }\n      if(cb){ cb() }\n      return;\n    }});\n\n    module.exports = SEA.sign;\n  })(USE, './sign');\n\n  ;USE(function(module){\n    var SEA = USE('./root');\n    var shim = USE('./shim');\n    var S = USE('./settings');\n    var sha = USE('./sha256');\n    var u;\n\n    SEA.verify = SEA.verify || (async (data, pair, cb, opt) => { try {\n      var json = await S.parse(data);\n      if(false === pair){ // don't verify!\n        var raw = await S.parse(json.m);\n        if(cb){ try{ cb(raw) }catch(e){console.log(e)} }\n        return raw;\n      }\n      opt = opt || {};\n      // SEA.I // verify is free! Requires no user permission.\n      var pub = pair.pub || pair;\n      var key = SEA.opt.slow_leak? await SEA.opt.slow_leak(pub) : await (shim.ossl || shim.subtle).importKey('jwk', S.jwk(pub), {name: 'ECDSA', namedCurve: 'P-256'}, false, ['verify']);\n      var hash = await sha(json.m);\n      var buf, sig, check, tmp; try{\n        buf = shim.Buffer.from(json.s, opt.encode || 'base64'); // NEW DEFAULT!\n        sig = new Uint8Array(buf);\n        check = await (shim.ossl || shim.subtle).verify({name: 'ECDSA', hash: {name: 'SHA-256'}}, key, sig, new Uint8Array(hash));\n        if(!check){ throw \"Signature did not match.\" }\n      }catch(e){\n        if(SEA.opt.fallback){\n          return await SEA.opt.fall_verify(data, pair, cb, opt);\n        }\n      }\n      var r = check? await S.parse(json.m) : u;\n\n      if(cb){ try{ cb(r) }catch(e){console.log(e)} }\n      return r;\n    } catch(e) {\n      console.log(e); // mismatched owner FOR MARTTI\n      SEA.err = e;\n      if(SEA.throw){ throw e }\n      if(cb){ cb() }\n      return;\n    }});\n\n    module.exports = SEA.verify;\n    // legacy & ossl leak mitigation:\n\n    var knownKeys = {};\n    var keyForPair = SEA.opt.slow_leak = pair => {\n      if (knownKeys[pair]) return knownKeys[pair];\n      var jwk = S.jwk(pair);\n      knownKeys[pair] = (shim.ossl || shim.subtle).importKey(\"jwk\", jwk, {name: 'ECDSA', namedCurve: 'P-256'}, false, [\"verify\"]);\n      return knownKeys[pair];\n    };\n\n    var O = SEA.opt;\n    SEA.opt.fall_verify = async function(data, pair, cb, opt, f){\n      if(f === SEA.opt.fallback){ throw \"Signature did not match\" } f = f || 1;\n      var tmp = data||'';\n      data = SEA.opt.unpack(data) || data;\n      var json = await S.parse(data), pub = pair.pub || pair, key = await SEA.opt.slow_leak(pub);\n      var hash = (f <= SEA.opt.fallback)? shim.Buffer.from(await shim.subtle.digest({name: 'SHA-256'}, new shim.TextEncoder().encode(await S.parse(json.m)))) : await sha(json.m); // this line is old bad buggy code but necessary for old compatibility.\n      var buf; var sig; var check; try{\n        buf = shim.Buffer.from(json.s, opt.encode || 'base64') // NEW DEFAULT!\n        sig = new Uint8Array(buf)\n        check = await (shim.ossl || shim.subtle).verify({name: 'ECDSA', hash: {name: 'SHA-256'}}, key, sig, new Uint8Array(hash))\n        if(!check){ throw \"Signature did not match.\" }\n      }catch(e){ try{\n        buf = shim.Buffer.from(json.s, 'utf8') // AUTO BACKWARD OLD UTF8 DATA!\n        sig = new Uint8Array(buf)\n        check = await (shim.ossl || shim.subtle).verify({name: 'ECDSA', hash: {name: 'SHA-256'}}, key, sig, new Uint8Array(hash))\n        }catch(e){\n        if(!check){ throw \"Signature did not match.\" }\n        }\n      }\n      var r = check? await S.parse(json.m) : u;\n      O.fall_soul = tmp['#']; O.fall_key = tmp['.']; O.fall_val = data; O.fall_state = tmp['>'];\n      if(cb){ try{ cb(r) }catch(e){console.log(e)} }\n      return r;\n    }\n    SEA.opt.fallback = 2;\n\n  })(USE, './verify');\n\n  ;USE(function(module){\n    var shim = USE('./shim');\n    var S = USE('./settings');\n    var sha256hash = USE('./sha256');\n\n    const importGen = async (key, salt, opt) => {\n      //const combo = shim.Buffer.concat([shim.Buffer.from(key, 'utf8'), salt || shim.random(8)]).toString('utf8') // old\n      opt = opt || {};\n      const combo = key + (salt || shim.random(8)).toString('utf8'); // new\n      const hash = shim.Buffer.from(await sha256hash(combo), 'binary')\n      \n      const jwkKey = S.keyToJwk(hash)      \n      return await shim.subtle.importKey('jwk', jwkKey, {name:'AES-GCM'}, false, ['encrypt', 'decrypt'])\n    }\n    module.exports = importGen;\n  })(USE, './aeskey');\n\n  ;USE(function(module){\n    var SEA = USE('./root');\n    var shim = USE('./shim');\n    var S = USE('./settings');\n    var aeskey = USE('./aeskey');\n    var u;\n\n    SEA.encrypt = SEA.encrypt || (async (data, pair, cb, opt) => { try {\n      opt = opt || {};\n      var key = (pair||opt).epriv || pair;\n      if(u === data){ throw '`undefined` not allowed.' }\n      if(!key){\n        if(!SEA.I){ throw 'No encryption key.' }\n        pair = await SEA.I(null, {what: data, how: 'encrypt', why: opt.why});\n        key = pair.epriv || pair;\n      }\n      var msg = (typeof data == 'string')? data : await shim.stringify(data);\n      var rand = {s: shim.random(9), iv: shim.random(15)}; // consider making this 9 and 15 or 18 or 12 to reduce == padding.\n      var ct = await aeskey(key, rand.s, opt).then((aes) => (/*shim.ossl ||*/ shim.subtle).encrypt({ // Keeping the AES key scope as private as possible...\n        name: opt.name || 'AES-GCM', iv: new Uint8Array(rand.iv)\n      }, aes, new shim.TextEncoder().encode(msg)));\n      var r = {\n        ct: shim.Buffer.from(ct, 'binary').toString(opt.encode || 'base64'),\n        iv: rand.iv.toString(opt.encode || 'base64'),\n        s: rand.s.toString(opt.encode || 'base64')\n      }\n      if(!opt.raw){ r = 'SEA' + await shim.stringify(r) }\n\n      if(cb){ try{ cb(r) }catch(e){console.log(e)} }\n      return r;\n    } catch(e) { \n      console.log(e);\n      SEA.err = e;\n      if(SEA.throw){ throw e }\n      if(cb){ cb() }\n      return;\n    }});\n\n    module.exports = SEA.encrypt;\n  })(USE, './encrypt');\n\n  ;USE(function(module){\n    var SEA = USE('./root');\n    var shim = USE('./shim');\n    var S = USE('./settings');\n    var aeskey = USE('./aeskey');\n\n    SEA.decrypt = SEA.decrypt || (async (data, pair, cb, opt) => { try {\n      opt = opt || {};\n      var key = (pair||opt).epriv || pair;\n      if(!key){\n        if(!SEA.I){ throw 'No decryption key.' }\n        pair = await SEA.I(null, {what: data, how: 'decrypt', why: opt.why});\n        key = pair.epriv || pair;\n      }\n      var json = await S.parse(data);\n      var buf, bufiv, bufct; try{\n        buf = shim.Buffer.from(json.s, opt.encode || 'base64');\n        bufiv = shim.Buffer.from(json.iv, opt.encode || 'base64');\n        bufct = shim.Buffer.from(json.ct, opt.encode || 'base64');\n        var ct = await aeskey(key, buf, opt).then((aes) => (/*shim.ossl ||*/ shim.subtle).decrypt({  // Keeping aesKey scope as private as possible...\n          name: opt.name || 'AES-GCM', iv: new Uint8Array(bufiv), tagLength: 128\n        }, aes, new Uint8Array(bufct)));\n      }catch(e){\n        if('utf8' === opt.encode){ throw \"Could not decrypt\" }\n        if(SEA.opt.fallback){\n          opt.encode = 'utf8';\n          return await SEA.decrypt(data, pair, cb, opt);\n        }\n      }\n      var r = await S.parse(new shim.TextDecoder('utf8').decode(ct));\n      if(cb){ try{ cb(r) }catch(e){console.log(e)} }\n      return r;\n    } catch(e) { \n      console.log(e);\n      SEA.err = e;\n      if(SEA.throw){ throw e }\n      if(cb){ cb() }\n      return;\n    }});\n\n    module.exports = SEA.decrypt;\n  })(USE, './decrypt');\n\n  ;USE(function(module){\n    var SEA = USE('./root');\n    var shim = USE('./shim');\n    var S = USE('./settings');\n    // Derive shared secret from other's pub and my epub/epriv \n    SEA.secret = SEA.secret || (async (key, pair, cb, opt) => { try {\n      opt = opt || {};\n      if(!pair || !pair.epriv || !pair.epub){\n        if(!SEA.I){ throw 'No secret mix.' }\n        pair = await SEA.I(null, {what: key, how: 'secret', why: opt.why});\n      }\n      var pub = key.epub || key;\n      var epub = pair.epub;\n      var epriv = pair.epriv;\n      var ecdhSubtle = shim.ossl || shim.subtle;\n      var pubKeyData = keysToEcdhJwk(pub);\n      var props = Object.assign({ public: await ecdhSubtle.importKey(...pubKeyData, true, []) },{name: 'ECDH', namedCurve: 'P-256'}); // Thanks to @sirpy !\n      var privKeyData = keysToEcdhJwk(epub, epriv);\n      var derived = await ecdhSubtle.importKey(...privKeyData, false, ['deriveBits']).then(async (privKey) => {\n        // privateKey scope doesn't leak out from here!\n        var derivedBits = await ecdhSubtle.deriveBits(props, privKey, 256);\n        var rawBits = new Uint8Array(derivedBits);\n        var derivedKey = await ecdhSubtle.importKey('raw', rawBits,{ name: 'AES-GCM', length: 256 }, true, [ 'encrypt', 'decrypt' ]);\n        return ecdhSubtle.exportKey('jwk', derivedKey).then(({ k }) => k);\n      })\n      var r = derived;\n      if(cb){ try{ cb(r) }catch(e){console.log(e)} }\n      return r;\n    } catch(e) {\n      console.log(e);\n      SEA.err = e;\n      if(SEA.throw){ throw e }\n      if(cb){ cb() }\n      return;\n    }});\n\n    // can this be replaced with settings.jwk?\n    var keysToEcdhJwk = (pub, d) => { // d === priv\n      //var [ x, y ] = shim.Buffer.from(pub, 'base64').toString('utf8').split(':') // old\n      var [ x, y ] = pub.split('.') // new\n      var jwk = d ? { d: d } : {}\n      return [  // Use with spread returned value...\n        'jwk',\n        Object.assign(\n          jwk,\n          { x: x, y: y, kty: 'EC', crv: 'P-256', ext: true }\n        ), // ??? refactor\n        {name: 'ECDH', namedCurve: 'P-256'}\n      ]\n    }\n\n    module.exports = SEA.secret;\n  })(USE, './secret');\n\n  ;USE(function(module){\n    var SEA = USE('./root');\n    // This is to certify that a group of \"certificants\" can \"put\" anything at a group of matched \"paths\" to the certificate authority's graph\n    SEA.certify = SEA.certify || (async (certificants, policy = {}, authority, cb, opt = {}) => { try {\n      /*\n      The Certify Protocol was made out of love by a Vietnamese code enthusiast. Vietnamese people around the world deserve respect!\n      IMPORTANT: A Certificate is like a Signature. No one knows who (authority) created/signed a cert until you put it into their graph.\n      \"certificants\": '*' or a String (Bob.pub) || an Object that contains \"pub\" as a key || an array of [object || string]. These people will have the rights.\n      \"policy\": A string ('inbox'), or a RAD/LEX object {'*': 'inbox'}, or an Array of RAD/LEX objects or strings. RAD/LEX object can contain key \"?\" with indexOf(\"*\") > -1 to force key equals certificant pub. This rule is used to check against soul+'/'+key using Gun.text.match or String.match.\n      \"authority\": Key pair or priv of the certificate authority.\n      \"cb\": A callback function after all things are done.\n      \"opt\": If opt.expiry (a timestamp) is set, SEA won't sync data after opt.expiry. If opt.block is set, SEA will look for block before syncing.\n      */\n      console.log('SEA.certify() is an early experimental community supported method that may change API behavior without warning in any future version.')\n\n      certificants = (() => {\n        var data = []\n        if (certificants) {\n          if ((typeof certificants === 'string' || Array.isArray(certificants)) && certificants.indexOf('*') > -1) return '*'\n          if (typeof certificants === 'string') return certificants\n          if (Array.isArray(certificants)) {\n            if (certificants.length === 1 && certificants[0]) return typeof certificants[0] === 'object' && certificants[0].pub ? certificants[0].pub : typeof certificants[0] === 'string' ? certificants[0] : null\n            certificants.map(certificant => {\n              if (typeof certificant ==='string') data.push(certificant)\n              else if (typeof certificant === 'object' && certificant.pub) data.push(certificant.pub)\n            })\n          }\n\n          if (typeof certificants === 'object' && certificants.pub) return certificants.pub\n          return data.length > 0 ? data : null\n        }\n        return\n      })()\n\n      if (!certificants) return console.log(\"No certificant found.\")\n\n      const expiry = opt.expiry && (typeof opt.expiry === 'number' || typeof opt.expiry === 'string') ? parseFloat(opt.expiry) : null\n      const readPolicy = (policy || {}).read ? policy.read : null\n      const writePolicy = (policy || {}).write ? policy.write : typeof policy === 'string' || Array.isArray(policy) || policy[\"+\"] || policy[\"#\"] || policy[\".\"] || policy[\"=\"] || policy[\"*\"] || policy[\">\"] || policy[\"<\"] ? policy : null\n      // The \"blacklist\" feature is now renamed to \"block\". Why ? BECAUSE BLACK LIVES MATTER!\n      // We can now use 3 keys: block, blacklist, ban\n      const block = (opt || {}).block || (opt || {}).blacklist || (opt || {}).ban || {}\n      const readBlock = block.read && (typeof block.read === 'string' || (block.read || {})['#']) ? block.read : null\n      const writeBlock = typeof block === 'string' ? block : block.write && (typeof block.write === 'string' || block.write['#']) ? block.write : null\n\n      if (!readPolicy && !writePolicy) return console.log(\"No policy found.\")\n\n      // reserved keys: c, e, r, w, rb, wb\n      const data = JSON.stringify({\n        c: certificants,\n        ...(expiry ? {e: expiry} : {}), // inject expiry if possible\n        ...(readPolicy ? {r: readPolicy }  : {}), // \"r\" stands for read, which means read permission.\n        ...(writePolicy ? {w: writePolicy} : {}), // \"w\" stands for write, which means write permission.\n        ...(readBlock ? {rb: readBlock} : {}), // inject READ block if possible\n        ...(writeBlock ? {wb: writeBlock} : {}), // inject WRITE block if possible\n      })\n\n      const certificate = await SEA.sign(data, authority, null, {raw:1})\n\n      var r = certificate\n      if(!opt.raw){ r = 'SEA'+JSON.stringify(r) }\n      if(cb){ try{ cb(r) }catch(e){console.log(e)} }\n      return r;\n    } catch(e) {\n      SEA.err = e;\n      if(SEA.throw){ throw e }\n      if(cb){ cb() }\n      return;\n    }});\n\n    module.exports = SEA.certify;\n  })(USE, './certify');\n\n  ;USE(function(module){\n    var shim = USE('./shim');\n    // Practical examples about usage found in tests.\n    var SEA = USE('./root');\n    SEA.work = USE('./work');\n    SEA.sign = USE('./sign');\n    SEA.verify = USE('./verify');\n    SEA.encrypt = USE('./encrypt');\n    SEA.decrypt = USE('./decrypt');\n    SEA.certify = USE('./certify');\n    //SEA.opt.aeskey = USE('./aeskey'); // not official! // this causes problems in latest WebCrypto.\n\n    SEA.random = SEA.random || shim.random;\n\n    // This is Buffer used in SEA and usable from Gun/SEA application also.\n    // For documentation see https://nodejs.org/api/buffer.html\n    SEA.Buffer = SEA.Buffer || USE('./buffer');\n\n    // These SEA functions support now ony Promises or\n    // async/await (compatible) code, use those like Promises.\n    //\n    // Creates a wrapper library around Web Crypto API\n    // for various AES, ECDSA, PBKDF2 functions we called above.\n    // Calculate public key KeyID aka PGPv4 (result: 8 bytes as hex string)\n    SEA.keyid = SEA.keyid || (async (pub) => {\n      try {\n        // base64('base64(x):base64(y)') => shim.Buffer(xy)\n        const pb = shim.Buffer.concat(\n          pub.replace(/-/g, '+').replace(/_/g, '/').split('.')\n          .map((t) => shim.Buffer.from(t, 'base64'))\n        )\n        // id is PGPv4 compliant raw key\n        const id = shim.Buffer.concat([\n          shim.Buffer.from([0x99, pb.length / 0x100, pb.length % 0x100]), pb\n        ])\n        const sha1 = await sha1hash(id)\n        const hash = shim.Buffer.from(sha1, 'binary')\n        return hash.toString('hex', hash.length - 8)  // 16-bit ID as hex\n      } catch (e) {\n        console.log(e)\n        throw e\n      }\n    });\n    // all done!\n    // Obviously it is missing MANY necessary features. This is only an alpha release.\n    // Please experiment with it, audit what I've done so far, and complain about what needs to be added.\n    // SEA should be a full suite that is easy and seamless to use.\n    // Again, scroll naer the top, where I provide an EXAMPLE of how to create a user and sign in.\n    // Once logged in, the rest of the code you just read handled automatically signing/validating data.\n    // But all other behavior needs to be equally easy, like opinionated ways of\n    // Adding friends (trusted public keys), sending private messages, etc.\n    // Cheers! Tell me what you think.\n    ((SEA.window||{}).GUN||{}).SEA = SEA;\n\n    module.exports = SEA\n    // -------------- END SEA MODULES --------------------\n    // -- BEGIN SEA+GUN MODULES: BUNDLED BY DEFAULT UNTIL OTHERS USE SEA ON OWN -------\n  })(USE, './sea');\n\n  ;USE(function(module){\n    var SEA = USE('./sea'), Gun, u;\n    if(SEA.window){\n      Gun = SEA.window.GUN || {chain:{}};\n    } else {\n      Gun = USE((u+'' == typeof MODULE?'.':'')+'./gun', 1);\n    }\n    SEA.GUN = Gun;\n\n    function User(root){ \n      this._ = {$: this};\n    }\n    User.prototype = (function(){ function F(){}; F.prototype = Gun.chain; return new F() }()) // Object.create polyfill\n    User.prototype.constructor = User;\n\n    // let's extend the gun chain with a `user` function.\n    // only one user can be logged in at a time, per gun instance.\n    Gun.chain.user = function(pub){\n      var gun = this, root = gun.back(-1), user;\n      if(pub){\n        pub = SEA.opt.pub((pub._||'')['#']) || pub;\n        return root.get('~'+pub);\n      }\n      if(user = root.back('user')){ return user }\n      var root = (root._), at = root, uuid = at.opt.uuid || lex;\n      (at = (user = at.user = gun.chain(new User))._).opt = {};\n      at.opt.uuid = function(cb){\n        var id = uuid(), pub = root.user;\n        if(!pub || !(pub = pub.is) || !(pub = pub.pub)){ return id }\n        id = '~' + pub + '/' + id;\n        if(cb && cb.call){ cb(null, id) }\n        return id;\n      }\n      return user;\n    }\n    function lex(){ return Gun.state().toString(36).replace('.','') }\n    Gun.User = User;\n    User.GUN = Gun;\n    User.SEA = Gun.SEA = SEA;\n    module.exports = User;\n  })(USE, './user');\n\n  ;USE(function(module){\n    var u, Gun = (''+u != typeof window)? (window.Gun||{chain:{}}) : USE((''+u === typeof MODULE?'.':'')+'./gun', 1);\n    Gun.chain.then = function(cb, opt){\n      var gun = this, p = (new Promise(function(res, rej){\n        gun.once(res, opt);\n      }));\n      return cb? p.then(cb) : p;\n    }\n  })(USE, './then');\n\n  ;USE(function(module){\n    var User = USE('./user'), SEA = User.SEA, Gun = User.GUN, noop = function(){};\n\n    // Well first we have to actually create a user. That is what this function does.\n    User.prototype.create = function(...args){\n      var pair = typeof args[0] === 'object' && (args[0].pub || args[0].epub) ? args[0] : typeof args[1] === 'object' && (args[1].pub || args[1].epub) ? args[1] : null;\n      var alias = pair && (pair.pub || pair.epub) ? pair.pub : typeof args[0] === 'string' ? args[0] : null;\n      var pass = pair && (pair.pub || pair.epub) ? pair : alias && typeof args[1] === 'string' ? args[1] : null;\n      var cb = args.filter(arg => typeof arg === 'function')[0] || null; // cb now can stand anywhere, after alias/pass or pair\n      var opt = args && args.length > 1 && typeof args[args.length-1] === 'object' ? args[args.length-1] : {}; // opt is always the last parameter which typeof === 'object' and stands after cb\n      \n      var gun = this, cat = (gun._), root = gun.back(-1);\n      cb = cb || noop;\n      opt = opt || {};\n      if(false !== opt.check){\n        var err;\n        if(!alias){ err = \"No user.\" }\n        if((pass||'').length < 8){ err = \"Password too short!\" }\n        if(err){\n          cb({err: Gun.log(err)});\n          return gun;\n        }\n      }\n      if(cat.ing){\n        (cb || noop)({err: Gun.log(\"User is already being created or authenticated!\"), wait: true});\n        return gun;\n      }\n      cat.ing = true;\n      var act = {}, u;\n      act.a = function(pubs){\n        act.pubs = pubs;\n        if(pubs && !opt.already){\n          // If we can enforce that a user name is already taken, it might be nice to try, but this is not guaranteed.\n          var ack = {err: Gun.log('User already created!')};\n          cat.ing = false;\n          (cb || noop)(ack);\n          gun.leave();\n          return;\n        }\n        act.salt = String.random(64); // pseudo-randomly create a salt, then use PBKDF2 function to extend the password with it.\n        SEA.work(pass, act.salt, act.b); // this will take some short amount of time to produce a proof, which slows brute force attacks.\n      }\n      act.b = function(proof){\n        act.proof = proof;\n        pair ? act.c(pair) : SEA.pair(act.c) // generate a brand new key pair or use the existing.\n      }\n      act.c = function(pair){\n        var tmp\n        act.pair = pair || {};\n        if(tmp = cat.root.user){\n          tmp._.sea = pair;\n          tmp.is = {pub: pair.pub, epub: pair.epub, alias: alias};\n        }\n        // the user's public key doesn't need to be signed. But everything else needs to be signed with it! // we have now automated it! clean up these extra steps now!\n        act.data = {pub: pair.pub};\n        act.d();\n      }\n      act.d = function(){\n        act.data.alias = alias;\n        act.e();\n      }\n      act.e = function(){\n        act.data.epub = act.pair.epub; \n        SEA.encrypt({priv: act.pair.priv, epriv: act.pair.epriv}, act.proof, act.f, {raw:1}); // to keep the private key safe, we AES encrypt it with the proof of work!\n      }\n      act.f = function(auth){\n        act.data.auth = JSON.stringify({ek: auth, s: act.salt}); \n        act.g(act.data.auth);\n      }\n      act.g = function(auth){ var tmp;\n        act.data.auth = act.data.auth || auth;\n        root.get(tmp = '~'+act.pair.pub).put(act.data).on(act.h); // awesome, now we can actually save the user with their public key as their ID.\n        var link = {}; link[tmp] = {'#': tmp}; root.get('~@'+alias).put(link).get(tmp).on(act.i); // next up, we want to associate the alias with the public key. So we add it to the alias list.\n      }\n      act.h = function(data, key, msg, eve){\n        eve.off(); act.h.ok = 1; act.i();\n      }\n      act.i = function(data, key, msg, eve){\n        if(eve){ act.i.ok = 1; eve.off() }\n        if(!act.h.ok || !act.i.ok){ return }\n        cat.ing = false;\n        cb({ok: 0, pub: act.pair.pub}); // callback that the user has been created. (Note: ok = 0 because we didn't wait for disk to ack)\n        if(noop === cb){ pair ? gun.auth(pair) : gun.auth(alias, pass) } // if no callback is passed, auto-login after signing up.\n      }\n      root.get('~@'+alias).once(act.a);\n      return gun;\n    }\n    User.prototype.leave = function(opt, cb){\n      var gun = this, user = (gun.back(-1)._).user;\n      if(user){\n        delete user.is;\n        delete user._.is;\n        delete user._.sea;\n      }\n      if(SEA.window){\n        try{var sS = {};\n        sS = window.sessionStorage;\n        delete sS.recall;\n        delete sS.pair;\n        }catch(e){};\n      }\n      return gun;\n    }\n  })(USE, './create');\n\n  ;USE(function(module){\n    var User = USE('./user'), SEA = User.SEA, Gun = User.GUN, noop = function(){};\n    // now that we have created a user, we want to authenticate them!\n    User.prototype.auth = function(...args){ // TODO: this PR with arguments need to be cleaned up / refactored.\n      var pair = typeof args[0] === 'object' && (args[0].pub || args[0].epub) ? args[0] : typeof args[1] === 'object' && (args[1].pub || args[1].epub) ? args[1] : null;\n      var alias = !pair && typeof args[0] === 'string' ? args[0] : null;\n      var pass = alias && typeof args[1] === 'string' ? args[1] : null;\n      var cb = args.filter(arg => typeof arg === 'function')[0] || null; // cb now can stand anywhere, after alias/pass or pair\n      var opt = args && args.length > 1 && typeof args[args.length-1] === 'object' ? args[args.length-1] : {}; // opt is always the last parameter which typeof === 'object' and stands after cb\n      \n      var gun = this, cat = (gun._), root = gun.back(-1);\n      \n      if(cat.ing){\n        (cb || noop)({err: Gun.log(\"User is already being created or authenticated!\"), wait: true});\n        return gun;\n      }\n      cat.ing = true;\n      \n      var act = {}, u;\n      act.a = function(data){\n        if(!data){ return act.b() }\n        if(!data.pub){\n          var tmp = []; Object.keys(data).forEach(function(k){ if('_'==k){ return } tmp.push(data[k]) })\n          return act.b(tmp);\n        }\n        if(act.name){ return act.f(data) }\n        act.c((act.data = data).auth);\n      }\n      act.b = function(list){\n        var get = (act.list = (act.list||[]).concat(list||[])).shift();\n        if(u === get){\n          if(act.name){ return act.err('Your user account is not published for dApps to access, please consider syncing it online, or allowing local access by adding your device as a peer.') }\n          return act.err('Wrong user or password.') \n        }\n        root.get(get).once(act.a);\n      }\n      act.c = function(auth){\n        if(u === auth){ return act.b() }\n        if('string' == typeof auth){ return act.c(obj_ify(auth)) } // in case of legacy\n        SEA.work(pass, (act.auth = auth).s, act.d, act.enc); // the proof of work is evidence that we've spent some time/effort trying to log in, this slows brute force.\n      }\n      act.d = function(proof){\n        SEA.decrypt(act.auth.ek, proof, act.e, act.enc);\n      }\n      act.e = function(half){\n        if(u === half){\n          if(!act.enc){ // try old format\n            act.enc = {encode: 'utf8'};\n            return act.c(act.auth);\n          } act.enc = null; // end backwards\n          return act.b();\n        }\n        act.half = half;\n        act.f(act.data);\n      }\n      act.f = function(pair){\n        var half = act.half || {}, data = act.data || {};\n        act.g(act.lol = {pub: pair.pub || data.pub, epub: pair.epub || data.epub, priv: pair.priv || half.priv, epriv: pair.epriv || half.epriv});\n      }\n      act.g = function(pair){\n        if(!pair || !pair.pub || !pair.epub){ return act.b() }\n        act.pair = pair;\n        var user = (root._).user, at = (user._);\n        var tmp = at.tag;\n        var upt = at.opt;\n        at = user._ = root.get('~'+pair.pub)._;\n        at.opt = upt;\n        // add our credentials in-memory only to our root user instance\n        user.is = {pub: pair.pub, epub: pair.epub, alias: alias || pair.pub};\n        at.sea = act.pair;\n        cat.ing = false;\n        try{if(pass && u == (obj_ify(cat.root.graph['~'+pair.pub].auth)||'')[':']){ opt.shuffle = opt.change = pass; } }catch(e){} // migrate UTF8 & Shuffle!\n        opt.change? act.z() : (cb || noop)(at);\n        if(SEA.window && ((gun.back('user')._).opt||opt).remember){\n          // TODO: this needs to be modular.\n          try{var sS = {};\n          sS = window.sessionStorage; // TODO: FIX BUG putting on `.is`!\n          sS.recall = true;\n          sS.pair = JSON.stringify(pair); // auth using pair is more reliable than alias/pass\n          }catch(e){}\n        }\n        try{\n          if(root._.tag.auth){ // auth handle might not be registered yet\n          (root._).on('auth', at) // TODO: Deprecate this, emit on user instead! Update docs when you do.\n          } else { setTimeout(function(){ (root._).on('auth', at) },1) } // if not, hackily add a timeout.\n          //at.on('auth', at) // Arrgh, this doesn't work without event \"merge\" code, but \"merge\" code causes stack overflow and crashes after logging in & trying to write data.\n        }catch(e){\n          Gun.log(\"Your 'auth' callback crashed with:\", e);\n        }\n      }\n      act.z = function(){\n        // password update so encrypt private key using new pwd + salt\n        act.salt = String.random(64); // pseudo-random\n        SEA.work(opt.change, act.salt, act.y);\n      }\n      act.y = function(proof){\n        SEA.encrypt({priv: act.pair.priv, epriv: act.pair.epriv}, proof, act.x, {raw:1});\n      }\n      act.x = function(auth){\n        act.w(JSON.stringify({ek: auth, s: act.salt}));\n      }\n      act.w = function(auth){\n        if(opt.shuffle){ // delete in future!\n          console.log('migrate core account from UTF8 & shuffle');\n          var tmp = {}; Object.keys(act.data).forEach(function(k){ tmp[k] = act.data[k] });\n          delete tmp._;\n          tmp.auth = auth;\n          root.get('~'+act.pair.pub).put(tmp);\n        } // end delete\n        root.get('~'+act.pair.pub).get('auth').put(auth, cb || noop);\n      }\n      act.err = function(e){\n        var ack = {err: Gun.log(e || 'User cannot be found!')};\n        cat.ing = false;\n        (cb || noop)(ack);\n      }\n      act.plugin = function(name){\n        if(!(act.name = name)){ return act.err() }\n        var tmp = [name];\n        if('~' !== name[0]){\n          tmp[1] = '~'+name;\n          tmp[2] = '~@'+name;\n        }\n        act.b(tmp);\n      }\n      if(pair){\n        act.g(pair);\n      } else\n      if(alias){\n        root.get('~@'+alias).once(act.a);\n      } else\n      if(!alias && !pass){\n        SEA.name(act.plugin);\n      }\n      return gun;\n    }\n    function obj_ify(o){\n      if('string' != typeof o){ return o }\n      try{o = JSON.parse(o);\n      }catch(e){o={}};\n      return o;\n    }\n  })(USE, './auth');\n\n  ;USE(function(module){\n    var User = USE('./user'), SEA = User.SEA, Gun = User.GUN;\n    User.prototype.recall = function(opt, cb){\n      var gun = this, root = gun.back(-1), tmp;\n      opt = opt || {};\n      if(opt && opt.sessionStorage){\n        if(SEA.window){\n          try{\n            var sS = {};\n            sS = window.sessionStorage; // TODO: FIX BUG putting on `.is`!\n            if(sS){\n              (root._).opt.remember = true;\n              ((gun.back('user')._).opt||opt).remember = true;\n              if(sS.recall || sS.pair) root.user().auth(JSON.parse(sS.pair), cb); // pair is more reliable than alias/pass\n            }\n          }catch(e){}\n        }\n        return gun;\n      }\n      /*\n        TODO: copy mhelander's expiry code back in.\n        Although, we should check with community,\n        should expiry be core or a plugin?\n      */\n      return gun;\n    }\n  })(USE, './recall');\n\n  ;USE(function(module){\n    var User = USE('./user'), SEA = User.SEA, Gun = User.GUN, noop = function(){};\n    User.prototype.pair = function(){\n      var user = this, proxy; // undeprecated, hiding with proxies.\n      try{ proxy = new Proxy({DANGER:'\\u2620'}, {get: function(t,p,r){\n        if(!user.is || !(user._||'').sea){ return }\n        return user._.sea[p];\n      }})}catch(e){}\n      return proxy;\n    }\n    // If authenticated user wants to delete his/her account, let's support it!\n    User.prototype.delete = async function(alias, pass, cb){\n      console.log(\"user.delete() IS DEPRECATED AND WILL BE MOVED TO A MODULE!!!\");\n      var gun = this, root = gun.back(-1), user = gun.back('user');\n      try {\n        user.auth(alias, pass, function(ack){\n          var pub = (user.is||{}).pub;\n          // Delete user data\n          user.map().once(function(){ this.put(null) });\n          // Wipe user data from memory\n          user.leave();\n          (cb || noop)({ok: 0});\n        });\n      } catch (e) {\n        Gun.log('User.delete failed! Error:', e);\n      }\n      return gun;\n    }\n    User.prototype.alive = async function(){\n      console.log(\"user.alive() IS DEPRECATED!!!\");\n      const gunRoot = this.back(-1)\n      try {\n        // All is good. Should we do something more with actual recalled data?\n        await authRecall(gunRoot)\n        return gunRoot._.user._\n      } catch (e) {\n        const err = 'No session!'\n        Gun.log(err)\n        throw { err }\n      }\n    }\n    User.prototype.trust = async function(user){\n      console.log(\"`.trust` API MAY BE DELETED OR CHANGED OR RENAMED, DO NOT USE!\");\n      // TODO: BUG!!! SEA `node` read listener needs to be async, which means core needs to be async too.\n      //gun.get('alice').get('age').trust(bob);\n      if (Gun.is(user)) {\n        user.get('pub').get((ctx, ev) => {\n          console.log(ctx, ev)\n        })\n      }\n      user.get('trust').get(path).put(theirPubkey);\n\n      // do a lookup on this gun chain directly (that gets bob's copy of the data)\n      // do a lookup on the metadata trust table for this path (that gets all the pubkeys allowed to write on this path)\n      // do a lookup on each of those pubKeys ON the path (to get the collab data \"layers\")\n      // THEN you perform Jachen's mix operation\n      // and return the result of that to...\n    }\n    User.prototype.grant = function(to, cb){\n      console.log(\"`.grant` API MAY BE DELETED OR CHANGED OR RENAMED, DO NOT USE!\");\n      var gun = this, user = gun.back(-1).user(), pair = user._.sea, path = '';\n      gun.back(function(at){ if(at.is){ return } path += (at.get||'') });\n      (async function(){\n      var enc, sec = await user.get('grant').get(pair.pub).get(path).then();\n      sec = await SEA.decrypt(sec, pair);\n      if(!sec){\n        sec = SEA.random(16).toString();\n        enc = await SEA.encrypt(sec, pair);\n        user.get('grant').get(pair.pub).get(path).put(enc);\n      }\n      var pub = to.get('pub').then();\n      var epub = to.get('epub').then();\n      pub = await pub; epub = await epub;\n      var dh = await SEA.secret(epub, pair);\n      enc = await SEA.encrypt(sec, dh);\n      user.get('grant').get(pub).get(path).put(enc, cb);\n      }());\n      return gun;\n    }\n    User.prototype.secret = function(data, cb){\n      console.log(\"`.secret` API MAY BE DELETED OR CHANGED OR RENAMED, DO NOT USE!\");\n      var gun = this, user = gun.back(-1).user(), pair = user.pair(), path = '';\n      gun.back(function(at){ if(at.is){ return } path += (at.get||'') });\n      (async function(){\n      var enc, sec = await user.get('trust').get(pair.pub).get(path).then();\n      sec = await SEA.decrypt(sec, pair);\n      if(!sec){\n        sec = SEA.random(16).toString();\n        enc = await SEA.encrypt(sec, pair);\n        user.get('trust').get(pair.pub).get(path).put(enc);\n      }\n      enc = await SEA.encrypt(data, sec);\n      gun.put(enc, cb);\n      }());\n      return gun;\n    }\n\n    /**\n     * returns the decrypted value, encrypted by secret\n     * @returns {Promise<any>}\n     // Mark needs to review 1st before officially supported\n    User.prototype.decrypt = function(cb) {\n      let gun = this,\n        path = ''\n      gun.back(function(at) {\n        if (at.is) {\n          return\n        }\n        path += at.get || ''\n      })\n      return gun\n        .then(async data => {\n          if (data == null) {\n            return\n          }\n          const user = gun.back(-1).user()\n          const pair = user.pair()\n          let sec = await user\n            .get('trust')\n            .get(pair.pub)\n            .get(path)\n          sec = await SEA.decrypt(sec, pair)\n          if (!sec) {\n            return data\n          }\n          let decrypted = await SEA.decrypt(data, sec)\n          return decrypted\n        })\n        .then(res => {\n          cb && cb(res)\n          return res\n        })\n    }\n    */\n    module.exports = User\n  })(USE, './share');\n\n  ;USE(function(module){\n    var SEA = USE('./sea'), S = USE('./settings'), noop = function() {}, u;\n    var Gun = (''+u != typeof window)? (window.Gun||{on:noop}) : USE((''+u === typeof MODULE?'.':'')+'./gun', 1);\n    // After we have a GUN extension to make user registration/login easy, we then need to handle everything else.\n\n    // We do this with a GUN adapter, we first listen to when a gun instance is created (and when its options change)\n    Gun.on('opt', function(at){\n      if(!at.sea){ // only add SEA once per instance, on the \"at\" context.\n        at.sea = {own: {}};\n        at.on('put', check, at); // SEA now runs its firewall on HAM diffs, not all i/o.\n      }\n      this.to.next(at); // make sure to call the \"next\" middleware adapter.\n    });\n\n    // Alright, this next adapter gets run at the per node level in the graph database.\n    // correction: 2020 it gets run on each key/value pair in a node upon a HAM diff.\n    // This will let us verify that every property on a node has a value signed by a public key we trust.\n    // If the signature does not match, the data is just `undefined` so it doesn't get passed on.\n    // If it does match, then we transform the in-memory \"view\" of the data into its plain value (without the signature).\n    // Now NOTE! Some data is \"system\" data, not user data. Example: List of public keys, aliases, etc.\n    // This data is self-enforced (the value can only match its ID), but that is handled in the `security` function.\n    // From the self-enforced data, we can see all the edges in the graph that belong to a public key.\n    // Example: ~ASDF is the ID of a node with ASDF as its public key, signed alias and salt, and\n    // its encrypted private key, but it might also have other signed values on it like `profile = <ID>` edge.\n    // Using that directed edge's ID, we can then track (in memory) which IDs belong to which keys.\n    // Here is a problem: Multiple public keys can \"claim\" any node's ID, so this is dangerous!\n    // This means we should ONLY trust our \"friends\" (our key ring) public keys, not any ones.\n    // I have not yet added that to SEA yet in this alpha release. That is coming soon, but beware in the meanwhile!\n\n    function check(msg){ // REVISE / IMPROVE, NO NEED TO PASS MSG/EVE EACH SUB?\n      var eve = this, at = eve.as, put = msg.put, soul = put['#'], key = put['.'], val = put[':'], state = put['>'], id = msg['#'], tmp;\n      if(!soul || !key){ return }\n      if((msg._||'').faith && (at.opt||'').faith && 'function' == typeof msg._){\n        SEA.opt.pack(put, function(raw){\n        SEA.verify(raw, false, function(data){ // this is synchronous if false\n          put['='] = SEA.opt.unpack(data);\n          eve.to.next(msg);\n        })})\n        return \n      }\n      var no = function(why){ at.on('in', {'@': id, err: msg.err = why}) }; // exploit internal relay stun for now, maybe violates spec, but testing for now. // Note: this may be only the sharded message, not original batch.\n      //var no = function(why){ msg.ack(why) };\n      (msg._||'').DBG && ((msg._||'').DBG.c = +new Date);\n      if(0 <= soul.indexOf('<?')){ // special case for \"do not sync data X old\" forget\n        // 'a~pub.key/b<?9'\n        tmp = parseFloat(soul.split('<?')[1]||'');\n        if(tmp && (state < (Gun.state() - (tmp * 1000)))){ // sec to ms\n          (tmp = msg._) && (tmp.stun) && (tmp.stun--); // THIS IS BAD CODE! It assumes GUN internals do something that will probably change in future, but hacking in now.\n          return; // omit!\n        }\n      }\n      \n      if('~@' === soul){  // special case for shared system data, the list of aliases.\n        check.alias(eve, msg, val, key, soul, at, no); return;\n      }\n      if('~@' === soul.slice(0,2)){ // special case for shared system data, the list of public keys for an alias.\n        check.pubs(eve, msg, val, key, soul, at, no); return;\n      }\n      //if('~' === soul.slice(0,1) && 2 === (tmp = soul.slice(1)).split('.').length){ // special case, account data for a public key.\n      if(tmp = SEA.opt.pub(soul)){ // special case, account data for a public key.\n        check.pub(eve, msg, val, key, soul, at, no, at.user||'', tmp); return;\n      }\n      if(0 <= soul.indexOf('#')){ // special case for content addressing immutable hashed data.\n        check.hash(eve, msg, val, key, soul, at, no); return;\n      } \n      check.any(eve, msg, val, key, soul, at, no, at.user||''); return;\n      eve.to.next(msg); // not handled\n    }\n    check.hash = function(eve, msg, val, key, soul, at, no){\n      SEA.work(val, null, function(data){\n        if(data && data === key.split('#').slice(-1)[0]){ return eve.to.next(msg) }\n        no(\"Data hash not same as hash!\");\n      }, {name: 'SHA-256'});\n    }\n    check.alias = function(eve, msg, val, key, soul, at, no){ // Example: {_:#~@, ~@alice: {#~@alice}}\n      if(!val){ return no(\"Data must exist!\") } // data MUST exist\n      if('~@'+key === link_is(val)){ return eve.to.next(msg) } // in fact, it must be EXACTLY equal to itself\n      no(\"Alias not same!\"); // if it isn't, reject.\n    };\n    check.pubs = function(eve, msg, val, key, soul, at, no){ // Example: {_:#~@alice, ~asdf: {#~asdf}}\n      if(!val){ return no(\"Alias must exist!\") } // data MUST exist\n      if(key === link_is(val)){ return eve.to.next(msg) } // and the ID must be EXACTLY equal to its property\n      no(\"Alias not same!\"); // that way nobody can tamper with the list of public keys.\n    };\n    check.pub = async function(eve, msg, val, key, soul, at, no, user, pub){ var tmp // Example: {_:#~asdf, hello:'world'~fdsa}}\n      const raw = await S.parse(val) || {}\n      const verify = (certificate, certificant, cb) => {\n        if (certificate.m && certificate.s && certificant && pub)\n          // now verify certificate\n          return SEA.verify(certificate, pub, data => { // check if \"pub\" (of the graph owner) really issued this cert\n            if (u !== data && u !== data.e && msg.put['>'] && msg.put['>'] > parseFloat(data.e)) return no(\"Certificate expired.\") // certificate expired\n            // \"data.c\" = a list of certificants/certified users\n            // \"data.w\" = lex WRITE permission, in the future, there will be \"data.r\" which means lex READ permission\n            if (u !== data && data.c && data.w && (data.c === certificant || data.c.indexOf('*' || certificant) > -1)) {\n              // ok, now \"certificant\" is in the \"certificants\" list, but is \"path\" allowed? Check path\n              let path = soul.indexOf('/') > -1 ? soul.replace(soul.substring(0, soul.indexOf('/') + 1), '') : ''\n              String.match = String.match || Gun.text.match\n              const w = Array.isArray(data.w) ? data.w : typeof data.w === 'object' || typeof data.w === 'string' ? [data.w] : []\n              for (const lex of w) {\n                if ((String.match(path, lex['#']) && String.match(key, lex['.'])) || (!lex['.'] && String.match(path, lex['#'])) || (!lex['#'] && String.match(key, lex['.'])) || String.match((path ? path + '/' + key : key), lex['#'] || lex)) {\n                  // is Certificant forced to present in Path\n                  if (lex['+'] && lex['+'].indexOf('*') > -1 && path && path.indexOf(certificant) == -1 && key.indexOf(certificant) == -1) return no(`Path \"${path}\" or key \"${key}\" must contain string \"${certificant}\".`)\n                  // path is allowed, but is there any WRITE block? Check it out\n                  if (data.wb && (typeof data.wb === 'string' || ((data.wb || {})['#']))) { // \"data.wb\" = path to the WRITE block\n                    var root = eve.as.root.$.back(-1)\n                    if (typeof data.wb === 'string' && '~' !== data.wb.slice(0, 1)) root = root.get('~' + pub)\n                    return root.get(data.wb).get(certificant).once(value => {\n                      if (value && (value === 1 || value === true)) return no(`Certificant ${certificant} blocked.`)\n                      return cb(data)\n                    })\n                  }\n                  return cb(data)\n                }\n              }\n              return no(\"Certificate verification fail.\")\n            }\n          })\n        return\n      }\n      \n      if ('pub' === key && '~' + pub === soul) {\n        if (val === pub) return eve.to.next(msg) // the account MUST match `pub` property that equals the ID of the public key.\n        return no(\"Account not same!\")\n      }\n\n      if ((tmp = user.is) && tmp.pub && !raw['*'] && !raw['+'] && (pub === tmp.pub || (pub !== tmp.pub && ((msg._.msg || {}).opt || {}).cert))){\n        SEA.opt.pack(msg.put, packed => {\n          SEA.sign(packed, (user._).sea, async function(data) {\n            if (u === data) return no(SEA.err || 'Signature fail.')\n            msg.put[':'] = {':': tmp = SEA.opt.unpack(data.m), '~': data.s}\n            msg.put['='] = tmp\n  \n            // if writing to own graph, just allow it\n            if (pub === user.is.pub) {\n              if (tmp = link_is(val)) (at.sea.own[tmp] = at.sea.own[tmp] || {})[pub] = 1\n              JSON.stringifyAsync(msg.put[':'], function(err,s){\n                if(err){ return no(err || \"Stringify error.\") }\n                msg.put[':'] = s;\n                return eve.to.next(msg);\n              })\n              return\n            }\n  \n            // if writing to other's graph, check if cert exists then try to inject cert into put, also inject self pub so that everyone can verify the put\n            if (pub !== user.is.pub && ((msg._.msg || {}).opt || {}).cert) {\n              const cert = await S.parse(msg._.msg.opt.cert)\n              // even if cert exists, we must verify it\n              if (cert && cert.m && cert.s)\n                verify(cert, user.is.pub, _ => {\n                  msg.put[':']['+'] = cert // '+' is a certificate\n                  msg.put[':']['*'] = user.is.pub // '*' is pub of the user who puts\n                  JSON.stringifyAsync(msg.put[':'], function(err,s){\n                    if(err){ return no(err || \"Stringify error.\") }\n                    msg.put[':'] = s;\n                    return eve.to.next(msg);\n                  })\n                  return\n                })\n            }\n          }, {raw: 1})\n        })\n        return;\n      }\n\n      SEA.opt.pack(msg.put, packed => {\n        SEA.verify(packed, raw['*'] || pub, function(data){ var tmp;\n          data = SEA.opt.unpack(data);\n          if (u === data) return no(\"Unverified data.\") // make sure the signature matches the account it claims to be on. // reject any updates that are signed with a mismatched account.\n          if ((tmp = link_is(data)) && pub === SEA.opt.pub(tmp)) (at.sea.own[tmp] = at.sea.own[tmp] || {})[pub] = 1\n          \n          // check if cert ('+') and putter's pub ('*') exist\n          if (raw['+'] && raw['+']['m'] && raw['+']['s'] && raw['*'])\n            // now verify certificate\n            verify(raw['+'], raw['*'], _ => {\n              msg.put['='] = data;\n              return eve.to.next(msg);\n            })\n          else {\n            msg.put['='] = data;\n            return eve.to.next(msg);\n          }\n        });\n      })\n      return\n    };\n    check.any = function(eve, msg, val, key, soul, at, no, user){ var tmp, pub;\n      if(at.opt.secure){ return no(\"Soul missing public key at '\" + key + \"'.\") }\n      // TODO: Ask community if should auto-sign non user-graph data.\n      at.on('secure', function(msg){ this.off();\n        if(!at.opt.secure){ return eve.to.next(msg) }\n        no(\"Data cannot be changed.\");\n      }).on.on('secure', msg);\n      return;\n    }\n\n    var valid = Gun.valid, link_is = function(d,l){ return 'string' == typeof (l = valid(d)) && l }, state_ify = (Gun.state||'').ify;\n\n    var pubcut = /[^\\w_-]/; // anything not alphanumeric or _ -\n    SEA.opt.pub = function(s){\n      if(!s){ return }\n      s = s.split('~');\n      if(!s || !(s = s[1])){ return }\n      s = s.split(pubcut).slice(0,2);\n      if(!s || 2 != s.length){ return }\n      if('@' === (s[0]||'')[0]){ return }\n      s = s.slice(0,2).join('.');\n      return s;\n    }\n    SEA.opt.stringy = function(t){\n      // TODO: encrypt etc. need to check string primitive. Make as breaking change.\n    }\n    SEA.opt.pack = function(d,cb,k, n,s){ var tmp, f; // pack for verifying\n      if(SEA.opt.check(d)){ return cb(d) }\n      if(d && d['#'] && d['.'] && d['>']){ tmp = d[':']; f = 1 }\n      JSON.parseAsync(f? tmp : d, function(err, meta){\n        var sig = ((u !== (meta||'')[':']) && (meta||'')['~']); // or just ~ check?\n        if(!sig){ cb(d); return }\n        cb({m: {'#':s||d['#'],'.':k||d['.'],':':(meta||'')[':'],'>':d['>']||Gun.state.is(n, k)}, s: sig});\n      });\n    }\n    var O = SEA.opt;\n    SEA.opt.unpack = function(d, k, n){ var tmp;\n      if(u === d){ return }\n      if(d && (u !== (tmp = d[':']))){ return tmp }\n      k = k || O.fall_key; if(!n && O.fall_val){ n = {}; n[k] = O.fall_val }\n      if(!k || !n){ return }\n      if(d === n[k]){ return d }\n      if(!SEA.opt.check(n[k])){ return d }\n      var soul = (n && n._ && n._['#']) || O.fall_soul, s = Gun.state.is(n, k) || O.fall_state;\n      if(d && 4 === d.length && soul === d[0] && k === d[1] && fl(s) === fl(d[3])){\n        return d[2];\n      }\n      if(s < SEA.opt.shuffle_attack){\n        return d;\n      }\n    }\n    SEA.opt.shuffle_attack = 1546329600000; // Jan 1, 2019\n    var fl = Math.floor; // TODO: Still need to fix inconsistent state issue.\n    // TODO: Potential bug? If pub/priv key starts with `-`? IDK how possible.\n\n  })(USE, './index');\n}());\n"],
  "mappings": "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",
  "names": []
}
