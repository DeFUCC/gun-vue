import{_ as e,c as t,o as a,ag as s}from"./chunks/framework.CyF0gi9V.js";const p=JSON.parse('{"title":"Function: usePosts()","description":"","frontmatter":{},"headers":[],"relativePath":"reference/typedoc/post/usePosts/functions/usePosts.md","filePath":"reference/typedoc/post/usePosts/functions/usePosts.md"}'),r={name:"reference/typedoc/post/usePosts/functions/usePosts.md"};function n(c,o,d,l,u,i){return a(),t("div",null,o[0]||(o[0]=[s('<p><a href="./../../../README.html"><strong>Gun-Vue docs v0.24.0</strong></a></p><hr><p><a href="./../../../modules.html">Gun-Vue docs</a> / <a href="./../README.html">post/usePosts</a> / usePosts</p><h1 id="function-useposts" tabindex="-1">Function: usePosts() <a class="header-anchor" href="#function-useposts" aria-label="Permalink to &quot;Function: usePosts()&quot;">​</a></h1><blockquote><p><strong>usePosts</strong>(<code>tag</code>): <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/DeFUCC/gun-vue/blob/0caf30425e007df5734a210c3f3bc740b2b058fb/src/post/usePosts.js#L9" target="_blank" rel="noreferrer">src/post/usePosts.js:9</a></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="tag" tabindex="-1">tag <a class="header-anchor" href="#tag" aria-label="Permalink to &quot;tag&quot;">​</a></h3><p><code>any</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>object</code></p><h3 id="backlinks" tabindex="-1">backlinks <a class="header-anchor" href="#backlinks" aria-label="Permalink to &quot;backlinks&quot;">​</a></h3><blockquote><p><strong>backlinks</strong>: <code>object</code></p></blockquote><h3 id="countbacklinks" tabindex="-1">countBacklinks <a class="header-anchor" href="#countbacklinks" aria-label="Permalink to &quot;countBacklinks&quot;">​</a></h3><blockquote><p><strong>countBacklinks</strong>: <code>ComputedRef</code>&lt;<code>number</code>&gt;</p></blockquote><h3 id="countposts" tabindex="-1">countPosts <a class="header-anchor" href="#countposts" aria-label="Permalink to &quot;countPosts&quot;">​</a></h3><blockquote><p><strong>countPosts</strong>: <code>ComputedRef</code>&lt;<code>number</code>&gt;</p></blockquote><h3 id="downloading" tabindex="-1">downloading <a class="header-anchor" href="#downloading" aria-label="Permalink to &quot;downloading&quot;">​</a></h3><blockquote><p><strong>downloading</strong>: <code>Ref</code>&lt;<code>boolean</code>, <code>boolean</code>&gt;</p></blockquote><h3 id="downloadposts" tabindex="-1">downloadPosts() <a class="header-anchor" href="#downloadposts" aria-label="Permalink to &quot;downloadPosts()&quot;">​</a></h3><blockquote><p><strong>downloadPosts</strong>: () =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h3 id="posts" tabindex="-1">posts <a class="header-anchor" href="#posts" aria-label="Permalink to &quot;posts&quot;">​</a></h3><blockquote><p><strong>posts</strong>: <code>object</code></p></blockquote><h3 id="uploadposts" tabindex="-1">uploadPosts() <a class="header-anchor" href="#uploadposts" aria-label="Permalink to &quot;uploadPosts()&quot;">​</a></h3><blockquote><p><strong>uploadPosts</strong>: (<code>ev</code>) =&gt; <code>void</code></p></blockquote><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="ev" tabindex="-1">ev <a class="header-anchor" href="#ev" aria-label="Permalink to &quot;ev&quot;">​</a></h5><p><code>any</code></p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p>',32)]))}const b=e(r,[["render",n]]);export{p as __pageData,b as default};
