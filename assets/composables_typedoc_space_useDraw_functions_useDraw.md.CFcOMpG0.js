import{_ as a,c as r,o,ag as d}from"./chunks/framework.ap9ZVjPY.js";const u=JSON.parse('{"title":"Function: useDraw()","description":"","frontmatter":{},"headers":[],"relativePath":"composables/typedoc/space/useDraw/functions/useDraw.md","filePath":"composables/typedoc/space/useDraw/functions/useDraw.md"}'),n={name:"composables/typedoc/space/useDraw/functions/useDraw.md"};function s(t,e,c,l,i,h){return o(),r("div",null,e[0]||(e[0]=[d('<p><a href="./../../../README.html"><strong>Gun-Vue docs v0.24.2</strong></a></p><hr><p><a href="./../../../modules.html">Gun-Vue docs</a> / <a href="./../README.html">space/useDraw</a> / useDraw</p><h1 id="function-usedraw" tabindex="-1">Function: useDraw() <a class="header-anchor" href="#function-usedraw" aria-label="Permalink to “Function: useDraw()”">​</a></h1><blockquote><p><strong>useDraw</strong>(): <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/DeFUCC/gun-vue/blob/1f6fe3cadeab03092eb52bd0625a242e3f7e67aa/src/space/useDraw.js#L89" target="_blank" rel="noreferrer">src/space/useDraw.js:89</a></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to “Returns”">​</a></h2><p><code>object</code></p><h3 id="brush" tabindex="-1">brush <a class="header-anchor" href="#brush" aria-label="Permalink to “brush”">​</a></h3><blockquote><p><strong>brush</strong>: <code>object</code></p></blockquote><h4 id="brush-arrowend" tabindex="-1">brush.arrowEnd <a class="header-anchor" href="#brush-arrowend" aria-label="Permalink to “brush.arrowEnd”">​</a></h4><blockquote><p><strong>arrowEnd</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h4 id="brush-color" tabindex="-1">brush.color <a class="header-anchor" href="#brush-color" aria-label="Permalink to “brush.color”">​</a></h4><blockquote><p><strong>color</strong>: <code>string</code></p></blockquote><h4 id="brush-mode" tabindex="-1">brush.mode <a class="header-anchor" href="#brush-mode" aria-label="Permalink to “brush.mode”">​</a></h4><blockquote><p><strong>mode</strong>: <code>string</code> = <code>&quot;stylus&quot;</code></p></blockquote><h4 id="brush-size" tabindex="-1">brush.size <a class="header-anchor" href="#brush-size" aria-label="Permalink to “brush.size”">​</a></h4><blockquote><p><strong>size</strong>: <code>number</code> = <code>10</code></p></blockquote><h3 id="drauu" tabindex="-1">drauu <a class="header-anchor" href="#drauu" aria-label="Permalink to “drauu”">​</a></h3><blockquote><p><strong>drauu</strong>: <code>Raw</code>&lt;<code>Drauu</code>&gt;</p></blockquote><h3 id="draw" tabindex="-1">draw <a class="header-anchor" href="#draw" aria-label="Permalink to “draw”">​</a></h3><blockquote><p><strong>draw</strong>: <code>object</code></p></blockquote><h4 id="draw-canclear" tabindex="-1">draw.canClear <a class="header-anchor" href="#draw-canclear" aria-label="Permalink to “draw.canClear”">​</a></h4><blockquote><p><strong>canClear</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h4 id="draw-canredo" tabindex="-1">draw.canRedo <a class="header-anchor" href="#draw-canredo" aria-label="Permalink to “draw.canRedo”">​</a></h4><blockquote><p><strong>canRedo</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h4 id="draw-canundo" tabindex="-1">draw.canUndo <a class="header-anchor" href="#draw-canundo" aria-label="Permalink to “draw.canUndo”">​</a></h4><blockquote><p><strong>canUndo</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h4 id="draw-clear" tabindex="-1">draw.clear() <a class="header-anchor" href="#draw-clear" aria-label="Permalink to “draw.clear()”">​</a></h4><blockquote><p><strong>clear</strong>: () =&gt; <code>void</code></p></blockquote><h5 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to “Returns”">​</a></h5><p><code>void</code></p><h4 id="draw-colors" tabindex="-1">draw.colors <a class="header-anchor" href="#draw-colors" aria-label="Permalink to “draw.colors”">​</a></h4><blockquote><p><strong>colors</strong>: <code>string</code>[]</p></blockquote><h4 id="draw-content" tabindex="-1">draw.content <a class="header-anchor" href="#draw-content" aria-label="Permalink to “draw.content”">​</a></h4><blockquote><p><strong>content</strong>: <code>string</code> = <code>&quot;&quot;</code></p></blockquote><h4 id="draw-enabled" tabindex="-1">draw.enabled <a class="header-anchor" href="#draw-enabled" aria-label="Permalink to “draw.enabled”">​</a></h4><blockquote><p><strong>enabled</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h4 id="draw-ing" tabindex="-1">draw.ing <a class="header-anchor" href="#draw-ing" aria-label="Permalink to “draw.ing”">​</a></h4><blockquote><p><strong>ing</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h4 id="draw-initiated" tabindex="-1">draw.initiated <a class="header-anchor" href="#draw-initiated" aria-label="Permalink to “draw.initiated”">​</a></h4><blockquote><p><strong>initiated</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h4 id="draw-mode" tabindex="-1">draw.mode <a class="header-anchor" href="#draw-mode" aria-label="Permalink to “draw.mode”">​</a></h4><blockquote><p><strong>mode</strong>: <code>string</code></p></blockquote><h4 id="draw-modes" tabindex="-1">draw.modes <a class="header-anchor" href="#draw-modes" aria-label="Permalink to “draw.modes”">​</a></h4><blockquote><p><strong>modes</strong>: <code>string</code>[]</p></blockquote><h4 id="draw-pinned" tabindex="-1">draw.pinned <a class="header-anchor" href="#draw-pinned" aria-label="Permalink to “draw.pinned”">​</a></h4><blockquote><p><strong>pinned</strong>: <code>boolean</code></p></blockquote><h4 id="draw-sizes" tabindex="-1">draw.sizes <a class="header-anchor" href="#draw-sizes" aria-label="Permalink to “draw.sizes”">​</a></h4><blockquote><p><strong>sizes</strong>: <code>object</code></p></blockquote><h4 id="draw-sizes-go" tabindex="-1">draw.sizes.go() <a class="header-anchor" href="#draw-sizes-go" aria-label="Permalink to “draw.sizes.go()”">​</a></h4><blockquote><p><strong>go</strong>: (<code>i</code>) =&gt; <code>number</code></p></blockquote><p>Go to a specific index</p><h5 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to “Parameters”">​</a></h5><h6 id="i" tabindex="-1">i <a class="header-anchor" href="#i" aria-label="Permalink to “i”">​</a></h6><p><code>number</code></p><h5 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to “Returns”">​</a></h5><p><code>number</code></p><h4 id="draw-sizes-index" tabindex="-1">draw.sizes.index <a class="header-anchor" href="#draw-sizes-index" aria-label="Permalink to “draw.sizes.index”">​</a></h4><blockquote><p><strong>index</strong>: <code>number</code></p></blockquote><h4 id="draw-sizes-next" tabindex="-1">draw.sizes.next() <a class="header-anchor" href="#draw-sizes-next" aria-label="Permalink to “draw.sizes.next()”">​</a></h4><blockquote><p><strong>next</strong>: (<code>n</code>?) =&gt; <code>number</code></p></blockquote><h5 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to “Parameters”">​</a></h5><h6 id="n" tabindex="-1">n? <a class="header-anchor" href="#n" aria-label="Permalink to “n?”">​</a></h6><p><code>number</code></p><h5 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to “Returns”">​</a></h5><p><code>number</code></p><h4 id="draw-sizes-prev" tabindex="-1">draw.sizes.prev() <a class="header-anchor" href="#draw-sizes-prev" aria-label="Permalink to “draw.sizes.prev()”">​</a></h4><blockquote><p><strong>prev</strong>: (<code>n</code>?) =&gt; <code>number</code></p></blockquote><h5 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to “Parameters”">​</a></h5><h6 id="n-1" tabindex="-1">n? <a class="header-anchor" href="#n-1" aria-label="Permalink to “n?”">​</a></h6><p><code>number</code></p><h5 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to “Returns”">​</a></h5><p><code>number</code></p><h4 id="draw-sizes-state" tabindex="-1">draw.sizes.state <a class="header-anchor" href="#draw-sizes-state" aria-label="Permalink to “draw.sizes.state”">​</a></h4><blockquote><p><strong>state</strong>: <code>number</code></p></blockquote><h3 id="loadcanvas" tabindex="-1">loadCanvas() <a class="header-anchor" href="#loadcanvas" aria-label="Permalink to “loadCanvas()”">​</a></h3><blockquote><p><strong>loadCanvas</strong>: () =&gt; <code>void</code></p></blockquote><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to “Returns”">​</a></h4><p><code>void</code></p>',80)]))}const p=a(n,[["render",s]]);export{u as __pageData,p as default};
