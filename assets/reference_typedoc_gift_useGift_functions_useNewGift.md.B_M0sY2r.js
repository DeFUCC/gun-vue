import{_ as o,c as t,o as a,ag as r}from"./chunks/framework.DADfZotI.js";const h=JSON.parse('{"title":"Function: useNewGift()","description":"","frontmatter":{},"headers":[],"relativePath":"reference/typedoc/gift/useGift/functions/useNewGift.md","filePath":"reference/typedoc/gift/useGift/functions/useNewGift.md"}'),i={name:"reference/typedoc/gift/useGift/functions/useNewGift.md"};function c(n,e,d,s,l,f){return a(),t("div",null,e[0]||(e[0]=[r('<p><a href="./../../../README.html"><strong>Gun-Vue docs v0.24.0</strong></a></p><hr><p><a href="./../../../modules.html">Gun-Vue docs</a> / <a href="./../README.html">gift/useGift</a> / useNewGift</p><h1 id="function-usenewgift" tabindex="-1">Function: useNewGift() <a class="header-anchor" href="#function-usenewgift" aria-label="Permalink to &quot;Function: useNewGift()&quot;">​</a></h1><blockquote><p><strong>useNewGift</strong>(<code>giftConf</code>): <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/DeFUCC/gun-vue/blob/73753fc9cd729ba40bc3b9b21b18b9ea09c43e45/src/gift/useGift.js#L55" target="_blank" rel="noreferrer">src/gift/useGift.js:55</a></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="giftconf" tabindex="-1">giftConf <a class="header-anchor" href="#giftconf" aria-label="Permalink to &quot;giftConf&quot;">​</a></h3><p><code>any</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>object</code></p><h3 id="cleangift" tabindex="-1">cleanGift <a class="header-anchor" href="#cleangift" aria-label="Permalink to &quot;cleanGift&quot;">​</a></h3><blockquote><p><strong>cleanGift</strong>: <code>ComputedRef</code>&lt;<code>any</code>&gt;</p></blockquote><h3 id="gift" tabindex="-1">gift <a class="header-anchor" href="#gift" aria-label="Permalink to &quot;gift&quot;">​</a></h3><blockquote><p><strong>gift</strong>: <code>object</code></p></blockquote><h4 id="gift-date" tabindex="-1">gift.date <a class="header-anchor" href="#gift-date" aria-label="Permalink to &quot;gift.date&quot;">​</a></h4><blockquote><p><strong>date</strong>: <code>number</code></p></blockquote><h4 id="gift-from" tabindex="-1">gift.from <a class="header-anchor" href="#gift-from" aria-label="Permalink to &quot;gift.from&quot;">​</a></h4><blockquote><p><strong>from</strong>: <code>any</code></p></blockquote><h4 id="gift-project" tabindex="-1">gift.project <a class="header-anchor" href="#gift-project" aria-label="Permalink to &quot;gift.project&quot;">​</a></h4><blockquote><p><strong>project</strong>: <code>string</code> = <code>&quot;&quot;</code></p></blockquote><h4 id="gift-ql" tabindex="-1">gift.ql <a class="header-anchor" href="#gift-ql" aria-label="Permalink to &quot;gift.ql&quot;">​</a></h4><blockquote><p><strong>ql</strong>: <code>any</code> = <code>null</code></p></blockquote><h4 id="gift-qn" tabindex="-1">gift.qn <a class="header-anchor" href="#gift-qn" aria-label="Permalink to &quot;gift.qn&quot;">​</a></h4><blockquote><p><strong>qn</strong>: <code>any</code> = <code>null</code></p></blockquote><h4 id="gift-room" tabindex="-1">gift.room <a class="header-anchor" href="#gift-room" aria-label="Permalink to &quot;gift.room&quot;">​</a></h4><blockquote><p><strong>room</strong>: <code>any</code></p></blockquote><h4 id="gift-to" tabindex="-1">gift.to <a class="header-anchor" href="#gift-to" aria-label="Permalink to &quot;gift.to&quot;">​</a></h4><blockquote><p><strong>to</strong>: <code>string</code> = <code>&quot;&quot;</code></p></blockquote><h4 id="gift-wish" tabindex="-1">gift.wish <a class="header-anchor" href="#gift-wish" aria-label="Permalink to &quot;gift.wish&quot;">​</a></h4><blockquote><p><strong>wish</strong>: <code>string</code> = <code>&quot;&quot;</code></p></blockquote><h3 id="hash" tabindex="-1">hash <a class="header-anchor" href="#hash" aria-label="Permalink to &quot;hash&quot;">​</a></h3><blockquote><p><strong>hash</strong>: <code>Ref</code>&lt;<code>string</code>, <code>string</code>&gt;</p></blockquote><h3 id="propose" tabindex="-1">propose() <a class="header-anchor" href="#propose" aria-label="Permalink to &quot;propose()&quot;">​</a></h3><blockquote><p><strong>propose</strong>: () =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h3 id="proposed" tabindex="-1">proposed <a class="header-anchor" href="#proposed" aria-label="Permalink to &quot;proposed&quot;">​</a></h3><blockquote><p><strong>proposed</strong>: <code>Ref</code>&lt;<code>boolean</code>, <code>boolean</code>&gt;</p></blockquote><h3 id="valid" tabindex="-1">valid <a class="header-anchor" href="#valid" aria-label="Permalink to &quot;valid&quot;">​</a></h3><blockquote><p><strong>valid</strong>: <code>ComputedRef</code>&lt;<code>any</code>&gt;</p></blockquote>',41)]))}const g=o(i,[["render",c]]);export{h as __pageData,g as default};
