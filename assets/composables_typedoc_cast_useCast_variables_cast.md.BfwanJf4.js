import{_ as a,c as o,o as r,ag as t}from"./chunks/framework.NFQ89pQN.js";const b=JSON.parse('{"title":"Variable: cast","description":"","frontmatter":{},"headers":[],"relativePath":"composables/typedoc/cast/useCast/variables/cast.md","filePath":"composables/typedoc/cast/useCast/variables/cast.md"}'),c={name:"composables/typedoc/cast/useCast/variables/cast.md"};function d(s,e,l,n,i,h){return r(),o("div",null,e[0]||(e[0]=[t('<p><a href="./../../../README.html"><strong>Gun-Vue docs v0.25.0</strong></a></p><hr><p><a href="./../../../modules.html">Gun-Vue docs</a> / <a href="./../README.html">cast/useCast</a> / cast</p><h1 id="variable-cast" tabindex="-1">Variable: cast <a class="header-anchor" href="#variable-cast" aria-label="Permalink to “Variable: cast”">​</a></h1><blockquote><p><code>const</code> <strong>cast</strong>: <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/DeFUCC/gun-vue/blob/259c4165ce68c54fd4914184f0014a7f355fa75e/src/cast/useCast.js#L258" target="_blank" rel="noreferrer">src/cast/useCast.js:258</a></p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to “Type declaration”">​</a></h2><h3 id="recordercamera" tabindex="-1">recorderCamera <a class="header-anchor" href="#recordercamera" aria-label="Permalink to “recorderCamera”">​</a></h3><blockquote><p><strong>recorderCamera</strong>: <code>ShallowRef</code>&lt;<code>any</code>, <code>any</code>&gt;</p></blockquote><h3 id="recorderslides" tabindex="-1">recorderSlides <a class="header-anchor" href="#recorderslides" aria-label="Permalink to “recorderSlides”">​</a></h3><blockquote><p><strong>recorderSlides</strong>: <code>ShallowRef</code>&lt;<code>any</code>, <code>any</code>&gt;</p></blockquote><h3 id="recording" tabindex="-1">recording <a class="header-anchor" href="#recording" aria-label="Permalink to “recording”">​</a></h3><blockquote><p><strong>recording</strong>: <code>Ref</code>&lt;<code>boolean</code>, <code>boolean</code>&gt;</p></blockquote><h3 id="recordingtime" tabindex="-1">recordingTime <a class="header-anchor" href="#recordingtime" aria-label="Permalink to “recordingTime”">​</a></h3><blockquote><p><strong>recordingTime</strong>: <code>ComputedRef</code>&lt;<code>number</code>&gt;</p></blockquote><h3 id="showavatar" tabindex="-1">showAvatar <a class="header-anchor" href="#showavatar" aria-label="Permalink to “showAvatar”">​</a></h3><blockquote><p><strong>showAvatar</strong>: <code>Ref</code>&lt;<code>boolean</code>, <code>boolean</code>&gt;</p></blockquote><h3 id="startrecording" tabindex="-1">startRecording() <a class="header-anchor" href="#startrecording" aria-label="Permalink to “startRecording()”">​</a></h3><blockquote><p><strong>startRecording</strong>: (<code>customConfig</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to “Parameters”">​</a></h4><h5 id="customconfig" tabindex="-1">customConfig <a class="header-anchor" href="#customconfig" aria-label="Permalink to “customConfig”">​</a></h5><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to “Returns”">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h3 id="stoprecording" tabindex="-1">stopRecording() <a class="header-anchor" href="#stoprecording" aria-label="Permalink to “stopRecording()”">​</a></h3><blockquote><p><strong>stopRecording</strong>: () =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to “Returns”">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h3 id="streamcamera" tabindex="-1">streamCamera <a class="header-anchor" href="#streamcamera" aria-label="Permalink to “streamCamera”">​</a></h3><blockquote><p><strong>streamCamera</strong>: <code>ShallowRef</code>&lt;<code>any</code>, <code>any</code>&gt;</p></blockquote><h3 id="streamcapture" tabindex="-1">streamCapture <a class="header-anchor" href="#streamcapture" aria-label="Permalink to “streamCapture”">​</a></h3><blockquote><p><strong>streamCapture</strong>: <code>ShallowRef</code>&lt;<code>any</code>, <code>any</code>&gt;</p></blockquote><h3 id="streamslides" tabindex="-1">streamSlides <a class="header-anchor" href="#streamslides" aria-label="Permalink to “streamSlides”">​</a></h3><blockquote><p><strong>streamSlides</strong>: <code>ShallowRef</code>&lt;<code>any</code>, <code>any</code>&gt;</p></blockquote><h3 id="toggleavatar" tabindex="-1">toggleAvatar() <a class="header-anchor" href="#toggleavatar" aria-label="Permalink to “toggleAvatar()”">​</a></h3><blockquote><p><strong>toggleAvatar</strong>: () =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to “Returns”">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h3 id="togglerecording" tabindex="-1">toggleRecording() <a class="header-anchor" href="#togglerecording" aria-label="Permalink to “toggleRecording()”">​</a></h3><blockquote><p><strong>toggleRecording</strong>: () =&gt; <code>void</code></p></blockquote><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to “Returns”">​</a></h4><p><code>void</code></p>',41)]))}const m=a(c,[["render",d]]);export{b as __pageData,m as default};
