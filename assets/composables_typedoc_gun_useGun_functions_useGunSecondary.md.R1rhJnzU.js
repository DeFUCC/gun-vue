import{_ as a,c as r,o as n,ag as o}from"./chunks/framework.NFQ89pQN.js";const p=JSON.parse('{"title":"Function: useGunSecondary()","description":"","frontmatter":{},"headers":[],"relativePath":"composables/typedoc/gun/useGun/functions/useGunSecondary.md","filePath":"composables/typedoc/gun/useGun/functions/useGunSecondary.md"}'),s={name:"composables/typedoc/gun/useGun/functions/useGunSecondary.md"};function t(c,e,d,u,l,i){return n(),r("div",null,e[0]||(e[0]=[o('<p><a href="./../../../README.html"><strong>Gun-Vue docs v0.25.0</strong></a></p><hr><p><a href="./../../../modules.html">Gun-Vue docs</a> / <a href="./../README.html">gun/useGun</a> / useGunSecondary</p><h1 id="function-usegunsecondary" tabindex="-1">Function: useGunSecondary() <a class="header-anchor" href="#function-usegunsecondary" aria-label="Permalink to “Function: useGunSecondary()”">​</a></h1><blockquote><p><strong>useGunSecondary</strong>(<code>__namedParameters</code>): <code>any</code></p></blockquote><p>Defined in: <a href="https://github.com/DeFUCC/gun-vue/blob/bdb4ce83bc06663e093a3accca3adbe892b719eb/src/gun/useGun.js#L18" target="_blank" rel="noreferrer">src/gun/useGun.js:18</a></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to “Parameters”">​</a></h2><h3 id="namedparameters" tabindex="-1">__namedParameters <a class="header-anchor" href="#namedparameters" aria-label="Permalink to “__namedParameters”">​</a></h3><h4 id="localstorage" tabindex="-1">localStorage? <a class="header-anchor" href="#localstorage" aria-label="Permalink to “localStorage?”">​</a></h4><p><code>boolean</code> = <code>false</code></p><h4 id="peers" tabindex="-1">peers? <a class="header-anchor" href="#peers" aria-label="Permalink to “peers?”">​</a></h4><p><code>any</code>[] = <code>...</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to “Returns”">​</a></h2><p><code>any</code></p>',14)]))}const m=a(s,[["render",t]]);export{p as __pageData,m as default};
