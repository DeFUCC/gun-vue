import{_ as a,c as t,o,ag as e}from"./chunks/framework.Cf-rbDpz.js";const k=JSON.parse('{"title":"Function: usePosts()","description":"","frontmatter":{},"headers":[],"relativePath":"reference/typedoc/Posts/functions/usePosts.md","filePath":"reference/typedoc/Posts/functions/usePosts.md"}'),i={name:"reference/typedoc/Posts/functions/usePosts.md"};function n(l,s,r,d,c,h){return o(),t("div",null,s[0]||(s[0]=[e(`<p><a href="./../../README.html"><strong>Gun-Vue docs v0.23.0</strong></a></p><hr><p><a href="./../../modules.html">Gun-Vue docs</a> / <a href="./../README.html">Posts</a> / usePosts</p><h1 id="function-useposts" tabindex="-1">Function: usePosts() <a class="header-anchor" href="#function-useposts" aria-label="Permalink to &quot;Function: usePosts()&quot;">​</a></h1><blockquote><p><strong>usePosts</strong>(<code>tag</code>): <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/DeFUCC/gun-vue/blob/929af6027444b983a286b26c8d5468ab18f05a8a/src/post/usePosts.js#L36" target="_blank" rel="noreferrer">src/post/usePosts.js:36</a></p><p>Use a list of immutable data from a #tag</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="tag" tabindex="-1">tag <a class="header-anchor" href="#tag" aria-label="Permalink to &quot;tag&quot;">​</a></h3><p><code>string</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>object</code></p><h3 id="backlinks" tabindex="-1">backlinks <a class="header-anchor" href="#backlinks" aria-label="Permalink to &quot;backlinks&quot;">​</a></h3><blockquote><p><strong>backlinks</strong>: <code>object</code></p></blockquote><h3 id="countbacklinks" tabindex="-1">countBacklinks <a class="header-anchor" href="#countbacklinks" aria-label="Permalink to &quot;countBacklinks&quot;">​</a></h3><blockquote><p><strong>countBacklinks</strong>: <code>ComputedRef</code>&lt;<code>number</code>&gt;</p></blockquote><h3 id="countposts" tabindex="-1">countPosts <a class="header-anchor" href="#countposts" aria-label="Permalink to &quot;countPosts&quot;">​</a></h3><blockquote><p><strong>countPosts</strong>: <code>ComputedRef</code>&lt;<code>number</code>&gt;</p></blockquote><h3 id="downloading" tabindex="-1">downloading <a class="header-anchor" href="#downloading" aria-label="Permalink to &quot;downloading&quot;">​</a></h3><blockquote><p><strong>downloading</strong>: <code>Ref</code>&lt;<code>boolean</code>, <code>boolean</code>&gt;</p></blockquote><h3 id="downloadposts" tabindex="-1">downloadPosts <a class="header-anchor" href="#downloadposts" aria-label="Permalink to &quot;downloadPosts&quot;">​</a></h3><blockquote><p><strong>downloadPosts</strong>: <code>Function</code></p></blockquote><h3 id="posts" tabindex="-1">posts <a class="header-anchor" href="#posts" aria-label="Permalink to &quot;posts&quot;">​</a></h3><blockquote><p><strong>posts</strong>: <code>object</code></p></blockquote><h3 id="uploadposts" tabindex="-1">uploadPosts <a class="header-anchor" href="#uploadposts" aria-label="Permalink to &quot;uploadPosts&quot;">​</a></h3><blockquote><p><strong>uploadPosts</strong>: <code>Function</code></p></blockquote><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { usePosts } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@gun-vue/composables&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">posts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">timestamps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">uploadPosts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">downloadPosts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> usePosts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;MyTag&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,28)]))}const u=a(i,[["render",n]]);export{k as __pageData,u as default};
