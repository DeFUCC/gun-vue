import{Y as v,Z as C}from"./components.CoJQvNDd.js";import{v as I,m as O,w as f}from"./english.MxR0N9Hb.js";const i="#/auth/";function D(t=""){let o=encodeURIComponent(t);return window.location.origin+window.location.pathname+i+o}async function E(t){if(!t)return!1;if(typeof t=="string"){if(t.includes(i)&&(t=decodeURIComponent(link.substring(link.indexOf(i)+i.length))),t.substring(0,3)=="SEA")return"";if(I(t.trim(),f)){const o=O(t.trim(),f);t=await C(btoa(String.fromCharCode(...o)))}typeof t=="string"&&(t=JSON.parse(t))}return t!=null&&t.pub&&(t!=null&&t.priv)?t:null}async function T(t,o){if(!t)return!1;const e=t.type.toLowerCase();let n=null;try{if(e==="application/json"||t.name.endsWith(".webkey"))n=await R(t);else if(e==="image/png"||e==="image/svg+xml"){const r=await v(t);r!=null&&r.content&&(n=r.content)}else e.startsWith("image/")&&(n=await A(t))}catch(r){console.error("Failed to extract auth data from file:",r)}return n}async function R(t){if(!t||t.size>2e7){console.error("File is missing or too big");return}return await new Promise((o,e)=>{const n=Object.assign(new FileReader,{onload:()=>o(n.result),onerror:e});n.readAsText(t)})}async function A(t){if(!t||typeof t.type!="string"||!t.type.startsWith("image/"))return console.warn("Invalid file or file type is not an image. Received:",t&&t.type),null;try{const o=await createImageBitmap(t),{width:e,height:n}=o,r=typeof OffscreenCanvas<"u"?new OffscreenCanvas(e,n):document.createElement("canvas");r.width=e,r.height=n;const c=r.getContext("2d");if(!c)return console.error("Failed to get 2D context from canvas."),o.close(),null;c.drawImage(o,0,0),o.close();const l=c.getImageData(0,0,e,n).data,u=new Array(n),y=128;for(let a=0;a<n;a++){const d=new Array(e),w=a*e*4;for(let s=0;s<e;s++){const m=w+s*4,h=l[m],p=l[m+1],b=l[m+2],x=.299*h+.587*p+.114*b;d[s]=x<y?1:0}u[a]=d}const g=new Bitmap({width:e,height:n});return g.data=u,decodeQR(g.toImage())}catch(o){return console.error("Error processing QR code:",o),null}}export{D as g,T as h,E as p};
