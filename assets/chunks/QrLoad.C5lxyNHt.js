import{d as v}from"./decode.BnXHfSSi.js";import{B as x}from"./index.PUUcqk1C.js";import{c as _,o as I,k as b}from"./framework.NFQ89pQN.js";function C(){return{processFile:D}}async function D(t){if(!t||typeof t.type!="string"||!t.type.startsWith("image/"))return console.warn("Invalid file or file type is not an image. Received:",t&&t.type),null;try{const a=await createImageBitmap(t),{width:e,height:n}=a,o=typeof OffscreenCanvas<"u"?new OffscreenCanvas(e,n):document.createElement("canvas");o.width=e,o.height=n;const r=o.getContext("2d");if(!r)return console.error("Failed to get 2D context from canvas."),a.close(),null;r.drawImage(a,0,0),a.close();const i=r.getImageData(0,0,e,n).data,l=new Array(n),g=128;for(let s=0;s<n;s++){const f=new Array(e),u=s*e*4;for(let c=0;c<e;c++){const m=u+c*4,y=i[m],h=i[m+1],w=i[m+2],B=.299*y+.587*h+.114*w;f[c]=B<g?1:0}l[s]=f}const d=new x({width:e,height:n});return d.data=l,v(d.toImage())}catch(a){return console.error("Error processing QR code:",a),null}}const k={__name:"QrLoad",emits:["loaded"],setup(t,{emit:a}){const{processFile:e}=C();return(n,o)=>(I(),_("input",{id:"qr-input",type:"file",accept:"image/*",onChange:o[0]||(o[0]=r=>b(e)(r.target.files[0],p=>n.$emit("loaded",p)))},null,32))}};export{k as default};
