import{_ as a,c as i,o as r,ag as l}from"./chunks/framework.Cf-rbDpz.js";const f=JSON.parse('{"title":"Cast","description":"","frontmatter":{},"headers":[],"relativePath":"reference/typedoc/Cast/README.md","filePath":"reference/typedoc/Cast/README.md"}'),t={name:"reference/typedoc/Cast/README.md"};function s(n,e,o,h,c,m){return r(),i("div",null,e[0]||(e[0]=[l('<p><a href="./../README.html"><strong>Gun-Vue docs v0.22.6</strong></a></p><hr><p><a href="./../modules.html">Gun-Vue docs</a> / Cast</p><h1 id="cast" tabindex="-1">Cast <a class="header-anchor" href="#cast" aria-label="Permalink to &quot;Cast&quot;">​</a></h1><h2 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h2><ul><li><a href="./type-aliases/MimeTypes.html">MimeTypes</a></li></ul><h2 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-label="Permalink to &quot;Variables&quot;">​</a></h2><ul><li><a href="./variables/cameras.html">cameras</a></li><li><a href="./variables/cast.html">cast</a></li><li><a href="./variables/currentCamera.html">currentCamera</a></li><li><a href="./variables/currentMic.html">currentMic</a></li><li><a href="./variables/devices.html">devices</a></li><li><a href="./variables/fileNames.html">fileNames</a></li><li><a href="./variables/microphones.html">microphones</a></li><li><a href="./variables/mimeExtMap.html">mimeExtMap</a></li><li><a href="./variables/mimeType.html">mimeType</a></li><li><a href="./variables/recordCamera.html">recordCamera</a></li><li><a href="./variables/recordingName.html">recordingName</a></li></ul><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><ul><li><a href="./functions/download.html">download</a></li><li><a href="./functions/ensureDevicesListPermissions.html">ensureDevicesListPermissions</a></li><li><a href="./functions/getFilename.html">getFilename</a></li><li><a href="./functions/getSupportedMimeTypes.html">getSupportedMimeTypes</a></li><li><a href="./functions/useRecording.html">useRecording</a></li></ul>',10)]))}const u=a(t,[["render",s]]);export{f as __pageData,u as default};
