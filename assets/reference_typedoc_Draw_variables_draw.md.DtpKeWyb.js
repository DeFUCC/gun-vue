import{_ as a,c as o,o as r,ag as t}from"./chunks/framework.Cf-rbDpz.js";const u=JSON.parse('{"title":"Variable: draw","description":"","frontmatter":{},"headers":[],"relativePath":"reference/typedoc/Draw/variables/draw.md","filePath":"reference/typedoc/Draw/variables/draw.md"}'),n={name:"reference/typedoc/Draw/variables/draw.md"};function c(d,e,l,s,i,h){return r(),o("div",null,e[0]||(e[0]=[t('<p><a href="./../../README.html"><strong>Gun-Vue docs v0.23.0</strong></a></p><hr><p><a href="./../../modules.html">Gun-Vue docs</a> / <a href="./../README.html">Draw</a> / draw</p><h1 id="variable-draw" tabindex="-1">Variable: draw <a class="header-anchor" href="#variable-draw" aria-label="Permalink to &quot;Variable: draw&quot;">​</a></h1><blockquote><p><code>const</code> <strong>draw</strong>: <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/DeFUCC/gun-vue/blob/7f2c96b1592195e79aaaa14a6080cc46a33906bc/src/space/useDraw.js#L25" target="_blank" rel="noreferrer">src/space/useDraw.js:25</a></p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="canclear" tabindex="-1">canClear <a class="header-anchor" href="#canclear" aria-label="Permalink to &quot;canClear&quot;">​</a></h3><blockquote><p><strong>canClear</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h3 id="canredo" tabindex="-1">canRedo <a class="header-anchor" href="#canredo" aria-label="Permalink to &quot;canRedo&quot;">​</a></h3><blockquote><p><strong>canRedo</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h3 id="canundo" tabindex="-1">canUndo <a class="header-anchor" href="#canundo" aria-label="Permalink to &quot;canUndo&quot;">​</a></h3><blockquote><p><strong>canUndo</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h3 id="clear" tabindex="-1">clear() <a class="header-anchor" href="#clear" aria-label="Permalink to &quot;clear()&quot;">​</a></h3><blockquote><p><strong>clear</strong>: () =&gt; <code>void</code></p></blockquote><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h3 id="colors" tabindex="-1">colors <a class="header-anchor" href="#colors" aria-label="Permalink to &quot;colors&quot;">​</a></h3><blockquote><p><strong>colors</strong>: <code>string</code>[]</p></blockquote><h3 id="content" tabindex="-1">content <a class="header-anchor" href="#content" aria-label="Permalink to &quot;content&quot;">​</a></h3><blockquote><p><strong>content</strong>: <code>string</code> = <code>&quot;&quot;</code></p></blockquote><h3 id="enabled" tabindex="-1">enabled <a class="header-anchor" href="#enabled" aria-label="Permalink to &quot;enabled&quot;">​</a></h3><blockquote><p><strong>enabled</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h3 id="ing" tabindex="-1">ing <a class="header-anchor" href="#ing" aria-label="Permalink to &quot;ing&quot;">​</a></h3><blockquote><p><strong>ing</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h3 id="initiated" tabindex="-1">initiated <a class="header-anchor" href="#initiated" aria-label="Permalink to &quot;initiated&quot;">​</a></h3><blockquote><p><strong>initiated</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h3 id="mode" tabindex="-1">mode <a class="header-anchor" href="#mode" aria-label="Permalink to &quot;mode&quot;">​</a></h3><blockquote><p><strong>mode</strong>: <code>string</code></p></blockquote><h3 id="modes" tabindex="-1">modes <a class="header-anchor" href="#modes" aria-label="Permalink to &quot;modes&quot;">​</a></h3><blockquote><p><strong>modes</strong>: <code>string</code>[]</p></blockquote><h3 id="pinned" tabindex="-1">pinned <a class="header-anchor" href="#pinned" aria-label="Permalink to &quot;pinned&quot;">​</a></h3><blockquote><p><strong>pinned</strong>: <code>boolean</code></p></blockquote><h3 id="sizes" tabindex="-1">sizes <a class="header-anchor" href="#sizes" aria-label="Permalink to &quot;sizes&quot;">​</a></h3><blockquote><p><strong>sizes</strong>: <code>object</code></p></blockquote>',35)]))}const p=a(n,[["render",c]]);export{u as __pageData,p as default};
