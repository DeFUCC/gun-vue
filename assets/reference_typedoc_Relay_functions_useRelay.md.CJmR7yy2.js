import{_ as a,c as s,o as t,ag as r}from"./chunks/framework.Cf-rbDpz.js";const u=JSON.parse('{"title":"Function: useRelay()","description":"","frontmatter":{},"headers":[],"relativePath":"reference/typedoc/Relay/functions/useRelay.md","filePath":"reference/typedoc/Relay/functions/useRelay.md"}'),i={name:"reference/typedoc/Relay/functions/useRelay.md"};function n(l,e,o,h,c,p){return t(),s("div",null,e[0]||(e[0]=[r(`<p><a href="./../../README.html"><strong>Gun-Vue docs v0.23.0</strong></a></p><hr><p><a href="./../../modules.html">Gun-Vue docs</a> / <a href="./../README.html">Relay</a> / useRelay</p><h1 id="function-userelay" tabindex="-1">Function: useRelay() <a class="header-anchor" href="#function-userelay" aria-label="Permalink to &quot;Function: useRelay()&quot;">​</a></h1><blockquote><p><strong>useRelay</strong>(): <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/DeFUCC/gun-vue/blob/7f2c96b1592195e79aaaa14a6080cc46a33906bc/src/gun/useRelay.js#L92" target="_blank" rel="noreferrer">src/gun/useRelay.js:92</a></p><p>Peer server status monitor</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>object</code></p><h3 id="relay" tabindex="-1">relay <a class="header-anchor" href="#relay" aria-label="Permalink to &quot;relay&quot;">​</a></h3><blockquote><p><strong>relay</strong>: <a href="./../interfaces/Relay.html"><code>Relay</code></a></p></blockquote><h3 id="resetpeer" tabindex="-1">resetPeer() <a class="header-anchor" href="#resetpeer" aria-label="Permalink to &quot;resetPeer()&quot;">​</a></h3><blockquote><p><strong>resetPeer</strong>: () =&gt; <code>void</code></p></blockquote><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h3 id="setpeer" tabindex="-1">setPeer() <a class="header-anchor" href="#setpeer" aria-label="Permalink to &quot;setPeer()&quot;">​</a></h3><blockquote><p><strong>setPeer</strong>: (<code>url</code>) =&gt; <code>void</code></p></blockquote><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="url" tabindex="-1">url <a class="header-anchor" href="#url" aria-label="Permalink to &quot;url&quot;">​</a></h5><p><code>string</code></p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useRelay } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@gun-vue/composables&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">relay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setPeer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">resetPeer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useRelay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div>`,24)]))}const k=a(i,[["render",n]]);export{u as __pageData,k as default};
