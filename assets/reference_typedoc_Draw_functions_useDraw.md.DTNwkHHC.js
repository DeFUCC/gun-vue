import{_ as e,c as o,o as r,ag as t}from"./chunks/framework.Cf-rbDpz.js";const b=JSON.parse('{"title":"Function: useDraw()","description":"","frontmatter":{},"headers":[],"relativePath":"reference/typedoc/Draw/functions/useDraw.md","filePath":"reference/typedoc/Draw/functions/useDraw.md"}'),d={name:"reference/typedoc/Draw/functions/useDraw.md"};function n(c,a,s,l,u,i){return r(),o("div",null,a[0]||(a[0]=[t('<p><a href="./../../README.html"><strong>Gun-Vue docs v0.23.0</strong></a></p><hr><p><a href="./../../modules.html">Gun-Vue docs</a> / <a href="./../README.html">Draw</a> / useDraw</p><h1 id="function-usedraw" tabindex="-1">Function: useDraw() <a class="header-anchor" href="#function-usedraw" aria-label="Permalink to &quot;Function: useDraw()&quot;">​</a></h1><blockquote><p><strong>useDraw</strong>(): <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/DeFUCC/gun-vue/blob/929af6027444b983a286b26c8d5468ab18f05a8a/src/space/useDraw.js#L96" target="_blank" rel="noreferrer">src/space/useDraw.js:96</a></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>object</code></p><h3 id="brush" tabindex="-1">brush <a class="header-anchor" href="#brush" aria-label="Permalink to &quot;brush&quot;">​</a></h3><blockquote><p><strong>brush</strong>: <code>object</code></p></blockquote><h4 id="brush-arrowend" tabindex="-1">brush.arrowEnd <a class="header-anchor" href="#brush-arrowend" aria-label="Permalink to &quot;brush.arrowEnd&quot;">​</a></h4><blockquote><p><strong>arrowEnd</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h4 id="brush-color" tabindex="-1">brush.color <a class="header-anchor" href="#brush-color" aria-label="Permalink to &quot;brush.color&quot;">​</a></h4><blockquote><p><strong>color</strong>: <code>string</code></p></blockquote><h4 id="brush-mode" tabindex="-1">brush.mode <a class="header-anchor" href="#brush-mode" aria-label="Permalink to &quot;brush.mode&quot;">​</a></h4><blockquote><p><strong>mode</strong>: <code>string</code> = <code>&quot;stylus&quot;</code></p></blockquote><h4 id="brush-size" tabindex="-1">brush.size <a class="header-anchor" href="#brush-size" aria-label="Permalink to &quot;brush.size&quot;">​</a></h4><blockquote><p><strong>size</strong>: <code>number</code> = <code>10</code></p></blockquote><h3 id="drauu" tabindex="-1">drauu <a class="header-anchor" href="#drauu" aria-label="Permalink to &quot;drauu&quot;">​</a></h3><blockquote><p><strong>drauu</strong>: <code>Raw</code>&lt;<code>Drauu</code>&gt;</p></blockquote><h3 id="draw" tabindex="-1">draw <a class="header-anchor" href="#draw" aria-label="Permalink to &quot;draw&quot;">​</a></h3><blockquote><p><strong>draw</strong>: <code>object</code></p></blockquote><h4 id="draw-canclear" tabindex="-1">draw.canClear <a class="header-anchor" href="#draw-canclear" aria-label="Permalink to &quot;draw.canClear&quot;">​</a></h4><blockquote><p><strong>canClear</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h4 id="draw-canredo" tabindex="-1">draw.canRedo <a class="header-anchor" href="#draw-canredo" aria-label="Permalink to &quot;draw.canRedo&quot;">​</a></h4><blockquote><p><strong>canRedo</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h4 id="draw-canundo" tabindex="-1">draw.canUndo <a class="header-anchor" href="#draw-canundo" aria-label="Permalink to &quot;draw.canUndo&quot;">​</a></h4><blockquote><p><strong>canUndo</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h4 id="draw-clear" tabindex="-1">draw.clear() <a class="header-anchor" href="#draw-clear" aria-label="Permalink to &quot;draw.clear()&quot;">​</a></h4><blockquote><p><strong>clear</strong>: () =&gt; <code>void</code></p></blockquote><h5 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>void</code></p><h4 id="draw-colors" tabindex="-1">draw.colors <a class="header-anchor" href="#draw-colors" aria-label="Permalink to &quot;draw.colors&quot;">​</a></h4><blockquote><p><strong>colors</strong>: <code>string</code>[]</p></blockquote><h4 id="draw-content" tabindex="-1">draw.content <a class="header-anchor" href="#draw-content" aria-label="Permalink to &quot;draw.content&quot;">​</a></h4><blockquote><p><strong>content</strong>: <code>string</code> = <code>&quot;&quot;</code></p></blockquote><h4 id="draw-enabled" tabindex="-1">draw.enabled <a class="header-anchor" href="#draw-enabled" aria-label="Permalink to &quot;draw.enabled&quot;">​</a></h4><blockquote><p><strong>enabled</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h4 id="draw-ing" tabindex="-1">draw.ing <a class="header-anchor" href="#draw-ing" aria-label="Permalink to &quot;draw.ing&quot;">​</a></h4><blockquote><p><strong>ing</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h4 id="draw-initiated" tabindex="-1">draw.initiated <a class="header-anchor" href="#draw-initiated" aria-label="Permalink to &quot;draw.initiated&quot;">​</a></h4><blockquote><p><strong>initiated</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h4 id="draw-mode" tabindex="-1">draw.mode <a class="header-anchor" href="#draw-mode" aria-label="Permalink to &quot;draw.mode&quot;">​</a></h4><blockquote><p><strong>mode</strong>: <code>string</code></p></blockquote><h4 id="draw-modes" tabindex="-1">draw.modes <a class="header-anchor" href="#draw-modes" aria-label="Permalink to &quot;draw.modes&quot;">​</a></h4><blockquote><p><strong>modes</strong>: <code>string</code>[]</p></blockquote><h4 id="draw-pinned" tabindex="-1">draw.pinned <a class="header-anchor" href="#draw-pinned" aria-label="Permalink to &quot;draw.pinned&quot;">​</a></h4><blockquote><p><strong>pinned</strong>: <code>boolean</code></p></blockquote><h4 id="draw-sizes" tabindex="-1">draw.sizes <a class="header-anchor" href="#draw-sizes" aria-label="Permalink to &quot;draw.sizes&quot;">​</a></h4><blockquote><p><strong>sizes</strong>: <code>object</code></p></blockquote><h3 id="loadcanvas" tabindex="-1">loadCanvas() <a class="header-anchor" href="#loadcanvas" aria-label="Permalink to &quot;loadCanvas()&quot;">​</a></h3><blockquote><p><strong>loadCanvas</strong>: () =&gt; <code>void</code></p></blockquote><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p>',54)]))}const q=e(d,[["render",n]]);export{b as __pageData,q as default};
