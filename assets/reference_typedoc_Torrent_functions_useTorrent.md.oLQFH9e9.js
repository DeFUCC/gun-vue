import{_ as o,c as a,o as t,ag as r}from"./chunks/framework.Cf-rbDpz.js";const b=JSON.parse('{"title":"Function: useTorrent()","description":"","frontmatter":{},"headers":[],"relativePath":"reference/typedoc/Torrent/functions/useTorrent.md","filePath":"reference/typedoc/Torrent/functions/useTorrent.md"}'),d={name:"reference/typedoc/Torrent/functions/useTorrent.md"};function n(l,e,s,c,i,u){return t(),a("div",null,e[0]||(e[0]=[r('<p><a href="./../../README.html"><strong>Gun-Vue docs v0.24.0</strong></a></p><hr><p><a href="./../../modules.html">Gun-Vue docs</a> / <a href="./../README.html">Torrent</a> / useTorrent</p><h1 id="function-usetorrent" tabindex="-1">Function: useTorrent() <a class="header-anchor" href="#function-usetorrent" aria-label="Permalink to &quot;Function: useTorrent()&quot;">​</a></h1><blockquote><p><strong>useTorrent</strong>(): <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/DeFUCC/gun-vue/blob/7fa00ca99db5c47ffb24c0f39fb9bd0511308de2/src/files/useTorrent.js#L82" target="_blank" rel="noreferrer">src/files/useTorrent.js:82</a></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>object</code></p><h3 id="clearfiles" tabindex="-1">clearFiles() <a class="header-anchor" href="#clearfiles" aria-label="Permalink to &quot;clearFiles()&quot;">​</a></h3><blockquote><p><strong>clearFiles</strong>: () =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h3 id="clearopfs" tabindex="-1">clearOPFS() <a class="header-anchor" href="#clearopfs" aria-label="Permalink to &quot;clearOPFS()&quot;">​</a></h3><blockquote><p><strong>clearOPFS</strong>: () =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h3 id="deletefile" tabindex="-1">deleteFile() <a class="header-anchor" href="#deletefile" aria-label="Permalink to &quot;deleteFile()&quot;">​</a></h3><blockquote><p><strong>deleteFile</strong>: (<code>filename</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="filename" tabindex="-1">filename <a class="header-anchor" href="#filename" aria-label="Permalink to &quot;filename&quot;">​</a></h5><p><code>any</code></p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h3 id="download" tabindex="-1">download() <a class="header-anchor" href="#download" aria-label="Permalink to &quot;download()&quot;">​</a></h3><blockquote><p><strong>download</strong>: (<code>id</code>) =&gt; <code>Promise</code>&lt;<code>any</code>&gt;</p></blockquote><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="id" tabindex="-1">id <a class="header-anchor" href="#id" aria-label="Permalink to &quot;id&quot;">​</a></h5><p><code>any</code></p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>any</code>&gt;</p><h3 id="downloadstatus" tabindex="-1">downloadStatus <a class="header-anchor" href="#downloadstatus" aria-label="Permalink to &quot;downloadStatus&quot;">​</a></h3><blockquote><p><strong>downloadStatus</strong>: <code>object</code></p></blockquote><h4 id="downloadstatus-done" tabindex="-1">downloadStatus.done <a class="header-anchor" href="#downloadstatus-done" aria-label="Permalink to &quot;downloadStatus.done&quot;">​</a></h4><blockquote><p><strong>done</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h4 id="downloadstatus-downloaded" tabindex="-1">downloadStatus.downloaded <a class="header-anchor" href="#downloadstatus-downloaded" aria-label="Permalink to &quot;downloadStatus.downloaded&quot;">​</a></h4><blockquote><p><strong>downloaded</strong>: <code>number</code> = <code>0</code></p></blockquote><h4 id="downloadstatus-downloadspeed" tabindex="-1">downloadStatus.downloadSpeed <a class="header-anchor" href="#downloadstatus-downloadspeed" aria-label="Permalink to &quot;downloadStatus.downloadSpeed&quot;">​</a></h4><blockquote><p><strong>downloadSpeed</strong>: <code>number</code> = <code>0</code></p></blockquote><h4 id="downloadstatus-progress" tabindex="-1">downloadStatus.progress <a class="header-anchor" href="#downloadstatus-progress" aria-label="Permalink to &quot;downloadStatus.progress&quot;">​</a></h4><blockquote><p><strong>progress</strong>: <code>number</code> = <code>0</code></p></blockquote><h3 id="files" tabindex="-1">files <a class="header-anchor" href="#files" aria-label="Permalink to &quot;files&quot;">​</a></h3><blockquote><p><strong>files</strong>: <code>Reactive</code>&lt;<code>Map</code>&lt;<code>any</code>, <code>any</code>&gt;&gt;</p></blockquote><h3 id="init" tabindex="-1">init() <a class="header-anchor" href="#init" aria-label="Permalink to &quot;init()&quot;">​</a></h3><blockquote><p><strong>init</strong>: () =&gt; <code>Promise</code>&lt;<code>boolean</code>&gt;</p></blockquote><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><h3 id="initialized" tabindex="-1">initialized <a class="header-anchor" href="#initialized" aria-label="Permalink to &quot;initialized&quot;">​</a></h3><blockquote><p><strong>initialized</strong>: <code>Ref</code>&lt;<code>boolean</code>, <code>boolean</code>&gt;</p></blockquote><h3 id="trackers" tabindex="-1">trackers <a class="header-anchor" href="#trackers" aria-label="Permalink to &quot;trackers&quot;">​</a></h3><blockquote><p><strong>trackers</strong>: <code>RemovableRef</code>&lt;<code>string</code>[]&gt;</p></blockquote><h3 id="upload" tabindex="-1">upload() <a class="header-anchor" href="#upload" aria-label="Permalink to &quot;upload()&quot;">​</a></h3><blockquote><p><strong>upload</strong>: (<code>inputFiles</code>) =&gt; <code>Promise</code>&lt;<code>any</code>[]&gt;</p></blockquote><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="inputfiles" tabindex="-1">inputFiles <a class="header-anchor" href="#inputfiles" aria-label="Permalink to &quot;inputFiles&quot;">​</a></h5><p><code>any</code></p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>any</code>[]&gt;</p>',57)]))}const p=o(d,[["render",n]]);export{b as __pageData,p as default};
