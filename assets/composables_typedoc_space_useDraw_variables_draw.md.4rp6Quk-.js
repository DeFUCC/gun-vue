import{_ as a,c as o,o as r,ag as n}from"./chunks/framework.BoVd_Pm6.js";const p=JSON.parse('{"title":"Variable: draw","description":"","frontmatter":{},"headers":[],"relativePath":"composables/typedoc/space/useDraw/variables/draw.md","filePath":"composables/typedoc/space/useDraw/variables/draw.md"}'),t={name:"composables/typedoc/space/useDraw/variables/draw.md"};function s(c,e,d,l,i,h){return r(),o("div",null,e[0]||(e[0]=[n('<p><a href="./../../../README.html"><strong>Gun-Vue docs v0.24.0</strong></a></p><hr><p><a href="./../../../modules.html">Gun-Vue docs</a> / <a href="./../README.html">space/useDraw</a> / draw</p><h1 id="variable-draw" tabindex="-1">Variable: draw <a class="header-anchor" href="#variable-draw" aria-label="Permalink to “Variable: draw”">​</a></h1><blockquote><p><code>const</code> <strong>draw</strong>: <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/DeFUCC/gun-vue/blob/e1343d34c102e441e1236e4ad2e0da0d4022c2ba/src/space/useDraw.js#L20" target="_blank" rel="noreferrer">src/space/useDraw.js:20</a></p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to “Type declaration”">​</a></h2><h3 id="canclear" tabindex="-1">canClear <a class="header-anchor" href="#canclear" aria-label="Permalink to “canClear”">​</a></h3><blockquote><p><strong>canClear</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h3 id="canredo" tabindex="-1">canRedo <a class="header-anchor" href="#canredo" aria-label="Permalink to “canRedo”">​</a></h3><blockquote><p><strong>canRedo</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h3 id="canundo" tabindex="-1">canUndo <a class="header-anchor" href="#canundo" aria-label="Permalink to “canUndo”">​</a></h3><blockquote><p><strong>canUndo</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h3 id="clear" tabindex="-1">clear() <a class="header-anchor" href="#clear" aria-label="Permalink to “clear()”">​</a></h3><blockquote><p><strong>clear</strong>: () =&gt; <code>void</code></p></blockquote><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to “Returns”">​</a></h4><p><code>void</code></p><h3 id="colors" tabindex="-1">colors <a class="header-anchor" href="#colors" aria-label="Permalink to “colors”">​</a></h3><blockquote><p><strong>colors</strong>: <code>string</code>[]</p></blockquote><h3 id="content" tabindex="-1">content <a class="header-anchor" href="#content" aria-label="Permalink to “content”">​</a></h3><blockquote><p><strong>content</strong>: <code>string</code> = <code>&quot;&quot;</code></p></blockquote><h3 id="enabled" tabindex="-1">enabled <a class="header-anchor" href="#enabled" aria-label="Permalink to “enabled”">​</a></h3><blockquote><p><strong>enabled</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h3 id="ing" tabindex="-1">ing <a class="header-anchor" href="#ing" aria-label="Permalink to “ing”">​</a></h3><blockquote><p><strong>ing</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h3 id="initiated" tabindex="-1">initiated <a class="header-anchor" href="#initiated" aria-label="Permalink to “initiated”">​</a></h3><blockquote><p><strong>initiated</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h3 id="mode" tabindex="-1">mode <a class="header-anchor" href="#mode" aria-label="Permalink to “mode”">​</a></h3><blockquote><p><strong>mode</strong>: <code>string</code></p></blockquote><h3 id="modes" tabindex="-1">modes <a class="header-anchor" href="#modes" aria-label="Permalink to “modes”">​</a></h3><blockquote><p><strong>modes</strong>: <code>string</code>[]</p></blockquote><h3 id="pinned" tabindex="-1">pinned <a class="header-anchor" href="#pinned" aria-label="Permalink to “pinned”">​</a></h3><blockquote><p><strong>pinned</strong>: <code>boolean</code></p></blockquote><h3 id="sizes" tabindex="-1">sizes <a class="header-anchor" href="#sizes" aria-label="Permalink to “sizes”">​</a></h3><blockquote><p><strong>sizes</strong>: <code>object</code></p></blockquote><h4 id="sizes-go" tabindex="-1">sizes.go() <a class="header-anchor" href="#sizes-go" aria-label="Permalink to “sizes.go()”">​</a></h4><blockquote><p><strong>go</strong>: (<code>i</code>) =&gt; <code>number</code></p></blockquote><p>Go to a specific index</p><h5 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to “Parameters”">​</a></h5><h6 id="i" tabindex="-1">i <a class="header-anchor" href="#i" aria-label="Permalink to “i”">​</a></h6><p><code>number</code></p><h5 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to “Returns”">​</a></h5><p><code>number</code></p><h4 id="sizes-index" tabindex="-1">sizes.index <a class="header-anchor" href="#sizes-index" aria-label="Permalink to “sizes.index”">​</a></h4><blockquote><p><strong>index</strong>: <code>number</code></p></blockquote><h4 id="sizes-next" tabindex="-1">sizes.next() <a class="header-anchor" href="#sizes-next" aria-label="Permalink to “sizes.next()”">​</a></h4><blockquote><p><strong>next</strong>: (<code>n</code>?) =&gt; <code>number</code></p></blockquote><h5 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to “Parameters”">​</a></h5><h6 id="n" tabindex="-1">n? <a class="header-anchor" href="#n" aria-label="Permalink to “n?”">​</a></h6><p><code>number</code></p><h5 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to “Returns”">​</a></h5><p><code>number</code></p><h4 id="sizes-prev" tabindex="-1">sizes.prev() <a class="header-anchor" href="#sizes-prev" aria-label="Permalink to “sizes.prev()”">​</a></h4><blockquote><p><strong>prev</strong>: (<code>n</code>?) =&gt; <code>number</code></p></blockquote><h5 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to “Parameters”">​</a></h5><h6 id="n-1" tabindex="-1">n? <a class="header-anchor" href="#n-1" aria-label="Permalink to “n?”">​</a></h6><p><code>number</code></p><h5 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to “Returns”">​</a></h5><p><code>number</code></p><h4 id="sizes-state" tabindex="-1">sizes.state <a class="header-anchor" href="#sizes-state" aria-label="Permalink to “sizes.state”">​</a></h4><blockquote><p><strong>state</strong>: <code>number</code></p></blockquote>',61)]))}const u=a(t,[["render",s]]);export{p as __pageData,u as default};
