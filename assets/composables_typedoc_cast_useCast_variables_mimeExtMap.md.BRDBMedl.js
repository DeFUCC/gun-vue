import{_ as a,c as o,o as t,ag as c}from"./chunks/framework.NFQ89pQN.js";const b=JSON.parse('{"title":"Variable: mimeExtMap","description":"","frontmatter":{},"headers":[],"relativePath":"composables/typedoc/cast/useCast/variables/mimeExtMap.md","filePath":"composables/typedoc/cast/useCast/variables/mimeExtMap.md"}'),s={name:"composables/typedoc/cast/useCast/variables/mimeExtMap.md"};function r(d,e,i,m,l,n){return t(),o("div",null,e[0]||(e[0]=[c('<p><a href="./../../../README.html"><strong>Gun-Vue docs v0.25.0</strong></a></p><hr><p><a href="./../../../modules.html">Gun-Vue docs</a> / <a href="./../README.html">cast/useCast</a> / mimeExtMap</p><h1 id="variable-mimeextmap" tabindex="-1">Variable: mimeExtMap <a class="header-anchor" href="#variable-mimeextmap" aria-label="Permalink to “Variable: mimeExtMap”">​</a></h1><blockquote><p><code>const</code> <strong>mimeExtMap</strong>: <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/DeFUCC/gun-vue/blob/dda91efdca1491233e382dfe99b5e445f824d1ea/src/cast/useCast.js#L15" target="_blank" rel="noreferrer">src/cast/useCast.js:15</a></p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to “Type declaration”">​</a></h2><h3 id="video-webm" tabindex="-1">video/webm <a class="header-anchor" href="#video-webm" aria-label="Permalink to “video/webm”">​</a></h3><blockquote><p><strong>video/webm</strong>: <code>string</code> = <code>&quot;webm&quot;</code></p></blockquote><h3 id="video-webm-codecs-h264" tabindex="-1">video/webm;codecs=h264 <a class="header-anchor" href="#video-webm-codecs-h264" aria-label="Permalink to “video/webm;codecs=h264”">​</a></h3><blockquote><p><strong>video/webm;codecs=h264</strong>: <code>string</code> = <code>&quot;mp4&quot;</code></p></blockquote><h3 id="video-x-matroska-codecs-avc1" tabindex="-1">video/x-matroska;codecs=avc1 <a class="header-anchor" href="#video-x-matroska-codecs-avc1" aria-label="Permalink to “video/x-matroska;codecs=avc1”">​</a></h3><blockquote><p><strong>video/x-matroska;codecs=avc1</strong>: <code>string</code> = <code>&quot;mkv&quot;</code></p></blockquote>',13)]))}const h=a(s,[["render",r]]);export{b as __pageData,h as default};
