import{_ as a,c as t,o,ag as r}from"./chunks/framework.DADfZotI.js";const p=JSON.parse('{"title":"Function: useZip()","description":"","frontmatter":{},"headers":[],"relativePath":"composables/typedoc/files/useZip/functions/useZip.md","filePath":"composables/typedoc/files/useZip/functions/useZip.md"}'),d={name:"composables/typedoc/files/useZip/functions/useZip.md"};function i(s,e,n,l,c,h){return o(),t("div",null,e[0]||(e[0]=[r('<p><a href="./../../../README.html"><strong>Gun-Vue docs v0.24.0</strong></a></p><hr><p><a href="./../../../modules.html">Gun-Vue docs</a> / <a href="./../README.html">files/useZip</a> / useZip</p><h1 id="function-usezip" tabindex="-1">Function: useZip() <a class="header-anchor" href="#function-usezip" aria-label="Permalink to &quot;Function: useZip()&quot;">​</a></h1><blockquote><p><strong>useZip</strong>(): <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/DeFUCC/gun-vue/blob/8144d7f58e63ce1c8207eb1b3f84e4f1d52c64ae/src/files/useZip.js#L7" target="_blank" rel="noreferrer">src/files/useZip.js:7</a></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>object</code></p><h3 id="addfile" tabindex="-1">addFile() <a class="header-anchor" href="#addfile" aria-label="Permalink to &quot;addFile()&quot;">​</a></h3><blockquote><p><strong>addFile</strong>: (<code>__namedParameters</code>) =&gt; <code>Promise</code>&lt;<code>string</code>&gt;</p></blockquote><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="namedparameters" tabindex="-1">__namedParameters <a class="header-anchor" href="#namedparameters" aria-label="Permalink to &quot;\\_\\_namedParameters&quot;">​</a></h5><h6 id="file" tabindex="-1">file <a class="header-anchor" href="#file" aria-label="Permalink to &quot;file&quot;">​</a></h6><p><code>any</code></p><h6 id="folder" tabindex="-1">folder? <a class="header-anchor" href="#folder" aria-label="Permalink to &quot;folder?&quot;">​</a></h6><p><code>string</code> = <code>&quot;.&quot;</code></p><h6 id="title" tabindex="-1">title <a class="header-anchor" href="#title" aria-label="Permalink to &quot;title&quot;">​</a></h6><p><code>any</code></p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>string</code>&gt;</p><h3 id="addmd" tabindex="-1">addMd() <a class="header-anchor" href="#addmd" aria-label="Permalink to &quot;addMd()&quot;">​</a></h3><blockquote><p><strong>addMd</strong>: (<code>__namedParameters</code>) =&gt; <code>void</code></p></blockquote><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="namedparameters-1" tabindex="-1">__namedParameters <a class="header-anchor" href="#namedparameters-1" aria-label="Permalink to &quot;\\_\\_namedParameters&quot;">​</a></h5><h6 id="md" tabindex="-1">md <a class="header-anchor" href="#md" aria-label="Permalink to &quot;md&quot;">​</a></h6><p><code>any</code></p><h6 id="title-1" tabindex="-1">title <a class="header-anchor" href="#title-1" aria-label="Permalink to &quot;title&quot;">​</a></h6><p><code>any</code></p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h3 id="downloadzip" tabindex="-1">downloadZip() <a class="header-anchor" href="#downloadzip" aria-label="Permalink to &quot;downloadZip()&quot;">​</a></h3><blockquote><p><strong>downloadZip</strong>: (<code>__namedParameters</code>) =&gt; <code>Promise</code>&lt;<code>boolean</code>&gt;</p></blockquote><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="namedparameters-2" tabindex="-1">__namedParameters <a class="header-anchor" href="#namedparameters-2" aria-label="Permalink to &quot;\\_\\_namedParameters&quot;">​</a></h5><h6 id="title-2" tabindex="-1">title? <a class="header-anchor" href="#title-2" aria-label="Permalink to &quot;title?&quot;">​</a></h6><p><code>string</code> = <code>&quot;&quot;</code></p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><h3 id="zip" tabindex="-1">zip <a class="header-anchor" href="#zip" aria-label="Permalink to &quot;zip&quot;">​</a></h3><blockquote><p><strong>zip</strong>: <code>JSZip</code></p></blockquote><h3 id="zippost" tabindex="-1">zipPost() <a class="header-anchor" href="#zippost" aria-label="Permalink to &quot;zipPost()&quot;">​</a></h3><blockquote><p><strong>zipPost</strong>: (<code>post</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="post" tabindex="-1">post <a class="header-anchor" href="#post" aria-label="Permalink to &quot;post&quot;">​</a></h5><p><code>any</code></p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p>',47)]))}const m=a(d,[["render",i]]);export{p as __pageData,m as default};
