import{_ as a,c as o,o as t,ag as c}from"./chunks/framework.Cn0LGHOD.js";const u=JSON.parse('{"title":"Function: useSpace()","description":"","frontmatter":{},"headers":[],"relativePath":"composables/typedoc/space/useSpace/functions/useSpace.md","filePath":"composables/typedoc/space/useSpace/functions/useSpace.md"}'),r={name:"composables/typedoc/space/useSpace/functions/useSpace.md"};function s(d,e,n,l,h,i){return t(),o("div",null,e[0]||(e[0]=[c('<p><a href="./../../../README.html"><strong>Gun-Vue docs v0.24.0</strong></a></p><hr><p><a href="./../../../modules.html">Gun-Vue docs</a> / <a href="./../README.html">space/useSpace</a> / useSpace</p><h1 id="function-usespace" tabindex="-1">Function: useSpace() <a class="header-anchor" href="#function-usespace" aria-label="Permalink to “Function: useSpace()”">​</a></h1><blockquote><p><strong>useSpace</strong>(<code>__namedParameters</code>): <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/DeFUCC/gun-vue/blob/57f62da7b55ced1e8fd61fd9ecbe7d76988ec33d/src/space/useSpace.js#L10" target="_blank" rel="noreferrer">src/space/useSpace.js:10</a></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to “Parameters”">​</a></h2><h3 id="namedparameters" tabindex="-1">__namedParameters <a class="header-anchor" href="#namedparameters" aria-label="Permalink to “__namedParameters”">​</a></h3><h4 id="randomness" tabindex="-1">randomness? <a class="header-anchor" href="#randomness" aria-label="Permalink to “randomness?”">​</a></h4><p><code>number</code> = <code>0.1</code></p><h4 id="timeout" tabindex="-1">TIMEOUT? <a class="header-anchor" href="#timeout" aria-label="Permalink to “TIMEOUT?”">​</a></h4><p><code>number</code> = <code>10000</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to “Returns”">​</a></h2><p><code>object</code></p><h3 id="allguests" tabindex="-1">allGuests <a class="header-anchor" href="#allguests" aria-label="Permalink to “allGuests”">​</a></h3><blockquote><p><strong>allGuests</strong>: <code>object</code></p></blockquote><h3 id="area" tabindex="-1">area <a class="header-anchor" href="#area" aria-label="Permalink to “area”">​</a></h3><blockquote><p><strong>area</strong>: <code>Ref</code>&lt;<code>any</code>, <code>any</code>&gt;</p></blockquote><h3 id="guestcount" tabindex="-1">guestCount <a class="header-anchor" href="#guestcount" aria-label="Permalink to “guestCount”">​</a></h3><blockquote><p><strong>guestCount</strong>: <code>ComputedRef</code>&lt;<code>number</code>&gt;</p></blockquote><h3 id="guests" tabindex="-1">guests <a class="header-anchor" href="#guests" aria-label="Permalink to “guests”">​</a></h3><blockquote><p><strong>guests</strong>: <code>ComputedRef</code>&lt;{}&gt;</p></blockquote><h3 id="height" tabindex="-1">height <a class="header-anchor" href="#height" aria-label="Permalink to “height”">​</a></h3><blockquote><p><strong>height</strong>: <code>ShallowRef</code>&lt;<code>number</code>, <code>number</code>&gt;</p></blockquote><h3 id="join" tabindex="-1">join() <a class="header-anchor" href="#join" aria-label="Permalink to “join()”">​</a></h3><blockquote><p><strong>join</strong>: () =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to “Returns”">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h3 id="links" tabindex="-1">links <a class="header-anchor" href="#links" aria-label="Permalink to “links”">​</a></h3><blockquote><p><strong>links</strong>: <code>object</code></p></blockquote><h3 id="place" tabindex="-1">place() <a class="header-anchor" href="#place" aria-label="Permalink to “place()”">​</a></h3><blockquote><p><strong>place</strong>: (<code>__namedParameters</code>) =&gt; <code>void</code></p></blockquote><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to “Parameters”">​</a></h4><h5 id="namedparameters-1" tabindex="-1">__namedParameters <a class="header-anchor" href="#namedparameters-1" aria-label="Permalink to “__namedParameters”">​</a></h5><h6 id="x" tabindex="-1">x? <a class="header-anchor" href="#x" aria-label="Permalink to “x?”">​</a></h6><p><code>number</code> = <code>mouse.x</code></p><h6 id="y" tabindex="-1">y? <a class="header-anchor" href="#y" aria-label="Permalink to “y?”">​</a></h6><p><code>number</code> = <code>mouse.y</code></p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to “Returns”">​</a></h4><p><code>void</code></p><h3 id="plane" tabindex="-1">plane <a class="header-anchor" href="#plane" aria-label="Permalink to “plane”">​</a></h3><blockquote><p><strong>plane</strong>: <code>Ref</code>&lt;<code>any</code>, <code>any</code>&gt;</p></blockquote><h3 id="pos" tabindex="-1">pos <a class="header-anchor" href="#pos" aria-label="Permalink to “pos”">​</a></h3><blockquote><p><strong>pos</strong>: <code>Reactive</code>&lt;<code>number</code>[]&gt;</p></blockquote><h3 id="setstatus" tabindex="-1">setStatus() <a class="header-anchor" href="#setstatus" aria-label="Permalink to “setStatus()”">​</a></h3><blockquote><p><strong>setStatus</strong>: (<code>status</code>) =&gt; <code>void</code></p></blockquote><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to “Parameters”">​</a></h4><h5 id="status" tabindex="-1">status <a class="header-anchor" href="#status" aria-label="Permalink to “status”">​</a></h5><p><code>string</code> = <code>&quot;&quot;</code></p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to “Returns”">​</a></h4><p><code>void</code></p><h3 id="space" tabindex="-1">space <a class="header-anchor" href="#space" aria-label="Permalink to “space”">​</a></h3><blockquote><p><strong>space</strong>: <code>object</code></p></blockquote><h4 id="space-cert" tabindex="-1">space.cert <a class="header-anchor" href="#space-cert" aria-label="Permalink to “space.cert”">​</a></h4><blockquote><p><strong>cert</strong>: <code>any</code></p></blockquote><h4 id="space-db" tabindex="-1">space.db <a class="header-anchor" href="#space-db" aria-label="Permalink to “space.db”">​</a></h4><blockquote><p><strong>db</strong>: <code>IGunChain</code>&lt;<code>any</code>, <code>any</code>, <code>any</code>, <code>&quot;space&quot;</code>&gt;</p></blockquote><h4 id="space-joined" tabindex="-1">space.joined <a class="header-anchor" href="#space-joined" aria-label="Permalink to “space.joined”">​</a></h4><blockquote><p><strong>joined</strong>: <code>boolean</code> = <code>false</code></p></blockquote><h4 id="space-my" tabindex="-1">space.my <a class="header-anchor" href="#space-my" aria-label="Permalink to “space.my”">​</a></h4><blockquote><p><strong>my</strong>: <code>object</code></p></blockquote><h4 id="space-my-mouse" tabindex="-1">space.my.mouse <a class="header-anchor" href="#space-my-mouse" aria-label="Permalink to “space.my.mouse”">​</a></h4><blockquote><p><strong>mouse</strong>: <code>object</code></p></blockquote><h4 id="space-my-mouse-x" tabindex="-1">space.my.mouse.x <a class="header-anchor" href="#space-my-mouse-x" aria-label="Permalink to “space.my.mouse.x”">​</a></h4><blockquote><p><strong>x</strong>: <code>number</code> = <code>mouse.x</code></p></blockquote><h4 id="space-my-mouse-y" tabindex="-1">space.my.mouse.y <a class="header-anchor" href="#space-my-mouse-y" aria-label="Permalink to “space.my.mouse.y”">​</a></h4><blockquote><p><strong>y</strong>: <code>number</code> = <code>mouse.y</code></p></blockquote><h4 id="space-my-pos" tabindex="-1">space.my.pos <a class="header-anchor" href="#space-my-pos" aria-label="Permalink to “space.my.pos”">​</a></h4><blockquote><p><strong>pos</strong>: <code>any</code> = <code>null</code></p></blockquote><h4 id="space-title" tabindex="-1">space.title <a class="header-anchor" href="#space-title" aria-label="Permalink to “space.title”">​</a></h4><blockquote><p><strong>title</strong>: <code>string</code> = <code>&quot;space&quot;</code></p></blockquote><h3 id="width" tabindex="-1">width <a class="header-anchor" href="#width" aria-label="Permalink to “width”">​</a></h3><blockquote><p><strong>width</strong>: <code>ShallowRef</code>&lt;<code>number</code>, <code>number</code>&gt;</p></blockquote><h3 id="zoom" tabindex="-1">zoom <a class="header-anchor" href="#zoom" aria-label="Permalink to “zoom”">​</a></h3><blockquote><p><strong>zoom</strong>: <code>Ref</code>&lt;<code>number</code>, <code>number</code>&gt;</p></blockquote>',75)]))}const b=a(r,[["render",s]]);export{u as __pageData,b as default};
