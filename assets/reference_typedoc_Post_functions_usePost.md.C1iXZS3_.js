import{_ as a,c as o,o as t,ag as s}from"./chunks/framework.BfubPTv1.js";const u=JSON.parse('{"title":"Function: usePost()","description":"","frontmatter":{},"headers":[],"relativePath":"reference/typedoc/Post/functions/usePost.md","filePath":"reference/typedoc/Post/functions/usePost.md"}'),n={name:"reference/typedoc/Post/functions/usePost.md"};function i(r,e,d,l,h,c){return t(),o("div",null,e[0]||(e[0]=[s('<p><a href="./../../README.html"><strong>Gun-Vue docs v0.22.3</strong></a></p><hr><p><a href="./../../modules.html">Gun-Vue docs</a> / <a href="./../README.html">Post</a> / usePost</p><h1 id="function-usepost" tabindex="-1">Function: usePost() <a class="header-anchor" href="#function-usepost" aria-label="Permalink to &quot;Function: usePost()&quot;">​</a></h1><blockquote><p><strong>usePost</strong>(<code>options</code>): <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/DeFUCC/gun-vue/blob/a15ff19d1ceb4baff23b32a5f715e8bca50fce25/src/post/usePost.js#L51" target="_blank" rel="noreferrer">src/post/usePost.js:51</a></p><p>An interface to manage a post</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="options" tabindex="-1">options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options&quot;">​</a></h3><h4 id="hash" tabindex="-1">hash <a class="header-anchor" href="#hash" aria-label="Permalink to &quot;hash&quot;">​</a></h4><p><code>string</code> = <code>&quot;&quot;</code></p><h4 id="loadmedia" tabindex="-1">loadMedia? <a class="header-anchor" href="#loadmedia" aria-label="Permalink to &quot;loadMedia?&quot;">​</a></h4><p><code>boolean</code> = <code>true</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>object</code></p><h3 id="download" tabindex="-1">download <a class="header-anchor" href="#download" aria-label="Permalink to &quot;download&quot;">​</a></h3><blockquote><p><strong>download</strong>: <code>Function</code></p></blockquote><h3 id="downloading" tabindex="-1">downloading <a class="header-anchor" href="#downloading" aria-label="Permalink to &quot;downloading&quot;">​</a></h3><blockquote><p><strong>downloading</strong>: <code>Ref</code>&lt;<code>boolean</code>, <code>boolean</code>&gt;</p></blockquote><h3 id="post" tabindex="-1">post <a class="header-anchor" href="#post" aria-label="Permalink to &quot;post&quot;">​</a></h3><blockquote><p><strong>post</strong>: <a href="./../interfaces/PostContent.html"><code>PostContent</code></a></p></blockquote><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> usePost</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ tag: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tag&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, hash: postHash })</span></span></code></pre></div>',23)]))}const b=a(n,[["render",i]]);export{u as __pageData,b as default};
