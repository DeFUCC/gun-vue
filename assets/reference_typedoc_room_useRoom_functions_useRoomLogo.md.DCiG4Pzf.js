import{_ as e,c as a,o as r,ag as t}from"./chunks/framework.Cf-rbDpz.js";const m=JSON.parse('{"title":"Function: useRoomLogo()","description":"","frontmatter":{},"headers":[],"relativePath":"reference/typedoc/room/useRoom/functions/useRoomLogo.md","filePath":"reference/typedoc/room/useRoom/functions/useRoomLogo.md"}'),n={name:"reference/typedoc/room/useRoom/functions/useRoomLogo.md"};function c(s,o,d,l,u,i){return r(),a("div",null,o[0]||(o[0]=[t('<p><a href="./../../../README.html"><strong>Gun-Vue docs v0.24.0</strong></a></p><hr><p><a href="./../../../modules.html">Gun-Vue docs</a> / <a href="./../README.html">room/useRoom</a> / useRoomLogo</p><h1 id="function-useroomlogo" tabindex="-1">Function: useRoomLogo() <a class="header-anchor" href="#function-useroomlogo" aria-label="Permalink to &quot;Function: useRoomLogo()&quot;">​</a></h1><blockquote><p><strong>useRoomLogo</strong>(<code>pub</code>): <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/DeFUCC/gun-vue/blob/940ab42dc2fae03046e6faa1dfb8682408cbb86f/src/room/useRoom.js#L103" target="_blank" rel="noreferrer">src/room/useRoom.js:103</a></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="pub" tabindex="-1">pub <a class="header-anchor" href="#pub" aria-label="Permalink to &quot;pub&quot;">​</a></h3><p><code>any</code> = <code>currentRoom.pub</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>object</code></p><h3 id="logo" tabindex="-1">logo <a class="header-anchor" href="#logo" aria-label="Permalink to &quot;logo&quot;">​</a></h3><blockquote><p><strong>logo</strong>: <code>Ref</code>&lt;<code>any</code>, <code>any</code>&gt;</p></blockquote><h3 id="removelogo" tabindex="-1">removeLogo() <a class="header-anchor" href="#removelogo" aria-label="Permalink to &quot;removeLogo()&quot;">​</a></h3><blockquote><p><strong>removeLogo</strong>: () =&gt; <code>void</code></p></blockquote><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h3 id="uploadlogo" tabindex="-1">uploadLogo() <a class="header-anchor" href="#uploadlogo" aria-label="Permalink to &quot;uploadLogo()&quot;">​</a></h3><blockquote><p><strong>uploadLogo</strong>: (<code>file</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="file" tabindex="-1">file <a class="header-anchor" href="#file" aria-label="Permalink to &quot;file&quot;">​</a></h5><p><code>any</code></p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p>',24)]))}const p=e(n,[["render",c]]);export{m as __pageData,p as default};
