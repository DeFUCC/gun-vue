import{_ as a,c as t,o,ag as r}from"./chunks/framework.DRT7JCoy.js";const p=JSON.parse('{"title":"Function: useComputedProject()","description":"","frontmatter":{},"headers":[],"relativePath":"reference/typedoc/useProject/functions/useComputedProject.md","filePath":"reference/typedoc/useProject/functions/useComputedProject.md"}'),c={name:"reference/typedoc/useProject/functions/useComputedProject.md"};function d(s,e,u,n,i,l){return o(),t("div",null,e[0]||(e[0]=[r('<p><a href="./../../README.html"><strong>Gun-Vue docs v0.22.0</strong></a></p><hr><p><a href="./../../modules.html">Gun-Vue docs</a> / <a href="./../README.html">useProject</a> / useComputedProject</p><h1 id="function-usecomputedproject" tabindex="-1">Function: useComputedProject() <a class="header-anchor" href="#function-usecomputedproject" aria-label="Permalink to &quot;Function: useComputedProject()&quot;">​</a></h1><blockquote><p><strong>useComputedProject</strong>(<code>path</code>?): <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/DeFUCC/gun-vue/blob/f7432117de4c02c25fca98d3609ea861e8910257/src/project/useProject.js#L159" target="_blank" rel="noreferrer">src/project/useProject.js:159</a></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="path" tabindex="-1">path? <a class="header-anchor" href="#path" aria-label="Permalink to &quot;path?&quot;">​</a></h3><p><code>Ref</code>&lt;<code>string</code>, <code>string</code>&gt; = <code>...</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>object</code></p><h3 id="project" tabindex="-1">project <a class="header-anchor" href="#project" aria-label="Permalink to &quot;project&quot;">​</a></h3><blockquote><p><strong>project</strong>: <code>ComputedRef</code>&lt;<a href="./../interfaces/ProjectItem.html"><code>ProjectItem</code></a>&gt;</p></blockquote><h3 id="updatecover" tabindex="-1">updateCover() <a class="header-anchor" href="#updatecover" aria-label="Permalink to &quot;updateCover()&quot;">​</a></h3><blockquote><p><strong>updateCover</strong>: (<code>image</code>) =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="image" tabindex="-1">image <a class="header-anchor" href="#image" aria-label="Permalink to &quot;image&quot;">​</a></h5><p><code>string</code></p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h3 id="updatefield" tabindex="-1">updateField() <a class="header-anchor" href="#updatefield" aria-label="Permalink to &quot;updateField()&quot;">​</a></h3><blockquote><p><strong>updateField</strong>: (<code>field</code>, <code>value</code>) =&gt; <code>void</code></p></blockquote><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="field" tabindex="-1">field <a class="header-anchor" href="#field" aria-label="Permalink to &quot;field&quot;">​</a></h5><p><code>string</code></p><h5 id="value" tabindex="-1">value <a class="header-anchor" href="#value" aria-label="Permalink to &quot;value&quot;">​</a></h5><p><code>string</code></p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p>',29)]))}const m=a(c,[["render",d]]);export{p as __pageData,m as default};
