import{_ as s,c as t,a2 as n,o as i}from"./chunks/framework.D0CZGv0r.js";const u=JSON.parse('{"title":"Gun DB + Vue UI composables collection","description":"","frontmatter":{},"headers":[],"relativePath":"packages/composables.md","filePath":"packages/composables.md","pages":["CHANGELOG","basics/video","basics/video/2021/03-02","basics/video/2021/11-19","basics/video/2021/11-27","basics/video/2022/01-12","basics/video/2022/01-22","basics/video/2022/02-09","basics/video/2022/03-26","basics/video/2022/04-13","basics/video/2022/07-08","basics/video/2022/07-21","basics/video/2022/07-23","basics/video/2022/08-01","basics/video/2022/08-05","basics/video/2023/02-03","basics/video/2023/03-06","basics/video/2023/04-15","basics/video/2023/04-17","basics/video/2023/04-21","basics/video/2023/04-27","basics/video/2023/05-02","basics/what-is","docs/README","docs/globals","explanations/crdt","explanations/qna","explanations/stack","how-to/use-components","index","packages/components","packages/composables","packages/","packages/relay","reference/components","reference/","reference/typedoc/Account/README","reference/typedoc/Account/functions/setPetname","reference/typedoc/Account/functions/useAccount","reference/typedoc/Account/interfaces/Account","reference/typedoc/Account/interfaces/Profile","reference/typedoc/Auth/README","reference/typedoc/Auth/functions/hasPass","reference/typedoc/Auth/functions/parseLink","reference/typedoc/Auth/functions/useAuth","reference/typedoc/Auth/functions/useAuthLink","reference/typedoc/Auth/interfaces/Auth","reference/typedoc/Auth/interfaces/Safe","reference/typedoc/Auth/variables/pass","reference/typedoc/Background/README","reference/typedoc/Background/functions/useBackground","reference/typedoc/Background/interfaces/BackgroundOptions","reference/typedoc/Cast/README","reference/typedoc/Cast/functions/download","reference/typedoc/Cast/functions/ensureDevicesListPermissions","reference/typedoc/Cast/functions/getFilename","reference/typedoc/Cast/functions/getSupportedMimeTypes","reference/typedoc/Cast/functions/useRecording","reference/typedoc/Cast/type-aliases/MimeTypes","reference/typedoc/Cast/variables/cameras","reference/typedoc/Cast/variables/cast","reference/typedoc/Cast/variables/currentCamera","reference/typedoc/Cast/variables/currentMic","reference/typedoc/Cast/variables/devices","reference/typedoc/Cast/variables/fileNames","reference/typedoc/Cast/variables/microphones","reference/typedoc/Cast/variables/mimeExtMap","reference/typedoc/Cast/variables/mimeType","reference/typedoc/Cast/variables/recordCamera","reference/typedoc/Cast/variables/recordingName","reference/typedoc/Certificates/README","reference/typedoc/Certificates/functions/generateCerts","reference/typedoc/Certificates/functions/issueCert","reference/typedoc/Certificates/interfaces/CertOptions","reference/typedoc/Certificates/interfaces/Policy","reference/typedoc/Chat/README","reference/typedoc/Chat/functions/useChat","reference/typedoc/Chat/interfaces/Message","reference/typedoc/Chat/type-aliases/MessageMap","reference/typedoc/Color/README","reference/typedoc/Color/functions/useColor","reference/typedoc/Color/type-aliases/Palette","reference/typedoc/Crypto/README","reference/typedoc/Crypto/functions/decFrom","reference/typedoc/Crypto/functions/encFor","reference/typedoc/Crypto/functions/getShortHash","reference/typedoc/Crypto/functions/hashObj","reference/typedoc/Crypto/functions/hashText","reference/typedoc/Crypto/functions/isHash","reference/typedoc/Crypto/functions/safeHash","reference/typedoc/Crypto/functions/safeJSONParse","reference/typedoc/Crypto/functions/unsafeHash","reference/typedoc/Crypto/interfaces/Entity","reference/typedoc/Dict/README","reference/typedoc/Dict/functions/letterFilter","reference/typedoc/Dict/functions/parseHashLink","reference/typedoc/Dict/functions/renderStress","reference/typedoc/Dict/functions/useDefs","reference/typedoc/Dict/functions/useDictAuthors","reference/typedoc/Dict/functions/useDictLangs","reference/typedoc/Dict/functions/useDictRecordsBy","reference/typedoc/Dict/functions/useDictRecordsFor","reference/typedoc/Dict/functions/useWord","reference/typedoc/Dict/functions/useWords","reference/typedoc/Dict/interfaces/DictRecord","reference/typedoc/Dict/variables/dictLang","reference/typedoc/Dict/variables/dictRecord","reference/typedoc/Draw/README","reference/typedoc/Draw/functions/loadCanvas","reference/typedoc/Draw/functions/updateState","reference/typedoc/Draw/functions/useDraw","reference/typedoc/Draw/variables/brush","reference/typedoc/Draw/variables/drauu","reference/typedoc/Draw/variables/drauuOptions","reference/typedoc/Draw/variables/draw","reference/typedoc/File/README","reference/typedoc/File/functions/base64Extension","reference/typedoc/File/functions/base64FileType","reference/typedoc/File/functions/base64MimeType","reference/typedoc/File/functions/detectMimeType","reference/typedoc/File/functions/downloadFile","reference/typedoc/File/functions/uploadText","reference/typedoc/File/functions/usePictureUpload","reference/typedoc/File/interfaces/PictureUploadData","reference/typedoc/File/interfaces/PictureUploadOptions","reference/typedoc/File/interfaces/UploadState","reference/typedoc/Gift/README","reference/typedoc/Gift/functions/giftState","reference/typedoc/Gift/functions/removeEmptyKeys","reference/typedoc/Gift/functions/useGift","reference/typedoc/Gift/functions/useNewGift","reference/typedoc/Gift/interfaces/Gift","reference/typedoc/Gifts/README","reference/typedoc/Gifts/functions/useGifts","reference/typedoc/Gifts/functions/useMyGifts","reference/typedoc/Gifts/functions/useProjectGifts","reference/typedoc/Gifts/type-aliases/GiftList","reference/typedoc/Guests/README","reference/typedoc/Guests/functions/useGuests","reference/typedoc/Guests/interfaces/Guest","reference/typedoc/Gun/README","reference/typedoc/Gun/functions/useGun","reference/typedoc/Gun/functions/useGunMap","reference/typedoc/Gun/functions/useGunPath","reference/typedoc/Gun/functions/useGunSecondary","reference/typedoc/Gun/variables/SEA","reference/typedoc/Gun/variables/genUUID","reference/typedoc/Gun/variables/soul","reference/typedoc/GunWorker/README","reference/typedoc/GunWorker/variables/default","reference/typedoc/Languages/README","reference/typedoc/Languages/variables/langParts","reference/typedoc/Languages/variables/languages","reference/typedoc/Mates/README","reference/typedoc/Mates/functions/getFirstEmoji","reference/typedoc/Mates/functions/isEmoji","reference/typedoc/Mates/functions/useMate","reference/typedoc/Mates/functions/useMates","reference/typedoc/Mates/interfaces/Mate","reference/typedoc/Mates/interfaces/useMateReturn","reference/typedoc/Md/README","reference/typedoc/Md/functions/createMd","reference/typedoc/Md/functions/parseMd","reference/typedoc/Md/functions/useMd","reference/typedoc/Md/interfaces/MdContent","reference/typedoc/Mouse/README","reference/typedoc/Mouse/functions/useSvgMouse","reference/typedoc/Mouse/interfaces/Mouse","reference/typedoc/Mouse/interfaces/useMouse","reference/typedoc/Post/README","reference/typedoc/Post/functions/addPost","reference/typedoc/Post/functions/downloadPost","reference/typedoc/Post/functions/loadFromHash","reference/typedoc/Post/functions/parsePost","reference/typedoc/Post/functions/usePost","reference/typedoc/Post/functions/usePostTimestamp","reference/typedoc/Post/interfaces/Post","reference/typedoc/Post/interfaces/PostContent","reference/typedoc/Posts/README","reference/typedoc/Posts/functions/downloadFeed","reference/typedoc/Posts/functions/uploadFeed","reference/typedoc/Posts/functions/usePosts","reference/typedoc/Posts/type-aliases/PostList","reference/typedoc/PrivateChat/README","reference/typedoc/PrivateChat/functions/usePrivateChat","reference/typedoc/PrivateChat/functions/usePrivateChatCount","reference/typedoc/PrivateChat/functions/usePrivateChatList","reference/typedoc/PrivateChat/interfaces/Chat","reference/typedoc/PrivateChat/interfaces/Message","reference/typedoc/Projects/README","reference/typedoc/Projects/functions/countProjects","reference/typedoc/Projects/functions/useProjects","reference/typedoc/QR/README","reference/typedoc/QR/functions/useQR","reference/typedoc/README","reference/typedoc/Reaction/README","reference/typedoc/Reaction/functions/reactToPost","reference/typedoc/Reaction/functions/useReaction","reference/typedoc/Reaction/interfaces/ReactionVector","reference/typedoc/Reaction/type-aliases/Reaction","reference/typedoc/Reactions/README","reference/typedoc/Reactions/functions/countRating","reference/typedoc/Reactions/functions/useReactions","reference/typedoc/Reactions/functions/useUserPosts","reference/typedoc/Reactions/type-aliases/AuthorList","reference/typedoc/Relay/README","reference/typedoc/Relay/functions/resetPeer","reference/typedoc/Relay/functions/setPeer","reference/typedoc/Relay/functions/useRelay","reference/typedoc/Relay/interfaces/Relay","reference/typedoc/Relay/variables/relay","reference/typedoc/Relays/README","reference/typedoc/Relays/functions/loadRelays","reference/typedoc/Relays/functions/useRelays","reference/typedoc/Relays/interfaces/Relay","reference/typedoc/Relays/type-aliases/Relays","reference/typedoc/Room/README","reference/typedoc/Room/functions/addPersonal","reference/typedoc/Room/functions/createRoom","reference/typedoc/Room/functions/enterRoom","reference/typedoc/Room/functions/joinRoom","reference/typedoc/Room/functions/leaveRoom","reference/typedoc/Room/functions/listPersonal","reference/typedoc/Room/functions/recreateRoom","reference/typedoc/Room/functions/submitRoom","reference/typedoc/Room/functions/updateRoomProfile","reference/typedoc/Room/functions/useRoom","reference/typedoc/Room/functions/useRoomLogo","reference/typedoc/Room/functions/useRooms","reference/typedoc/Room/interfaces/CurrentRoom","reference/typedoc/Room/variables/currentRoom","reference/typedoc/Space/README","reference/typedoc/Space/functions/useSpace","reference/typedoc/Space/interfaces/Arrow","reference/typedoc/Space/interfaces/Pos","reference/typedoc/Space/interfaces/SpaceGuest","reference/typedoc/Tags/README","reference/typedoc/Tags/functions/listPersonalTag","reference/typedoc/Tags/functions/useTagList","reference/typedoc/Theme/README","reference/typedoc/Theme/variables/theme","reference/typedoc/Torrent/README","reference/typedoc/Torrent/functions/downloadTorrent","reference/typedoc/Torrent/functions/uploadTorrent","reference/typedoc/User/README","reference/typedoc/User/functions/addProfileField","reference/typedoc/User/functions/auth","reference/typedoc/User/functions/isMine","reference/typedoc/User/functions/isPair","reference/typedoc/User/functions/leave","reference/typedoc/User/functions/updateProfile","reference/typedoc/User/functions/useUser","reference/typedoc/User/interfaces/User","reference/typedoc/User/variables/selectedUser","reference/typedoc/User/variables/user","reference/typedoc/Zip/README","reference/typedoc/Zip/functions/useZip","reference/typedoc/Zip/interfaces/MdContent","reference/typedoc/modules","reference/typedoc/useProject/README","reference/typedoc/useProject/functions/removeProject","reference/typedoc/useProject/functions/updateProjectField","reference/typedoc/useProject/functions/useComputedProject","reference/typedoc/useProject/functions/useNewProject","reference/typedoc/useProject/functions/useProject","reference/typedoc/useProject/interfaces/ProjectItem","reference/typedoc/useProject/type-aliases/ProjectType","reference/typedoc/user/useAvatar/README","reference/typedoc/user/useAvatar/functions/useAvatar","reference/typedoc/user/useAvatar/functions/useUserAvatar","reference/typedoc/user/useAvatar/interfaces/UserAvatarReturn","reference/typedoc/user/useAvatar/type-aliases/MaybeRefOrGetter","tutorials/first-app","tutorials/getting-started","tutorials/vue-app"]}'),r={name:"packages/composables.md"};function a(o,e,c,p,l,d){return i(),t("div",null,e[0]||(e[0]=[n(`<h1 id="gun-db-vue-ui-composables-collection" tabindex="-1">Gun DB + Vue UI composables collection <a class="header-anchor" href="#gun-db-vue-ui-composables-collection" aria-label="Permalink to &quot;Gun DB + Vue UI composables collection&quot;">​</a></h1><p>A Composition API <code>use</code> functions set for Gun.js and Vue 3 reactivity system</p><p><img src="https://gun-vue.js.org/media/svg/composables.svg" alt="@gun-vue composables logo"></p><p><a href="https://gun-vue.js.org" target="_blank" rel="noreferrer">gun-vue.js.org</a></p><p>It&#39;s just the beginning and not all the functions are reliably implemented yet. So you&#39;re welcome to collaborate on existing and new features of the library.</p><ul><li><strong>User</strong> - the <code>gun.user()</code> system management</li><li><strong>Account</strong> - user profile interface</li><li><strong>Color</strong> - the <code>color-hash</code> interface to generate colors for hashes and pubs</li><li><strong>Crypto</strong> - the main cryptographic primitives like e2e encrypted messaging and more</li><li><strong>Date Tree</strong> - the very performant concept of Date Tree graphs from <a href="https://github.com/diatche/gun-util#DateTree" target="_blank" rel="noreferrer">gun-util</a> made reactive and easy to use</li><li><strong>File</strong> - some bindings to manage file uploads and downloads</li><li><strong>Hash</strong> - everything you need to hash data and work with the hashes in a reliable way (i.e. URL-safe conversion)</li><li><strong>Mouse</strong> - some basic bindings to reliably locate mouse pointer in an SVG - may be useful for many online games</li><li><strong>Password</strong> - some elaborations on reimagining password system in a p2p graph environment</li><li><strong>Relay</strong> - Gun relay peer connection monitoring</li><li><strong>Room</strong> - private signed collaborative spaces with a certificate system for access management. (TBD)</li><li><strong>Space</strong> - a simple demo of showing working with private user data in a shared space</li><li><strong>Posts</strong> - hashed immutable data in the root of the db as a fun experiment, but with deep observations about freedom of speach and ways to explore the vastness of the public graph space available with Gun</li><li><strong>Chat</strong> - basic public chat</li><li><strong>Rooms</strong> - cryptographic data collections</li><li><strong>Dictionary</strong> - we find ourselves in great power if we have verified concepts to collaborate with</li></ul><p>... and more!</p><p><strong>And there&#39;s more!</strong></p><p><a href="https://gun-vue.js.org/docs" target="_blank" rel="noreferrer">READ FULL DOCUMENTATION ONLINE</a></p><h2 id="how-to-use" tabindex="-1">How to use <a class="header-anchor" href="#how-to-use" aria-label="Permalink to &quot;How to use&quot;">​</a></h2><ol><li>Install the library:</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @gun-vue/composables</span></span></code></pre></div><ol start="2"><li>Import any of the functions you need:</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useAccount } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@gun-vue/composables&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><ol start="3"><li>Instantiate the function inside your Vue SFC</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">account</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">auth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">leave</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useAccount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><ol start="4"><li>Use the reactive state in your template to drive the component:</li></ol><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> v-for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;(data,field) in account.profile&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> :key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;field&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	{{ field }} - {{ data }}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h4 id="ssg-environment-notice-nuxt-vitepress-etc" tabindex="-1">SSG environment notice (Nuxt, Vitepress etc.) <a class="header-anchor" href="#ssg-environment-notice-nuxt-vitepress-etc" aria-label="Permalink to &quot;SSG environment notice (Nuxt, Vitepress etc.)&quot;">​</a></h4><p>Gun-Vue is client-side only and it may throw errors being executed during the SSG/SSR build process. One way to deal with it is to make the your GUN-enabled components asynchronous.</p><h3 id="_1-make-your-component-async" tabindex="-1">1. Make your component async <a class="header-anchor" href="#_1-make-your-component-async" aria-label="Permalink to &quot;1. Make your component async&quot;">​</a></h3><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">useAccount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@gun-vue/composables&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">account</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useAccount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;{{ account.profile?.name }}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="_2-put-it-to-load-only-on-client-side" tabindex="-1">2. Put it to load only on client side. <a class="header-anchor" href="#_2-put-it-to-load-only-on-client-side" aria-label="Permalink to &quot;2. Put it to load only on client side.&quot;">​</a></h3><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">ClientOnly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Suspense</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		&lt;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">YourComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Suspense</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">ClientOnly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>This should prevent any Gun-Vue related code from running during build stage.</p><ul><li>[ ] Refactor the code to be more useable and tree-shakeable in SSG environment. Help needed!</li></ul><p><img src="https://gun-vue.js.org/composables/arkit.svg" alt=""></p>`,27)]))}const h=s(r,[["render",a]]);export{u as __pageData,h as default};
