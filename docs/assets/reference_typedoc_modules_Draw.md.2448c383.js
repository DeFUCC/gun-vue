import{_ as e,o as t,c as d,X as o}from"./chunks/framework.088f8093.js";const b=JSON.parse('{"title":"Module: Draw","description":"","frontmatter":{},"headers":[],"relativePath":"reference/typedoc/modules/Draw.md","filePath":"reference/typedoc/modules/Draw.md","pages":["CHANGELOG","basics/video","basics/video/2021/03-02","basics/video/2021/11-19","basics/video/2021/11-27","basics/video/2022/01-12","basics/video/2022/01-22","basics/video/2022/02-09","basics/video/2022/03-26","basics/video/2022/04-13","basics/video/2022/07-08","basics/video/2022/07-21","basics/video/2022/07-23","basics/video/2022/08-01","basics/video/2022/08-05","basics/video/2023/02-03","basics/video/2023/03-06","basics/video/2023/04-15","basics/video/2023/04-17","basics/video/2023/04-21","basics/video/2023/04-27","basics/video/2023/05-02","basics/what-is","explanations/crdt","explanations/qna","explanations/stack","how-to/use-components","index","packages/components","packages/composables","packages/","reference/components","reference/","reference/typedoc/README","reference/typedoc/interfaces/Account.Account","reference/typedoc/interfaces/Account.Profile","reference/typedoc/interfaces/Auth.Auth","reference/typedoc/interfaces/Auth.useAuth","reference/typedoc/interfaces/Certificates.CertOptions","reference/typedoc/interfaces/Certificates.Policy","reference/typedoc/interfaces/Chat.Message","reference/typedoc/interfaces/Crypto.Entity","reference/typedoc/interfaces/Dict.DictRecord","reference/typedoc/interfaces/File.PictureUploadData","reference/typedoc/interfaces/File.PictureUploadOptions","reference/typedoc/interfaces/File.UploadState","reference/typedoc/interfaces/Gift.Gift","reference/typedoc/interfaces/Gifts.GiftList","reference/typedoc/interfaces/Guests.Guest","reference/typedoc/interfaces/Mates.Mate","reference/typedoc/interfaces/Md.MdContent","reference/typedoc/interfaces/Mouse.Mouse","reference/typedoc/interfaces/Mouse.useMouse","reference/typedoc/interfaces/Post.Post","reference/typedoc/interfaces/Post.PostContent","reference/typedoc/interfaces/PrivateChat.Chat","reference/typedoc/interfaces/Project.ProjectItem","reference/typedoc/interfaces/Reaction.Reaction","reference/typedoc/interfaces/Reaction.ReactionVector","reference/typedoc/interfaces/Reactions.AuthorList","reference/typedoc/interfaces/Relay.Relay","reference/typedoc/interfaces/Space.Arrow","reference/typedoc/interfaces/Space.Pos","reference/typedoc/interfaces/Space.SpaceGuest","reference/typedoc/interfaces/User.User","reference/typedoc/interfaces/room_useRoom.CurrentRoom","reference/typedoc/modules","reference/typedoc/modules/Account","reference/typedoc/modules/Auth","reference/typedoc/modules/Background","reference/typedoc/modules/Cast","reference/typedoc/modules/Certificates","reference/typedoc/modules/Chat","reference/typedoc/modules/Color","reference/typedoc/modules/Crypto","reference/typedoc/modules/Dict","reference/typedoc/modules/Draw","reference/typedoc/modules/File","reference/typedoc/modules/Gift","reference/typedoc/modules/Gifts","reference/typedoc/modules/Guests","reference/typedoc/modules/Gun","reference/typedoc/modules/GunWorker","reference/typedoc/modules/Languages","reference/typedoc/modules/Mates","reference/typedoc/modules/Md","reference/typedoc/modules/Mouse","reference/typedoc/modules/Post","reference/typedoc/modules/Posts","reference/typedoc/modules/PrivateChat","reference/typedoc/modules/Project","reference/typedoc/modules/Projects","reference/typedoc/modules/QR","reference/typedoc/modules/Reaction","reference/typedoc/modules/Reactions","reference/typedoc/modules/Relay","reference/typedoc/modules/Relays","reference/typedoc/modules/Room","reference/typedoc/modules/Space","reference/typedoc/modules/Tags","reference/typedoc/modules/Theme","reference/typedoc/modules/Torrent","reference/typedoc/modules/User","reference/typedoc/modules/Zip","reference/typedoc/modules/room_useRoom","reference/typedoc/modules/useProject","reference/typedoc/modules/user_useAvatar","tutorials/first-app","tutorials/getting-started","tutorials/vue-app"]}'),a={name:"reference/typedoc/modules/Draw.md"},r=o('<p><a href="./../README.html">Gun-Vue docs - v0.18.1</a> / <a href="./../modules.html">Exports</a> / Draw</p><h1 id="module-draw" tabindex="-1">Module: Draw <a class="header-anchor" href="#module-draw" aria-label="Permalink to &quot;Module: Draw&quot;">​</a></h1><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-label="Permalink to &quot;Variables&quot;">​</a></h3><ul><li><a href="./Draw.html#brush">brush</a></li><li><a href="./Draw.html#drauu">drauu</a></li><li><a href="./Draw.html#drauuoptions">drauuOptions</a></li><li><a href="./Draw.html#draw">draw</a></li></ul><h3 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h3><ul><li><a href="./Draw.html#loadcanvas">loadCanvas</a></li><li><a href="./Draw.html#updatestate">updateState</a></li><li><a href="./Draw.html#usedraw">useDraw</a></li></ul><h2 id="variables-1" tabindex="-1">Variables <a class="header-anchor" href="#variables-1" aria-label="Permalink to &quot;Variables&quot;">​</a></h2><h3 id="brush" tabindex="-1">brush <a class="header-anchor" href="#brush" aria-label="Permalink to &quot;brush&quot;">​</a></h3><p>• <code>Const</code> <strong>brush</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>arrowEnd</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>color</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>mode</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>size</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/DeFUCC/gun-vue/blob/74f723dd/src/space/useDraw.ts#L47" target="_blank" rel="noreferrer">src/space/useDraw.ts:47</a></p><hr><h3 id="drauu" tabindex="-1">drauu <a class="header-anchor" href="#drauu" aria-label="Permalink to &quot;drauu&quot;">​</a></h3><p>• <code>Const</code> <strong>drauu</strong>: <code>Drauu</code></p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/DeFUCC/gun-vue/blob/74f723dd/src/space/useDraw.ts#L63" target="_blank" rel="noreferrer">src/space/useDraw.ts:63</a></p><hr><h3 id="drauuoptions" tabindex="-1">drauuOptions <a class="header-anchor" href="#drauuoptions" aria-label="Permalink to &quot;drauuOptions&quot;">​</a></h3><p>• <code>Const</code> <strong>drauuOptions</strong>: <code>Options</code></p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/DeFUCC/gun-vue/blob/74f723dd/src/space/useDraw.ts#L58" target="_blank" rel="noreferrer">src/space/useDraw.ts:58</a></p><hr><h3 id="draw" tabindex="-1">draw <a class="header-anchor" href="#draw" aria-label="Permalink to &quot;draw&quot;">​</a></h3><p>• <code>Const</code> <strong>draw</strong>: <code>Object</code></p><h4 id="type-declaration-1" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-1" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>canClear</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>canRedo</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>canUndo</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>clear</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>colors</code></td><td style="text-align:left;"><code>string</code>[]</td></tr><tr><td style="text-align:left;"><code>content</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>enabled</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>ing</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>initiated</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>mode</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>modes</code></td><td style="text-align:left;"><code>string</code>[]</td></tr><tr><td style="text-align:left;"><code>pinned</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>sizes</code></td><td style="text-align:left;">{ state: number; index: number; next: (n?: number) =&gt; number; prev: (n?: number) =&gt; number; }</td></tr></tbody></table><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/DeFUCC/gun-vue/blob/74f723dd/src/space/useDraw.ts#L12" target="_blank" rel="noreferrer">src/space/useDraw.ts:12</a></p><h2 id="functions-1" tabindex="-1">Functions <a class="header-anchor" href="#functions-1" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><h3 id="loadcanvas" tabindex="-1">loadCanvas <a class="header-anchor" href="#loadcanvas" aria-label="Permalink to &quot;loadCanvas&quot;">​</a></h3><p>▸ <strong>loadCanvas</strong>(): <code>void</code></p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/DeFUCC/gun-vue/blob/74f723dd/src/space/useDraw.ts#L65" target="_blank" rel="noreferrer">src/space/useDraw.ts:65</a></p><hr><h3 id="updatestate" tabindex="-1">updateState <a class="header-anchor" href="#updatestate" aria-label="Permalink to &quot;updateState&quot;">​</a></h3><p>▸ <strong>updateState</strong>(): <code>void</code></p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/DeFUCC/gun-vue/blob/74f723dd/src/space/useDraw.ts#L76" target="_blank" rel="noreferrer">src/space/useDraw.ts:76</a></p><hr><h3 id="usedraw" tabindex="-1">useDraw <a class="header-anchor" href="#usedraw" aria-label="Permalink to &quot;useDraw&quot;">​</a></h3><p>▸ <strong>useDraw</strong>(): <code>Object</code></p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Object</code></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>brush</code></td><td style="text-align:left;">{ <code>arrowEnd</code>: <code>boolean</code> = false; <code>color</code>: <code>string</code> ; <code>mode</code>: <code>string</code> = &#39;stylus&#39;; <code>size</code>: <code>number</code> = 10 }</td></tr><tr><td style="text-align:left;"><code>brush.arrowEnd</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>brush.color</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>brush.mode</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>brush.size</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>drauu</code></td><td style="text-align:left;"><code>Drauu</code></td></tr><tr><td style="text-align:left;"><code>draw</code></td><td style="text-align:left;">{ <code>canClear</code>: <code>boolean</code> = false; <code>canRedo</code>: <code>boolean</code> = false; <code>canUndo</code>: <code>boolean</code> = false; <code>clear</code>: () =&gt; <code>void</code> ; <code>colors</code>: <code>string</code>[] ; <code>content</code>: <code>string</code> = &#39;&#39;; <code>enabled</code>: <code>boolean</code> = false; <code>ing</code>: <code>boolean</code> = false; <code>initiated</code>: <code>boolean</code> = false; <code>mode</code>: <code>string</code> ; <code>modes</code>: <code>string</code>[] ; <code>pinned</code>: <code>boolean</code> ; <code>sizes</code>: { state: number; index: number; next: (n?: number) =&gt; number; prev: (n?: number) =&gt; number; } }</td></tr><tr><td style="text-align:left;"><code>draw.canClear</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>draw.canRedo</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>draw.canUndo</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>draw.clear</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>draw.colors</code></td><td style="text-align:left;"><code>string</code>[]</td></tr><tr><td style="text-align:left;"><code>draw.content</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>draw.enabled</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>draw.ing</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>draw.initiated</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>draw.mode</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>draw.modes</code></td><td style="text-align:left;"><code>string</code>[]</td></tr><tr><td style="text-align:left;"><code>draw.pinned</code></td><td style="text-align:left;"><code>boolean</code></td></tr><tr><td style="text-align:left;"><code>draw.sizes</code></td><td style="text-align:left;">{ state: number; index: number; next: (n?: number) =&gt; number; prev: (n?: number) =&gt; number; }</td></tr><tr><td style="text-align:left;"><code>loadCanvas</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr></tbody></table><h4 id="defined-in-6" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-6" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/DeFUCC/gun-vue/blob/74f723dd/src/space/useDraw.ts#L83" target="_blank" rel="noreferrer">src/space/useDraw.ts:83</a></p>',53),c=[r];function n(l,s,i,f,u,h){return t(),d("div",null,c)}const y=e(a,[["render",n]]);export{b as __pageData,y as default};
