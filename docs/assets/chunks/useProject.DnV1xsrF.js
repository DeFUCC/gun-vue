import{a as g,am as f,j as c,h as a,i as j,an as l,q as b}from"./components.DvunW5qa.js";import{ak as d,h as i}from"./framework.B82iRX0g.js";function y(o){const{user:u}=g(),e=d({id:f(6),title:o,type:"project",status:"new",public:!0,funding:!1,room:i(()=>c.pub),author:i(()=>u.pub)});async function n(r){const t=a(),s=t.user().get("projects").get(e.id).put(e,()=>{var p;e.public&&(t.user(c.pub).get("projects").get(e.id+"@"+u.pub).put(s,()=>{console.log("added project"),r&&r()},{opt:{cert:(p=c.features)==null?void 0:p.projects}}),e.title="",e.id="")})}return{newProject:e,addProject:n}}function h(o,u,e){const r=a().user().get("projects").get(o);r.get(u).put(e,()=>{r.get("updated").put(Date.now())})}function w(o){const u=a(),e=d({id:"0",type:"event"});u.user(c.pub).get("projects").get(o).map().on(async(t,s)=>{s=="cover"&&j(t)?e[s]=await u.get("#cover").get(t).then():e[s]=t});function n(t,s){h(o.slice(0,-88),t,s)}async function r(t){const s=await b(t);s&&(u.get("#cover").get(s).put(t),n("cover",s))}return{project:e,updateField:n,updateCover:r}}async function P(o){var r;const u=a(),e=l(),{user:n}=g();if(o.includes(n.pub))u.user(c.pub).get("projects").get(o).put(null,void 0,{opt:{cert:(r=c.features)==null?void 0:r.projects}});else if(c.hosts[n.pub]){const t=await n.decrypt(c.hosts[n.pub].enc);e.user().auth(t,()=>{e.user().get("projects").get(o).put(null)})}console.error("Can't delete the project")}export{y as a,P as r,w as u};
